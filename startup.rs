// generated by TurtleScript write-rust-bytecode.js
use function::Function;
use literal::*;

pub fn init(functions: &mut ~[Function], literals: &mut ~[Literal]) {
  // functions
  vec::push(functions, Function {
    id: 0,
    nargs: 0,
    max_stack: 7,
    bytecode: ~[
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 1, // set_slot_direct(1)
      0, // push_frame(0)
      2, // new_object(0)
      8, 1, // set_slot_direct(1)
      0, // push_frame(0)
      4, 1, // new_function(1)
      8, 20, // set_slot_direct(1)
      0, // push_frame(0)
      5, 20, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 21, // push_literal(1)
      3, // new_array(0)
      4, 4, // new_function(1)
      10, 3, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 20, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 84, // push_literal(1)
      3, // new_array(0)
      0, // push_frame(0)
      4, 25, // new_function(1)
      17, // over(0)
      8, 138, // set_slot_direct(1)
      10, 3, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 20, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 140, // push_literal(1)
      3, // new_array(0)
      15, // dup(0)
      1, 84, // push_literal(1)
      8, 3, // set_slot_direct(1)
      0, // push_frame(0)
      4, 28, // new_function(1)
      17, // over(0)
      8, 261, // set_slot_direct(1)
      10, 3, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 20, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 263, // push_literal(1)
      3, // new_array(0)
      0, // push_frame(0)
      4, 71, // new_function(1)
      17, // over(0)
      8, 313, // set_slot_direct(1)
      10, 3, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 20, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 316, // push_literal(1)
      3, // new_array(0)
      15, // dup(0)
      1, 263, // push_literal(1)
      8, 3, // set_slot_direct(1)
      0, // push_frame(0)
      4, 81, // new_function(1)
      17, // over(0)
      8, 385, // set_slot_direct(1)
      10, 3, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 20, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 386, // push_literal(1)
      3, // new_array(0)
      15, // dup(0)
      1, 140, // push_literal(1)
      8, 3, // set_slot_direct(1)
      15, // dup(0)
      1, 316, // push_literal(1)
      8, 5, // set_slot_direct(1)
      4, 138, // new_function(1)
      10, 3, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 1, // get_slot_direct(1)
      1, 386, // push_literal(1)
      6, // get_slot_indirect(0)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // "define"
    id: 1,
    nargs: 3,
    max_stack: 6,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 4, // set_slot_direct(1)
      15, // dup(0)
      5, 5, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 6, // set_slot_direct(1)
      15, // dup(0)
      5, 7, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 8, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 9, // set_slot_direct(1)
      0, // push_frame(0)
      4, 2, // new_function(1)
      17, // over(0)
      8, 16, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 16, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 6, // get_slot_direct(1)
      4, 3, // new_function(1)
      10, 2, // invoke(1)
      8, 9, // set_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 1, // get_slot_direct(1)
      0, // push_frame(0)
      5, 4, // get_slot_direct(1)
      0, // push_frame(0)
      5, 8, // get_slot_direct(1)
      15, // dup(0)
      7, 19, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 9, // get_slot_direct(1)
      10, 2, // invoke(1)
      9, // set_slot_indirect(0)
      1, 0, // push_literal(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // "map"
    id: 2,
    nargs: 2,
    max_stack: 6,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 10, // set_slot_direct(1)
      15, // dup(0)
      5, 5, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 11, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 13, // set_slot_direct(1)
      0, // push_frame(0)
      1, 3, // push_literal(1)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      3, // new_array(0)
      8, 13, // set_slot_direct(1)
      12, 70, // jmp(1)
      0, // push_frame(0)
      5, 13, // get_slot_direct(1)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      0, // push_frame(0)
      5, 11, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 10, // get_slot_direct(1)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      6, // get_slot_indirect(0)
      10, 1, // invoke(1)
      9, // set_slot_indirect(0)
      0, // push_frame(0)
      15, // dup(0)
      5, 12, // get_slot_direct(1)
      1, 5, // push_literal(1)
      26, // bi_add(0)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      0, // push_frame(0)
      5, 10, // get_slot_direct(1)
      5, 15, // get_slot_direct(1)
      19, // swap(0)
      24, // bi_gt(0)
      20, // un_not(0)
      13, 39, // jmp_unless(1)
      0, // push_frame(0)
      5, 13, // get_slot_direct(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function {
    id: 3,
    nargs: 1,
    max_stack: 3,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 17, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 18, // get_slot_direct(1)
      5, 1, // get_slot_direct(1)
      0, // push_frame(0)
      5, 17, // get_slot_direct(1)
      6, // get_slot_indirect(0)
      11 // return(0)
    ]
  });
  vec::push(functions, Function {
    id: 4,
    nargs: 0,
    max_stack: 3,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 22, // get_slot_direct(1)
      5, 23, // get_slot_direct(1)
      4, 5, // new_function(1)
      8, 28, // set_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 22, // get_slot_direct(1)
      5, 23, // get_slot_direct(1)
      4, 6, // new_function(1)
      8, 34, // set_slot_direct(1)
      0, // push_frame(0)
      5, 35, // get_slot_direct(1)
      5, 23, // get_slot_direct(1)
      4, 7, // new_function(1)
      8, 36, // set_slot_direct(1)
      0, // push_frame(0)
      5, 35, // get_slot_direct(1)
      5, 23, // get_slot_direct(1)
      4, 8, // new_function(1)
      8, 38, // set_slot_direct(1)
      0, // push_frame(0)
      5, 35, // get_slot_direct(1)
      5, 23, // get_slot_direct(1)
      4, 9, // new_function(1)
      8, 44, // set_slot_direct(1)
      0, // push_frame(0)
      5, 35, // get_slot_direct(1)
      5, 23, // get_slot_direct(1)
      4, 10, // new_function(1)
      8, 49, // set_slot_direct(1)
      0, // push_frame(0)
      5, 35, // get_slot_direct(1)
      5, 23, // get_slot_direct(1)
      4, 11, // new_function(1)
      8, 16, // set_slot_direct(1)
      0, // push_frame(0)
      5, 35, // get_slot_direct(1)
      5, 23, // get_slot_direct(1)
      4, 12, // new_function(1)
      8, 55, // set_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 56, // get_slot_direct(1)
      5, 23, // get_slot_direct(1)
      4, 13, // new_function(1)
      8, 65, // set_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 56, // get_slot_direct(1)
      5, 23, // get_slot_direct(1)
      4, 18, // new_function(1)
      8, 62, // set_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 56, // get_slot_direct(1)
      5, 23, // get_slot_direct(1)
      1, 72, // push_literal(1)
      4, 19, // new_function(1)
      9, // set_slot_indirect(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 56, // get_slot_direct(1)
      5, 23, // get_slot_direct(1)
      4, 20, // new_function(1)
      8, 76, // set_slot_direct(1)
      1, 71, // push_literal(1)
      1, 77, // push_literal(1)
      4, 21, // new_function(1)
      9, // set_slot_indirect(0)
      1, 67, // push_literal(1)
      1, 77, // push_literal(1)
      4, 22, // new_function(1)
      9, // set_slot_indirect(0)
      1, 71, // push_literal(1)
      1, 81, // push_literal(1)
      4, 23, // new_function(1)
      9, // set_slot_indirect(0)
      1, 67, // push_literal(1)
      1, 81, // push_literal(1)
      4, 24, // new_function(1)
      9, // set_slot_indirect(0)
      1, 0, // push_literal(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // ".indexOf"
    id: 5,
    nargs: 2,
    max_stack: 4,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 24, // set_slot_direct(1)
      15, // dup(0)
      5, 5, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 25, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 26, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 25, // get_slot_direct(1)
      15, // dup(0)
      20, // un_not(0)
      13, 39, // jmp_unless(1)
      14, // pop(0)
      1, 3, // push_literal(1)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      1, 3, // push_literal(1)
      8, 26, // set_slot_direct(1)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 15, // get_slot_direct(1)
      24, // bi_gt(0)
      13, 65, // jmp_unless(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 15, // get_slot_direct(1)
      8, 12, // set_slot_direct(1)
      12, 151, // jmp(1)
      0, // push_frame(0)
      1, 3, // push_literal(1)
      8, 26, // set_slot_direct(1)
      12, 83, // jmp(1)
      0, // push_frame(0)
      15, // dup(0)
      5, 26, // get_slot_direct(1)
      1, 5, // push_literal(1)
      26, // bi_add(0)
      8, 26, // set_slot_direct(1)
      0, // push_frame(0)
      5, 26, // get_slot_direct(1)
      0, // push_frame(0)
      5, 24, // get_slot_direct(1)
      5, 15, // get_slot_direct(1)
      19, // swap(0)
      24, // bi_gt(0)
      15, // dup(0)
      13, 126, // jmp_unless(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      15, // dup(0)
      7, 27, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      0, // push_frame(0)
      5, 26, // get_slot_direct(1)
      26, // bi_add(0)
      10, 1, // invoke(1)
      0, // push_frame(0)
      5, 24, // get_slot_direct(1)
      15, // dup(0)
      7, 27, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 26, // get_slot_direct(1)
      10, 1, // invoke(1)
      23, // bi_eq(0)
      20, // un_not(0)
      13, 74, // jmp_unless(1)
      0, // push_frame(0)
      5, 26, // get_slot_direct(1)
      0, // push_frame(0)
      5, 24, // get_slot_direct(1)
      5, 15, // get_slot_direct(1)
      23, // bi_eq(0)
      13, 142, // jmp_unless(1)
      12, 164, // jmp(1)
      0, // push_frame(0)
      15, // dup(0)
      5, 12, // get_slot_direct(1)
      1, 5, // push_literal(1)
      26, // bi_add(0)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 15, // get_slot_direct(1)
      19, // swap(0)
      24, // bi_gt(0)
      20, // un_not(0)
      13, 67, // jmp_unless(1)
      0, // push_frame(0)
      5, 26, // get_slot_direct(1)
      0, // push_frame(0)
      5, 24, // get_slot_direct(1)
      5, 15, // get_slot_direct(1)
      23, // bi_eq(0)
      13, 180, // jmp_unless(1)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      12, 183, // jmp(1)
      1, 5, // push_literal(1)
      21, // un_minus(0)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // ".trim"
    id: 6,
    nargs: 0,
    max_stack: 6,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 29, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 30, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      8, 29, // set_slot_direct(1)
      0, // push_frame(0)
      5, 29, // get_slot_direct(1)
      5, 15, // get_slot_direct(1)
      1, 3, // push_literal(1)
      23, // bi_eq(0)
      13, 39, // jmp_unless(1)
      0, // push_frame(0)
      5, 29, // get_slot_direct(1)
      11, // return(0)
      0, // push_frame(0)
      1, 31, // push_literal(1)
      8, 30, // set_slot_direct(1)
      0, // push_frame(0)
      1, 3, // push_literal(1)
      8, 12, // set_slot_direct(1)
      12, 104, // jmp(1)
      0, // push_frame(0)
      5, 30, // get_slot_direct(1)
      15, // dup(0)
      7, 28, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 29, // get_slot_direct(1)
      15, // dup(0)
      7, 27, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      10, 1, // invoke(1)
      10, 1, // invoke(1)
      1, 5, // push_literal(1)
      21, // un_minus(0)
      23, // bi_eq(0)
      13, 95, // jmp_unless(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 29, // get_slot_direct(1)
      15, // dup(0)
      7, 32, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      10, 1, // invoke(1)
      8, 29, // set_slot_direct(1)
      12, 117, // jmp(1)
      0, // push_frame(0)
      15, // dup(0)
      5, 12, // get_slot_direct(1)
      1, 5, // push_literal(1)
      26, // bi_add(0)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      0, // push_frame(0)
      5, 29, // get_slot_direct(1)
      5, 15, // get_slot_direct(1)
      19, // swap(0)
      24, // bi_gt(0)
      20, // un_not(0)
      13, 51, // jmp_unless(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 29, // get_slot_direct(1)
      5, 15, // get_slot_direct(1)
      1, 5, // push_literal(1)
      27, // bi_sub(0)
      8, 12, // set_slot_direct(1)
      12, 188, // jmp(1)
      0, // push_frame(0)
      5, 30, // get_slot_direct(1)
      15, // dup(0)
      7, 28, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 29, // get_slot_direct(1)
      15, // dup(0)
      7, 27, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      10, 1, // invoke(1)
      10, 1, // invoke(1)
      1, 5, // push_literal(1)
      21, // un_minus(0)
      23, // bi_eq(0)
      13, 179, // jmp_unless(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 29, // get_slot_direct(1)
      15, // dup(0)
      7, 32, // get_slot_direct_check(1)
      19, // swap(0)
      1, 3, // push_literal(1)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      1, 5, // push_literal(1)
      26, // bi_add(0)
      10, 2, // invoke(1)
      8, 29, // set_slot_direct(1)
      12, 197, // jmp(1)
      0, // push_frame(0)
      15, // dup(0)
      5, 12, // get_slot_direct(1)
      1, 5, // push_literal(1)
      27, // bi_sub(0)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      1, 3, // push_literal(1)
      25, // bi_gte(0)
      20, // un_not(0)
      13, 130, // jmp_unless(1)
      0, // push_frame(0)
      5, 30, // get_slot_direct(1)
      15, // dup(0)
      7, 28, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 29, // get_slot_direct(1)
      15, // dup(0)
      7, 27, // get_slot_direct_check(1)
      19, // swap(0)
      1, 3, // push_literal(1)
      10, 1, // invoke(1)
      10, 1, // invoke(1)
      1, 5, // push_literal(1)
      21, // un_minus(0)
      23, // bi_eq(0)
      13, 228, // jmp_unless(1)
      0, // push_frame(0)
      5, 29, // get_slot_direct(1)
      12, 230, // jmp(1)
      1, 33, // push_literal(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // ".push"
    id: 7,
    nargs: 0,
    max_stack: 4,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 26, // set_slot_direct(1)
      0, // push_frame(0)
      1, 3, // push_literal(1)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      1, 5, // push_literal(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 15, // get_slot_direct(1)
      28, // bi_mul(0)
      15, // dup(0)
      20, // un_not(0)
      13, 35, // jmp_unless(1)
      14, // pop(0)
      1, 3, // push_literal(1)
      8, 26, // set_slot_direct(1)
      12, 71, // jmp(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 26, // get_slot_direct(1)
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      6, // get_slot_indirect(0)
      9, // set_slot_indirect(0)
      0, // push_frame(0)
      15, // dup(0)
      5, 12, // get_slot_direct(1)
      1, 5, // push_literal(1)
      26, // bi_add(0)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      15, // dup(0)
      5, 26, // get_slot_direct(1)
      1, 5, // push_literal(1)
      26, // bi_add(0)
      8, 26, // set_slot_direct(1)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      5, 15, // get_slot_direct(1)
      19, // swap(0)
      24, // bi_gt(0)
      20, // un_not(0)
      13, 39, // jmp_unless(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 26, // get_slot_direct(1)
      8, 15, // set_slot_direct(1)
      0, // push_frame(0)
      5, 26, // get_slot_direct(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // ".pop"
    id: 8,
    nargs: 0,
    max_stack: 4,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 37, // set_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 15, // get_slot_direct(1)
      1, 3, // push_literal(1)
      23, // bi_eq(0)
      13, 22, // jmp_unless(1)
      1, 0, // push_literal(1)
      11, // return(0)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 15, // get_slot_direct(1)
      1, 5, // push_literal(1)
      27, // bi_sub(0)
      6, // get_slot_indirect(0)
      8, 37, // set_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      15, // dup(0)
      5, 15, // get_slot_direct(1)
      1, 5, // push_literal(1)
      27, // bi_sub(0)
      8, 15, // set_slot_direct(1)
      0, // push_frame(0)
      5, 37, // get_slot_direct(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // ".concat"
    id: 9,
    nargs: 0,
    max_stack: 4,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 39, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 26, // set_slot_direct(1)
      0, // push_frame(0)
      3, // new_array(0)
      8, 39, // set_slot_direct(1)
      0, // push_frame(0)
      1, 3, // push_literal(1)
      8, 12, // set_slot_direct(1)
      12, 53, // jmp(1)
      0, // push_frame(0)
      5, 39, // get_slot_direct(1)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      6, // get_slot_indirect(0)
      9, // set_slot_indirect(0)
      0, // push_frame(0)
      15, // dup(0)
      5, 12, // get_slot_direct(1)
      1, 5, // push_literal(1)
      26, // bi_add(0)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 15, // get_slot_direct(1)
      19, // swap(0)
      24, // bi_gt(0)
      20, // un_not(0)
      13, 30, // jmp_unless(1)
      0, // push_frame(0)
      1, 3, // push_literal(1)
      8, 12, // set_slot_direct(1)
      12, 191, // jmp(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 40, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      6, // get_slot_indirect(0)
      8, 40, // set_slot_direct(1)
      0, // push_frame(0)
      5, 40, // get_slot_direct(1)
      22, // un_typeof(0)
      1, 41, // push_literal(1)
      23, // bi_eq(0)
      15, // dup(0)
      13, 121, // jmp_unless(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 40, // get_slot_direct(1)
      1, 42, // push_literal(1)
      23, // bi_eq(0)
      20, // un_not(0)
      15, // dup(0)
      13, 121, // jmp_unless(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 40, // get_slot_direct(1)
      15, // dup(0)
      7, 43, // get_slot_direct_check(1)
      19, // swap(0)
      1, 15, // push_literal(1)
      10, 1, // invoke(1)
      13, 170, // jmp_unless(1)
      0, // push_frame(0)
      1, 3, // push_literal(1)
      8, 26, // set_slot_direct(1)
      12, 155, // jmp(1)
      0, // push_frame(0)
      5, 39, // get_slot_direct(1)
      0, // push_frame(0)
      5, 39, // get_slot_direct(1)
      5, 15, // get_slot_direct(1)
      0, // push_frame(0)
      5, 40, // get_slot_direct(1)
      0, // push_frame(0)
      5, 26, // get_slot_direct(1)
      6, // get_slot_indirect(0)
      9, // set_slot_indirect(0)
      0, // push_frame(0)
      15, // dup(0)
      5, 26, // get_slot_direct(1)
      1, 5, // push_literal(1)
      26, // bi_add(0)
      8, 26, // set_slot_direct(1)
      0, // push_frame(0)
      5, 26, // get_slot_direct(1)
      0, // push_frame(0)
      5, 40, // get_slot_direct(1)
      5, 15, // get_slot_direct(1)
      19, // swap(0)
      24, // bi_gt(0)
      20, // un_not(0)
      13, 130, // jmp_unless(1)
      12, 182, // jmp(1)
      0, // push_frame(0)
      5, 39, // get_slot_direct(1)
      0, // push_frame(0)
      5, 39, // get_slot_direct(1)
      5, 15, // get_slot_direct(1)
      0, // push_frame(0)
      5, 40, // get_slot_direct(1)
      9, // set_slot_indirect(0)
      0, // push_frame(0)
      15, // dup(0)
      5, 12, // get_slot_direct(1)
      1, 5, // push_literal(1)
      26, // bi_add(0)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      5, 15, // get_slot_direct(1)
      19, // swap(0)
      24, // bi_gt(0)
      20, // un_not(0)
      13, 73, // jmp_unless(1)
      0, // push_frame(0)
      5, 39, // get_slot_direct(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // ".forEach"
    id: 10,
    nargs: 2,
    max_stack: 6,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 45, // set_slot_direct(1)
      15, // dup(0)
      5, 5, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 46, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 47, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      1, 5, // push_literal(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 15, // get_slot_direct(1)
      28, // bi_mul(0)
      15, // dup(0)
      20, // un_not(0)
      13, 44, // jmp_unless(1)
      14, // pop(0)
      1, 3, // push_literal(1)
      8, 47, // set_slot_direct(1)
      0, // push_frame(0)
      1, 3, // push_literal(1)
      8, 12, // set_slot_direct(1)
      12, 102, // jmp(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      15, // dup(0)
      7, 43, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      10, 1, // invoke(1)
      13, 93, // jmp_unless(1)
      0, // push_frame(0)
      5, 45, // get_slot_direct(1)
      15, // dup(0)
      7, 48, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 46, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      6, // get_slot_indirect(0)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      10, 4, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      15, // dup(0)
      5, 12, // get_slot_direct(1)
      1, 5, // push_literal(1)
      26, // bi_add(0)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      0, // push_frame(0)
      5, 47, // get_slot_direct(1)
      19, // swap(0)
      24, // bi_gt(0)
      20, // un_not(0)
      13, 53, // jmp_unless(1)
      1, 0, // push_literal(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // ".map"
    id: 11,
    nargs: 1,
    max_stack: 8,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 50, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 47, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 51, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 52, // set_slot_direct(1)
      0, // push_frame(0)
      1, 5, // push_literal(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 15, // get_slot_direct(1)
      28, // bi_mul(0)
      15, // dup(0)
      20, // un_not(0)
      13, 47, // jmp_unless(1)
      14, // pop(0)
      1, 3, // push_literal(1)
      8, 47, // set_slot_direct(1)
      0, // push_frame(0)
      3, // new_array(0)
      8, 51, // set_slot_direct(1)
      0, // push_frame(0)
      1, 3, // push_literal(1)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      1, 5, // push_literal(1)
      6, // get_slot_indirect(0)
      8, 52, // set_slot_direct(1)
      12, 124, // jmp(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      15, // dup(0)
      7, 43, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      10, 1, // invoke(1)
      13, 115, // jmp_unless(1)
      0, // push_frame(0)
      5, 51, // get_slot_direct(1)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      0, // push_frame(0)
      5, 50, // get_slot_direct(1)
      15, // dup(0)
      7, 48, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 52, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      6, // get_slot_indirect(0)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      10, 4, // invoke(1)
      9, // set_slot_indirect(0)
      0, // push_frame(0)
      15, // dup(0)
      5, 12, // get_slot_direct(1)
      1, 5, // push_literal(1)
      26, // bi_add(0)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      0, // push_frame(0)
      5, 47, // get_slot_direct(1)
      19, // swap(0)
      24, // bi_gt(0)
      20, // un_not(0)
      13, 69, // jmp_unless(1)
      0, // push_frame(0)
      5, 51, // get_slot_direct(1)
      0, // push_frame(0)
      5, 47, // get_slot_direct(1)
      8, 15, // set_slot_direct(1)
      0, // push_frame(0)
      5, 51, // get_slot_direct(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // ".join"
    id: 12,
    nargs: 1,
    max_stack: 4,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 53, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 39, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      1, 33, // push_literal(1)
      8, 39, // set_slot_direct(1)
      0, // push_frame(0)
      1, 3, // push_literal(1)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 53, // get_slot_direct(1)
      15, // dup(0)
      20, // un_not(0)
      13, 42, // jmp_unless(1)
      14, // pop(0)
      1, 54, // push_literal(1)
      8, 53, // set_slot_direct(1)
      12, 91, // jmp(1)
      0, // push_frame(0)
      15, // dup(0)
      5, 39, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      6, // get_slot_indirect(0)
      26, // bi_add(0)
      8, 39, // set_slot_direct(1)
      0, // push_frame(0)
      15, // dup(0)
      5, 12, // get_slot_direct(1)
      1, 5, // push_literal(1)
      26, // bi_add(0)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 15, // get_slot_direct(1)
      19, // swap(0)
      24, // bi_gt(0)
      13, 91, // jmp_unless(1)
      0, // push_frame(0)
      15, // dup(0)
      5, 39, // get_slot_direct(1)
      0, // push_frame(0)
      5, 53, // get_slot_direct(1)
      26, // bi_add(0)
      8, 39, // set_slot_direct(1)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 15, // get_slot_direct(1)
      19, // swap(0)
      24, // bi_gt(0)
      20, // un_not(0)
      13, 46, // jmp_unless(1)
      0, // push_frame(0)
      5, 39, // get_slot_direct(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // ".bind"
    id: 13,
    nargs: 0,
    max_stack: 5,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 57, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 58, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 59, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 60, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      8, 57, // set_slot_direct(1)
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      5, 15, // get_slot_direct(1)
      1, 3, // push_literal(1)
      23, // bi_eq(0)
      13, 49, // jmp_unless(1)
      0, // push_frame(0)
      5, 57, // get_slot_direct(1)
      11, // return(0)
      0, // push_frame(0)
      4, 14, // new_function(1)
      8, 58, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      1, 3, // push_literal(1)
      6, // get_slot_indirect(0)
      8, 59, // set_slot_direct(1)
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      5, 15, // get_slot_direct(1)
      1, 5, // push_literal(1)
      23, // bi_eq(0)
      13, 88, // jmp_unless(1)
      0, // push_frame(0)
      5, 58, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      4, 16, // new_function(1)
      17, // over(0)
      8, 63, // set_slot_direct(1)
      10, 1, // invoke(1)
      11, // return(0)
      0, // push_frame(0)
      3, // new_array(0)
      8, 60, // set_slot_direct(1)
      0, // push_frame(0)
      1, 5, // push_literal(1)
      8, 12, // set_slot_direct(1)
      12, 125, // jmp(1)
      0, // push_frame(0)
      5, 60, // get_slot_direct(1)
      15, // dup(0)
      7, 36, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      6, // get_slot_indirect(0)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      15, // dup(0)
      5, 12, // get_slot_direct(1)
      1, 5, // push_literal(1)
      26, // bi_add(0)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      5, 15, // get_slot_direct(1)
      19, // swap(0)
      24, // bi_gt(0)
      20, // un_not(0)
      13, 99, // jmp_unless(1)
      0, // push_frame(0)
      5, 58, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      4, 17, // new_function(1)
      17, // over(0)
      8, 64, // set_slot_direct(1)
      10, 1, // invoke(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // "addHasInstance"
    id: 14,
    nargs: 1,
    max_stack: 3,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 11, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 11, // get_slot_direct(1)
      4, 15, // new_function(1)
      8, 62, // set_slot_direct(1)
      0, // push_frame(0)
      5, 11, // get_slot_direct(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // ".hasInstance"
    id: 15,
    nargs: 1,
    max_stack: 3,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 61, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 18, // get_slot_direct(1)
      5, 57, // get_slot_direct(1)
      15, // dup(0)
      7, 62, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 61, // get_slot_direct(1)
      10, 1, // invoke(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // "bind0"
    id: 16,
    nargs: 0,
    max_stack: 4,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 57, // get_slot_direct(1)
      15, // dup(0)
      7, 19, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 59, // get_slot_direct(1)
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      10, 2, // invoke(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // "bindN"
    id: 17,
    nargs: 0,
    max_stack: 7,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 57, // get_slot_direct(1)
      15, // dup(0)
      7, 19, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 59, // get_slot_direct(1)
      0, // push_frame(0)
      5, 35, // get_slot_direct(1)
      5, 23, // get_slot_direct(1)
      5, 44, // get_slot_direct(1)
      15, // dup(0)
      7, 19, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 60, // get_slot_direct(1)
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      10, 2, // invoke(1)
      10, 2, // invoke(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // ".hasInstance"
    id: 18,
    nargs: 1,
    max_stack: 3,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 61, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 66, // set_slot_direct(1)
      0, // push_frame(0)
      5, 61, // get_slot_direct(1)
      22, // un_typeof(0)
      1, 41, // push_literal(1)
      23, // bi_eq(0)
      20, // un_not(0)
      13, 29, // jmp_unless(1)
      1, 67, // push_literal(1)
      11, // return(0)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 23, // get_slot_direct(1)
      8, 66, // set_slot_direct(1)
      0, // push_frame(0)
      5, 66, // get_slot_direct(1)
      22, // un_typeof(0)
      1, 41, // push_literal(1)
      23, // bi_eq(0)
      20, // un_not(0)
      13, 59, // jmp_unless(1)
      0, // push_frame(0)
      5, 68, // get_slot_direct(1)
      15, // dup(0)
      7, 69, // get_slot_direct_check(1)
      19, // swap(0)
      1, 70, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      12, 92, // jmp(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 61, // get_slot_direct(1)
      5, 18, // get_slot_direct(1)
      8, 61, // set_slot_direct(1)
      0, // push_frame(0)
      5, 61, // get_slot_direct(1)
      1, 42, // push_literal(1)
      23, // bi_eq(0)
      13, 80, // jmp_unless(1)
      1, 67, // push_literal(1)
      11, // return(0)
      0, // push_frame(0)
      5, 66, // get_slot_direct(1)
      0, // push_frame(0)
      5, 61, // get_slot_direct(1)
      23, // bi_eq(0)
      13, 92, // jmp_unless(1)
      1, 71, // push_literal(1)
      11, // return(0)
      1, 71, // push_literal(1)
      20, // un_not(0)
      13, 61, // jmp_unless(1)
      1, 0, // push_literal(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function {
    id: 19,
    nargs: 0,
    max_stack: 5,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 41, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 39, // set_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 23, // get_slot_direct(1)
      22, // un_typeof(0)
      1, 41, // push_literal(1)
      23, // bi_eq(0)
      13, 44, // jmp_unless(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 68, // get_slot_direct(1)
      15, // dup(0)
      7, 73, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 23, // get_slot_direct(1)
      10, 1, // invoke(1)
      8, 41, // set_slot_direct(1)
      12, 48, // jmp(1)
      0, // push_frame(0)
      2, // new_object(0)
      8, 41, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      15, // dup(0)
      7, 19, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 41, // get_slot_direct(1)
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      10, 2, // invoke(1)
      8, 39, // set_slot_direct(1)
      0, // push_frame(0)
      5, 39, // get_slot_direct(1)
      22, // un_typeof(0)
      1, 41, // push_literal(1)
      23, // bi_eq(0)
      13, 79, // jmp_unless(1)
      0, // push_frame(0)
      5, 39, // get_slot_direct(1)
      11, // return(0)
      0, // push_frame(0)
      5, 41, // get_slot_direct(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // ".toString"
    id: 20,
    nargs: 0,
    max_stack: 3,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 39, // set_slot_direct(1)
      0, // push_frame(0)
      1, 74, // push_literal(1)
      8, 39, // set_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 4, // get_slot_direct(1)
      13, 33, // jmp_unless(1)
      0, // push_frame(0)
      15, // dup(0)
      5, 39, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 4, // get_slot_direct(1)
      26, // bi_add(0)
      8, 39, // set_slot_direct(1)
      0, // push_frame(0)
      15, // dup(0)
      5, 39, // get_slot_direct(1)
      1, 75, // push_literal(1)
      26, // bi_add(0)
      8, 39, // set_slot_direct(1)
      0, // push_frame(0)
      5, 39, // get_slot_direct(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function {
    id: 21,
    nargs: 3,
    max_stack: 5,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 78, // set_slot_direct(1)
      15, // dup(0)
      5, 5, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 79, // set_slot_direct(1)
      15, // dup(0)
      5, 7, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 80, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 80, // get_slot_direct(1)
      15, // dup(0)
      7, 48, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 78, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 79, // get_slot_direct(1)
      15, // dup(0)
      7, 48, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 78, // get_slot_direct(1)
      10, 1, // invoke(1)
      15, // dup(0)
      7, 77, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 78, // get_slot_direct(1)
      0, // push_frame(0)
      5, 79, // get_slot_direct(1)
      0, // push_frame(0)
      5, 80, // get_slot_direct(1)
      10, 3, // invoke(1)
      14, // pop(0)
      1, 0, // push_literal(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function {
    id: 22,
    nargs: 3,
    max_stack: 3,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 78, // set_slot_direct(1)
      15, // dup(0)
      5, 5, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 79, // set_slot_direct(1)
      15, // dup(0)
      5, 7, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 80, // set_slot_direct(1)
      14, // pop(0)
      1, 0, // push_literal(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function {
    id: 23,
    nargs: 3,
    max_stack: 3,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 78, // set_slot_direct(1)
      15, // dup(0)
      5, 5, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 82, // set_slot_direct(1)
      15, // dup(0)
      5, 7, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 83, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 82, // get_slot_direct(1)
      15, // dup(0)
      7, 48, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 78, // get_slot_direct(1)
      10, 1, // invoke(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function {
    id: 24,
    nargs: 3,
    max_stack: 3,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 78, // set_slot_direct(1)
      15, // dup(0)
      5, 5, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 82, // set_slot_direct(1)
      15, // dup(0)
      5, 7, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 83, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 83, // get_slot_direct(1)
      15, // dup(0)
      7, 48, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 78, // get_slot_direct(1)
      10, 1, // invoke(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // "make_tokenize"
    id: 25,
    nargs: 0,
    max_stack: 3,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      4, 26, // new_function(1)
      17, // over(0)
      8, 84, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 84, // get_slot_direct(1)
      1, 84, // push_literal(1)
      8, 137, // set_slot_direct(1)
      0, // push_frame(0)
      5, 84, // get_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 138, // get_slot_direct(1)
      8, 139, // set_slot_direct(1)
      0, // push_frame(0)
      5, 84, // get_slot_direct(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // "tokenize"
    id: 26,
    nargs: 4,
    max_stack: 8,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 78, // set_slot_direct(1)
      15, // dup(0)
      5, 5, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 85, // set_slot_direct(1)
      15, // dup(0)
      5, 7, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 86, // set_slot_direct(1)
      15, // dup(0)
      5, 87, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 88, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 89, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 25, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 15, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 90, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 91, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 29, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 39, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 92, // set_slot_direct(1)
      0, // push_frame(0)
      1, 3, // push_literal(1)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 78, // get_slot_direct(1)
      5, 15, // get_slot_direct(1)
      8, 15, // set_slot_direct(1)
      0, // push_frame(0)
      3, // new_array(0)
      8, 39, // set_slot_direct(1)
      0, // push_frame(0)
      4, 27, // new_function(1)
      8, 92, // set_slot_direct(1)
      0, // push_frame(0)
      5, 78, // get_slot_direct(1)
      20, // un_not(0)
      13, 108, // jmp_unless(1)
      1, 0, // push_literal(1)
      11, // return(0)
      0, // push_frame(0)
      5, 85, // get_slot_direct(1)
      22, // un_typeof(0)
      1, 96, // push_literal(1)
      23, // bi_eq(0)
      20, // un_not(0)
      13, 123, // jmp_unless(1)
      0, // push_frame(0)
      1, 97, // push_literal(1)
      8, 85, // set_slot_direct(1)
      0, // push_frame(0)
      5, 86, // get_slot_direct(1)
      22, // un_typeof(0)
      1, 96, // push_literal(1)
      23, // bi_eq(0)
      20, // un_not(0)
      13, 138, // jmp_unless(1)
      0, // push_frame(0)
      1, 98, // push_literal(1)
      8, 86, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 78, // get_slot_direct(1)
      15, // dup(0)
      7, 27, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      10, 1, // invoke(1)
      8, 89, // set_slot_direct(1)
      12, 1963, // jmp(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      8, 25, // set_slot_direct(1)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      1, 99, // push_literal(1)
      19, // swap(0)
      25, // bi_gte(0)
      13, 196, // jmp_unless(1)
      0, // push_frame(0)
      15, // dup(0)
      5, 12, // get_slot_direct(1)
      1, 5, // push_literal(1)
      26, // bi_add(0)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 78, // get_slot_direct(1)
      15, // dup(0)
      7, 27, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      10, 1, // invoke(1)
      8, 89, // set_slot_direct(1)
      12, 1963, // jmp(1)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      1, 10, // push_literal(1)
      25, // bi_gte(0)
      15, // dup(0)
      13, 213, // jmp_unless(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      1, 100, // push_literal(1)
      19, // swap(0)
      25, // bi_gte(0)
      15, // dup(0)
      20, // un_not(0)
      13, 257, // jmp_unless(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      1, 101, // push_literal(1)
      25, // bi_gte(0)
      15, // dup(0)
      13, 235, // jmp_unless(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      1, 102, // push_literal(1)
      19, // swap(0)
      25, // bi_gte(0)
      15, // dup(0)
      20, // un_not(0)
      13, 257, // jmp_unless(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      1, 103, // push_literal(1)
      23, // bi_eq(0)
      15, // dup(0)
      20, // un_not(0)
      13, 257, // jmp_unless(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      1, 104, // push_literal(1)
      23, // bi_eq(0)
      13, 429, // jmp_unless(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      8, 29, // set_slot_direct(1)
      0, // push_frame(0)
      15, // dup(0)
      5, 12, // get_slot_direct(1)
      1, 5, // push_literal(1)
      26, // bi_add(0)
      8, 12, // set_slot_direct(1)
      12, 399, // jmp(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 78, // get_slot_direct(1)
      15, // dup(0)
      7, 27, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      10, 1, // invoke(1)
      8, 89, // set_slot_direct(1)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      1, 10, // push_literal(1)
      25, // bi_gte(0)
      15, // dup(0)
      13, 308, // jmp_unless(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      1, 100, // push_literal(1)
      19, // swap(0)
      25, // bi_gte(0)
      15, // dup(0)
      20, // un_not(0)
      13, 374, // jmp_unless(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      1, 101, // push_literal(1)
      25, // bi_gte(0)
      15, // dup(0)
      13, 330, // jmp_unless(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      1, 102, // push_literal(1)
      19, // swap(0)
      25, // bi_gte(0)
      15, // dup(0)
      20, // un_not(0)
      13, 374, // jmp_unless(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      1, 105, // push_literal(1)
      25, // bi_gte(0)
      15, // dup(0)
      13, 352, // jmp_unless(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      1, 106, // push_literal(1)
      19, // swap(0)
      25, // bi_gte(0)
      15, // dup(0)
      20, // un_not(0)
      13, 374, // jmp_unless(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      1, 104, // push_literal(1)
      23, // bi_eq(0)
      15, // dup(0)
      20, // un_not(0)
      13, 374, // jmp_unless(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      1, 103, // push_literal(1)
      23, // bi_eq(0)
      13, 397, // jmp_unless(1)
      0, // push_frame(0)
      15, // dup(0)
      5, 29, // get_slot_direct(1)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      26, // bi_add(0)
      8, 29, // set_slot_direct(1)
      0, // push_frame(0)
      15, // dup(0)
      5, 12, // get_slot_direct(1)
      1, 5, // push_literal(1)
      26, // bi_add(0)
      8, 12, // set_slot_direct(1)
      12, 399, // jmp(1)
      12, 404, // jmp(1)
      1, 71, // push_literal(1)
      20, // un_not(0)
      13, 276, // jmp_unless(1)
      0, // push_frame(0)
      5, 39, // get_slot_direct(1)
      15, // dup(0)
      7, 36, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 92, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 4, // push_literal(1)
      0, // push_frame(0)
      5, 29, // get_slot_direct(1)
      10, 2, // invoke(1)
      10, 1, // invoke(1)
      14, // pop(0)
      12, 1963, // jmp(1)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      1, 105, // push_literal(1)
      25, // bi_gte(0)
      15, // dup(0)
      13, 446, // jmp_unless(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      1, 106, // push_literal(1)
      19, // swap(0)
      25, // bi_gte(0)
      15, // dup(0)
      20, // un_not(0)
      13, 502, // jmp_unless(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      1, 107, // push_literal(1)
      23, // bi_eq(0)
      15, // dup(0)
      13, 502, // jmp_unless(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 78, // get_slot_direct(1)
      15, // dup(0)
      7, 27, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      1, 5, // push_literal(1)
      26, // bi_add(0)
      10, 1, // invoke(1)
      1, 105, // push_literal(1)
      25, // bi_gte(0)
      15, // dup(0)
      13, 502, // jmp_unless(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 78, // get_slot_direct(1)
      15, // dup(0)
      7, 27, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      1, 5, // push_literal(1)
      26, // bi_add(0)
      10, 1, // invoke(1)
      1, 106, // push_literal(1)
      19, // swap(0)
      25, // bi_gte(0)
      13, 1033, // jmp_unless(1)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      1, 107, // push_literal(1)
      23, // bi_eq(0)
      13, 519, // jmp_unless(1)
      0, // push_frame(0)
      1, 33, // push_literal(1)
      8, 29, // set_slot_direct(1)
      12, 597, // jmp(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      8, 29, // set_slot_direct(1)
      0, // push_frame(0)
      15, // dup(0)
      5, 12, // get_slot_direct(1)
      1, 5, // push_literal(1)
      26, // bi_add(0)
      8, 12, // set_slot_direct(1)
      12, 592, // jmp(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 78, // get_slot_direct(1)
      15, // dup(0)
      7, 27, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      10, 1, // invoke(1)
      8, 89, // set_slot_direct(1)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      1, 105, // push_literal(1)
      19, // swap(0)
      24, // bi_gt(0)
      15, // dup(0)
      20, // un_not(0)
      13, 569, // jmp_unless(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      1, 106, // push_literal(1)
      24, // bi_gt(0)
      13, 573, // jmp_unless(1)
      12, 597, // jmp(1)
      0, // push_frame(0)
      15, // dup(0)
      5, 12, // get_slot_direct(1)
      1, 5, // push_literal(1)
      26, // bi_add(0)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      15, // dup(0)
      5, 29, // get_slot_direct(1)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      26, // bi_add(0)
      8, 29, // set_slot_direct(1)
      1, 71, // push_literal(1)
      20, // un_not(0)
      13, 536, // jmp_unless(1)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      1, 107, // push_literal(1)
      23, // bi_eq(0)
      13, 687, // jmp_unless(1)
      0, // push_frame(0)
      15, // dup(0)
      5, 12, // get_slot_direct(1)
      1, 5, // push_literal(1)
      26, // bi_add(0)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      15, // dup(0)
      5, 29, // get_slot_direct(1)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      26, // bi_add(0)
      8, 29, // set_slot_direct(1)
      12, 682, // jmp(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 78, // get_slot_direct(1)
      15, // dup(0)
      7, 27, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      10, 1, // invoke(1)
      8, 89, // set_slot_direct(1)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      1, 105, // push_literal(1)
      19, // swap(0)
      24, // bi_gt(0)
      15, // dup(0)
      20, // un_not(0)
      13, 659, // jmp_unless(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      1, 106, // push_literal(1)
      24, // bi_gt(0)
      13, 663, // jmp_unless(1)
      12, 687, // jmp(1)
      0, // push_frame(0)
      15, // dup(0)
      5, 12, // get_slot_direct(1)
      1, 5, // push_literal(1)
      26, // bi_add(0)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      15, // dup(0)
      5, 29, // get_slot_direct(1)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      26, // bi_add(0)
      8, 29, // set_slot_direct(1)
      1, 71, // push_literal(1)
      20, // un_not(0)
      13, 626, // jmp_unless(1)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      1, 40, // push_literal(1)
      23, // bi_eq(0)
      15, // dup(0)
      20, // un_not(0)
      13, 704, // jmp_unless(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      1, 108, // push_literal(1)
      23, // bi_eq(0)
      13, 898, // jmp_unless(1)
      0, // push_frame(0)
      15, // dup(0)
      5, 12, // get_slot_direct(1)
      1, 5, // push_literal(1)
      26, // bi_add(0)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      15, // dup(0)
      5, 29, // get_slot_direct(1)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      26, // bi_add(0)
      8, 29, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 78, // get_slot_direct(1)
      15, // dup(0)
      7, 27, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      10, 1, // invoke(1)
      8, 89, // set_slot_direct(1)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      1, 109, // push_literal(1)
      23, // bi_eq(0)
      15, // dup(0)
      20, // un_not(0)
      13, 757, // jmp_unless(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      1, 110, // push_literal(1)
      23, // bi_eq(0)
      13, 793, // jmp_unless(1)
      0, // push_frame(0)
      15, // dup(0)
      5, 12, // get_slot_direct(1)
      1, 5, // push_literal(1)
      26, // bi_add(0)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      15, // dup(0)
      5, 29, // get_slot_direct(1)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      26, // bi_add(0)
      8, 29, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 78, // get_slot_direct(1)
      15, // dup(0)
      7, 27, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      10, 1, // invoke(1)
      8, 89, // set_slot_direct(1)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      1, 105, // push_literal(1)
      19, // swap(0)
      24, // bi_gt(0)
      15, // dup(0)
      20, // un_not(0)
      13, 811, // jmp_unless(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      1, 106, // push_literal(1)
      24, // bi_gt(0)
      13, 835, // jmp_unless(1)
      0, // push_frame(0)
      5, 92, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 111, // push_literal(1)
      0, // push_frame(0)
      5, 29, // get_slot_direct(1)
      10, 2, // invoke(1)
      15, // dup(0)
      7, 112, // get_slot_direct_check(1)
      19, // swap(0)
      1, 113, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      12, 893, // jmp(1)
      0, // push_frame(0)
      15, // dup(0)
      5, 12, // get_slot_direct(1)
      1, 5, // push_literal(1)
      26, // bi_add(0)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      15, // dup(0)
      5, 29, // get_slot_direct(1)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      26, // bi_add(0)
      8, 29, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 78, // get_slot_direct(1)
      15, // dup(0)
      7, 27, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      10, 1, // invoke(1)
      8, 89, // set_slot_direct(1)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      1, 105, // push_literal(1)
      25, // bi_gte(0)
      15, // dup(0)
      13, 888, // jmp_unless(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      1, 106, // push_literal(1)
      19, // swap(0)
      25, // bi_gte(0)
      20, // un_not(0)
      13, 893, // jmp_unless(1)
      12, 898, // jmp(1)
      1, 71, // push_literal(1)
      20, // un_not(0)
      13, 837, // jmp_unless(1)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      1, 10, // push_literal(1)
      25, // bi_gte(0)
      15, // dup(0)
      13, 915, // jmp_unless(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      1, 100, // push_literal(1)
      19, // swap(0)
      25, // bi_gte(0)
      13, 958, // jmp_unless(1)
      0, // push_frame(0)
      15, // dup(0)
      5, 29, // get_slot_direct(1)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      26, // bi_add(0)
      8, 29, // set_slot_direct(1)
      0, // push_frame(0)
      15, // dup(0)
      5, 12, // get_slot_direct(1)
      1, 5, // push_literal(1)
      26, // bi_add(0)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      5, 92, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 111, // push_literal(1)
      0, // push_frame(0)
      5, 29, // get_slot_direct(1)
      10, 2, // invoke(1)
      15, // dup(0)
      7, 112, // get_slot_direct_check(1)
      19, // swap(0)
      1, 114, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 5, // push_literal(1)
      0, // push_frame(0)
      5, 29, // get_slot_direct(1)
      28, // bi_mul(0)
      8, 90, // set_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 18, // get_slot_direct(1)
      5, 115, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 90, // get_slot_direct(1)
      10, 1, // invoke(1)
      13, 1009, // jmp_unless(1)
      0, // push_frame(0)
      5, 39, // get_slot_direct(1)
      15, // dup(0)
      7, 36, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 92, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 111, // push_literal(1)
      0, // push_frame(0)
      5, 90, // get_slot_direct(1)
      10, 2, // invoke(1)
      10, 1, // invoke(1)
      14, // pop(0)
      12, 1031, // jmp(1)
      0, // push_frame(0)
      5, 92, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 111, // push_literal(1)
      0, // push_frame(0)
      5, 29, // get_slot_direct(1)
      10, 2, // invoke(1)
      15, // dup(0)
      7, 112, // get_slot_direct_check(1)
      19, // swap(0)
      1, 114, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      12, 1963, // jmp(1)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      1, 116, // push_literal(1)
      23, // bi_eq(0)
      15, // dup(0)
      20, // un_not(0)
      13, 1050, // jmp_unless(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      1, 117, // push_literal(1)
      23, // bi_eq(0)
      13, 1549, // jmp_unless(1)
      0, // push_frame(0)
      1, 33, // push_literal(1)
      8, 29, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      8, 91, // set_slot_direct(1)
      0, // push_frame(0)
      15, // dup(0)
      5, 12, // get_slot_direct(1)
      1, 5, // push_literal(1)
      26, // bi_add(0)
      8, 12, // set_slot_direct(1)
      12, 1495, // jmp(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 78, // get_slot_direct(1)
      15, // dup(0)
      7, 27, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      10, 1, // invoke(1)
      8, 89, // set_slot_direct(1)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      1, 99, // push_literal(1)
      19, // swap(0)
      24, // bi_gt(0)
      13, 1167, // jmp_unless(1)
      0, // push_frame(0)
      5, 92, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 96, // push_literal(1)
      0, // push_frame(0)
      5, 29, // get_slot_direct(1)
      10, 2, // invoke(1)
      15, // dup(0)
      7, 112, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      1, 118, // push_literal(1)
      23, // bi_eq(0)
      15, // dup(0)
      20, // un_not(0)
      13, 1143, // jmp_unless(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      1, 119, // push_literal(1)
      23, // bi_eq(0)
      15, // dup(0)
      20, // un_not(0)
      13, 1143, // jmp_unless(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      1, 33, // push_literal(1)
      23, // bi_eq(0)
      13, 1149, // jmp_unless(1)
      1, 120, // push_literal(1)
      12, 1151, // jmp(1)
      1, 121, // push_literal(1)
      0, // push_frame(0)
      5, 92, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 33, // push_literal(1)
      0, // push_frame(0)
      5, 29, // get_slot_direct(1)
      10, 2, // invoke(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      0, // push_frame(0)
      5, 91, // get_slot_direct(1)
      23, // bi_eq(0)
      13, 1178, // jmp_unless(1)
      12, 1500, // jmp(1)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      1, 122, // push_literal(1)
      23, // bi_eq(0)
      13, 1476, // jmp_unless(1)
      0, // push_frame(0)
      15, // dup(0)
      5, 12, // get_slot_direct(1)
      1, 5, // push_literal(1)
      26, // bi_add(0)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      0, // push_frame(0)
      5, 15, // get_slot_direct(1)
      25, // bi_gte(0)
      13, 1226, // jmp_unless(1)
      0, // push_frame(0)
      5, 92, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 96, // push_literal(1)
      0, // push_frame(0)
      5, 29, // get_slot_direct(1)
      10, 2, // invoke(1)
      15, // dup(0)
      7, 112, // get_slot_direct_check(1)
      19, // swap(0)
      1, 123, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 78, // get_slot_direct(1)
      15, // dup(0)
      7, 27, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      10, 1, // invoke(1)
      8, 89, // set_slot_direct(1)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      1, 124, // push_literal(1)
      23, // bi_eq(0)
      13, 1256, // jmp_unless(1)
      0, // push_frame(0)
      1, 125, // push_literal(1)
      8, 89, // set_slot_direct(1)
      12, 1476, // jmp(1)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      1, 11, // push_literal(1)
      23, // bi_eq(0)
      13, 1271, // jmp_unless(1)
      0, // push_frame(0)
      1, 126, // push_literal(1)
      8, 89, // set_slot_direct(1)
      12, 1476, // jmp(1)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      1, 90, // push_literal(1)
      23, // bi_eq(0)
      13, 1286, // jmp_unless(1)
      0, // push_frame(0)
      1, 118, // push_literal(1)
      8, 89, // set_slot_direct(1)
      12, 1476, // jmp(1)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      1, 13, // push_literal(1)
      23, // bi_eq(0)
      13, 1301, // jmp_unless(1)
      0, // push_frame(0)
      1, 119, // push_literal(1)
      8, 89, // set_slot_direct(1)
      12, 1476, // jmp(1)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      1, 127, // push_literal(1)
      23, // bi_eq(0)
      13, 1316, // jmp_unless(1)
      0, // push_frame(0)
      1, 128, // push_literal(1)
      8, 89, // set_slot_direct(1)
      12, 1476, // jmp(1)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      1, 129, // push_literal(1)
      23, // bi_eq(0)
      13, 1476, // jmp_unless(1)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      0, // push_frame(0)
      5, 15, // get_slot_direct(1)
      25, // bi_gte(0)
      13, 1355, // jmp_unless(1)
      0, // push_frame(0)
      5, 92, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 96, // push_literal(1)
      0, // push_frame(0)
      5, 29, // get_slot_direct(1)
      10, 2, // invoke(1)
      15, // dup(0)
      7, 112, // get_slot_direct_check(1)
      19, // swap(0)
      1, 123, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 18, // get_slot_direct(1)
      5, 130, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 78, // get_slot_direct(1)
      15, // dup(0)
      7, 32, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      1, 5, // push_literal(1)
      26, // bi_add(0)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      1, 5, // push_literal(1)
      26, // bi_add(0)
      1, 131, // push_literal(1)
      26, // bi_add(0)
      10, 2, // invoke(1)
      1, 132, // push_literal(1)
      10, 2, // invoke(1)
      8, 89, // set_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 18, // get_slot_direct(1)
      5, 115, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      10, 1, // invoke(1)
      20, // un_not(0)
      15, // dup(0)
      20, // un_not(0)
      13, 1424, // jmp_unless(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      1, 3, // push_literal(1)
      19, // swap(0)
      24, // bi_gt(0)
      13, 1448, // jmp_unless(1)
      0, // push_frame(0)
      5, 92, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 96, // push_literal(1)
      0, // push_frame(0)
      5, 29, // get_slot_direct(1)
      10, 2, // invoke(1)
      15, // dup(0)
      7, 112, // get_slot_direct_check(1)
      19, // swap(0)
      1, 123, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 18, // get_slot_direct(1)
      5, 22, // get_slot_direct(1)
      15, // dup(0)
      7, 133, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      10, 1, // invoke(1)
      8, 89, // set_slot_direct(1)
      0, // push_frame(0)
      15, // dup(0)
      5, 12, // get_slot_direct(1)
      1, 131, // push_literal(1)
      26, // bi_add(0)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      15, // dup(0)
      5, 29, // get_slot_direct(1)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      26, // bi_add(0)
      8, 29, // set_slot_direct(1)
      0, // push_frame(0)
      15, // dup(0)
      5, 12, // get_slot_direct(1)
      1, 5, // push_literal(1)
      26, // bi_add(0)
      8, 12, // set_slot_direct(1)
      1, 71, // push_literal(1)
      20, // un_not(0)
      13, 1074, // jmp_unless(1)
      0, // push_frame(0)
      15, // dup(0)
      5, 12, // get_slot_direct(1)
      1, 5, // push_literal(1)
      26, // bi_add(0)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      5, 39, // get_slot_direct(1)
      15, // dup(0)
      7, 36, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 92, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 96, // push_literal(1)
      0, // push_frame(0)
      5, 29, // get_slot_direct(1)
      10, 2, // invoke(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 78, // get_slot_direct(1)
      15, // dup(0)
      7, 27, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      10, 1, // invoke(1)
      8, 89, // set_slot_direct(1)
      12, 1963, // jmp(1)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      1, 134, // push_literal(1)
      23, // bi_eq(0)
      15, // dup(0)
      13, 1577, // jmp_unless(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 78, // get_slot_direct(1)
      15, // dup(0)
      7, 27, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      1, 5, // push_literal(1)
      26, // bi_add(0)
      10, 1, // invoke(1)
      1, 134, // push_literal(1)
      23, // bi_eq(0)
      13, 1653, // jmp_unless(1)
      0, // push_frame(0)
      15, // dup(0)
      5, 12, // get_slot_direct(1)
      1, 5, // push_literal(1)
      26, // bi_add(0)
      8, 12, // set_slot_direct(1)
      12, 1646, // jmp(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 78, // get_slot_direct(1)
      15, // dup(0)
      7, 27, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      10, 1, // invoke(1)
      8, 89, // set_slot_direct(1)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      1, 118, // push_literal(1)
      23, // bi_eq(0)
      15, // dup(0)
      20, // un_not(0)
      13, 1633, // jmp_unless(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      1, 119, // push_literal(1)
      23, // bi_eq(0)
      15, // dup(0)
      20, // un_not(0)
      13, 1633, // jmp_unless(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      1, 33, // push_literal(1)
      23, // bi_eq(0)
      13, 1637, // jmp_unless(1)
      12, 1651, // jmp(1)
      0, // push_frame(0)
      15, // dup(0)
      5, 12, // get_slot_direct(1)
      1, 5, // push_literal(1)
      26, // bi_add(0)
      8, 12, // set_slot_direct(1)
      1, 71, // push_literal(1)
      20, // un_not(0)
      13, 1590, // jmp_unless(1)
      12, 1963, // jmp(1)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      1, 134, // push_literal(1)
      23, // bi_eq(0)
      15, // dup(0)
      13, 1681, // jmp_unless(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 78, // get_slot_direct(1)
      15, // dup(0)
      7, 27, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      1, 5, // push_literal(1)
      26, // bi_add(0)
      10, 1, // invoke(1)
      1, 135, // push_literal(1)
      23, // bi_eq(0)
      13, 1792, // jmp_unless(1)
      0, // push_frame(0)
      15, // dup(0)
      5, 12, // get_slot_direct(1)
      1, 87, // push_literal(1)
      26, // bi_add(0)
      8, 12, // set_slot_direct(1)
      12, 1785, // jmp(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 78, // get_slot_direct(1)
      15, // dup(0)
      7, 27, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      10, 1, // invoke(1)
      8, 89, // set_slot_direct(1)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      1, 33, // push_literal(1)
      23, // bi_eq(0)
      15, // dup(0)
      20, // un_not(0)
      13, 1748, // jmp_unless(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      1, 134, // push_literal(1)
      23, // bi_eq(0)
      15, // dup(0)
      13, 1748, // jmp_unless(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 78, // get_slot_direct(1)
      15, // dup(0)
      7, 27, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      1, 5, // push_literal(1)
      27, // bi_sub(0)
      10, 1, // invoke(1)
      1, 135, // push_literal(1)
      23, // bi_eq(0)
      13, 1776, // jmp_unless(1)
      0, // push_frame(0)
      15, // dup(0)
      5, 12, // get_slot_direct(1)
      1, 5, // push_literal(1)
      26, // bi_add(0)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 78, // get_slot_direct(1)
      15, // dup(0)
      7, 27, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      10, 1, // invoke(1)
      8, 89, // set_slot_direct(1)
      12, 1790, // jmp(1)
      0, // push_frame(0)
      15, // dup(0)
      5, 12, // get_slot_direct(1)
      1, 5, // push_literal(1)
      26, // bi_add(0)
      8, 12, // set_slot_direct(1)
      1, 71, // push_literal(1)
      20, // un_not(0)
      13, 1694, // jmp_unless(1)
      12, 1963, // jmp(1)
      0, // push_frame(0)
      5, 85, // get_slot_direct(1)
      15, // dup(0)
      7, 28, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      10, 1, // invoke(1)
      1, 3, // push_literal(1)
      25, // bi_gte(0)
      13, 1916, // jmp_unless(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      8, 29, // set_slot_direct(1)
      0, // push_frame(0)
      15, // dup(0)
      5, 12, // get_slot_direct(1)
      1, 5, // push_literal(1)
      26, // bi_add(0)
      8, 12, // set_slot_direct(1)
      12, 1880, // jmp(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 78, // get_slot_direct(1)
      15, // dup(0)
      7, 27, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      10, 1, // invoke(1)
      8, 89, // set_slot_direct(1)
      0, // push_frame(0)
      5, 86, // get_slot_direct(1)
      15, // dup(0)
      7, 28, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      10, 1, // invoke(1)
      1, 3, // push_literal(1)
      19, // swap(0)
      24, // bi_gt(0)
      13, 1861, // jmp_unless(1)
      12, 1891, // jmp(1)
      0, // push_frame(0)
      15, // dup(0)
      5, 29, // get_slot_direct(1)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      26, // bi_add(0)
      8, 29, // set_slot_direct(1)
      0, // push_frame(0)
      15, // dup(0)
      5, 12, // get_slot_direct(1)
      1, 5, // push_literal(1)
      26, // bi_add(0)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      0, // push_frame(0)
      5, 15, // get_slot_direct(1)
      19, // swap(0)
      24, // bi_gt(0)
      20, // un_not(0)
      13, 1826, // jmp_unless(1)
      0, // push_frame(0)
      5, 39, // get_slot_direct(1)
      15, // dup(0)
      7, 36, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 92, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 136, // push_literal(1)
      0, // push_frame(0)
      5, 29, // get_slot_direct(1)
      10, 2, // invoke(1)
      10, 1, // invoke(1)
      14, // pop(0)
      12, 1963, // jmp(1)
      0, // push_frame(0)
      15, // dup(0)
      5, 12, // get_slot_direct(1)
      1, 5, // push_literal(1)
      26, // bi_add(0)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      5, 39, // get_slot_direct(1)
      15, // dup(0)
      7, 36, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 92, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 136, // push_literal(1)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      10, 2, // invoke(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 78, // get_slot_direct(1)
      15, // dup(0)
      7, 27, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      10, 1, // invoke(1)
      8, 89, // set_slot_direct(1)
      0, // push_frame(0)
      5, 89, // get_slot_direct(1)
      20, // un_not(0)
      13, 155, // jmp_unless(1)
      0, // push_frame(0)
      5, 39, // get_slot_direct(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // "make"
    id: 27,
    nargs: 2,
    max_stack: 3,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 93, // set_slot_direct(1)
      15, // dup(0)
      5, 5, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 94, // set_slot_direct(1)
      14, // pop(0)
      2, // new_object(0)
      15, // dup(0)
      0, // push_frame(0)
      5, 93, // get_slot_direct(1)
      8, 93, // set_slot_direct(1)
      15, // dup(0)
      0, // push_frame(0)
      5, 94, // get_slot_direct(1)
      8, 94, // set_slot_direct(1)
      15, // dup(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 25, // get_slot_direct(1)
      8, 25, // set_slot_direct(1)
      15, // dup(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 12, // get_slot_direct(1)
      8, 95, // set_slot_direct(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // "make_parse"
    id: 28,
    nargs: 1,
    max_stack: 5,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 84, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 88, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 141, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 142, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 143, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 144, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 145, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 146, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 147, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 148, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 149, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 150, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 151, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 152, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 153, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 45, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 154, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 155, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 156, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 157, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 158, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 159, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 85, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 160, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 140, // set_slot_direct(1)
      0, // push_frame(0)
      2, // new_object(0)
      8, 142, // set_slot_direct(1)
      0, // push_frame(0)
      4, 29, // new_function(1)
      8, 146, // set_slot_direct(1)
      0, // push_frame(0)
      2, // new_object(0)
      15, // dup(0)
      4, 30, // new_function(1)
      8, 20, // set_slot_direct(1)
      15, // dup(0)
      4, 31, // new_function(1)
      8, 171, // set_slot_direct(1)
      15, // dup(0)
      4, 32, // new_function(1)
      8, 38, // set_slot_direct(1)
      15, // dup(0)
      4, 33, // new_function(1)
      8, 173, // set_slot_direct(1)
      8, 147, // set_slot_direct(1)
      0, // push_frame(0)
      4, 34, // new_function(1)
      8, 148, // set_slot_direct(1)
      0, // push_frame(0)
      4, 35, // new_function(1)
      8, 149, // set_slot_direct(1)
      0, // push_frame(0)
      4, 36, // new_function(1)
      8, 150, // set_slot_direct(1)
      0, // push_frame(0)
      4, 37, // new_function(1)
      8, 151, // set_slot_direct(1)
      0, // push_frame(0)
      4, 38, // new_function(1)
      8, 152, // set_slot_direct(1)
      0, // push_frame(0)
      4, 39, // new_function(1)
      8, 153, // set_slot_direct(1)
      0, // push_frame(0)
      4, 40, // new_function(1)
      8, 45, // set_slot_direct(1)
      0, // push_frame(0)
      2, // new_object(0)
      15, // dup(0)
      4, 41, // new_function(1)
      8, 165, // set_slot_direct(1)
      15, // dup(0)
      4, 42, // new_function(1)
      8, 166, // set_slot_direct(1)
      8, 154, // set_slot_direct(1)
      0, // push_frame(0)
      4, 43, // new_function(1)
      8, 155, // set_slot_direct(1)
      0, // push_frame(0)
      4, 44, // new_function(1)
      8, 156, // set_slot_direct(1)
      0, // push_frame(0)
      4, 46, // new_function(1)
      8, 157, // set_slot_direct(1)
      0, // push_frame(0)
      4, 48, // new_function(1)
      8, 158, // set_slot_direct(1)
      0, // push_frame(0)
      4, 50, // new_function(1)
      8, 159, // set_slot_direct(1)
      0, // push_frame(0)
      4, 52, // new_function(1)
      8, 85, // set_slot_direct(1)
      0, // push_frame(0)
      4, 54, // new_function(1)
      8, 160, // set_slot_direct(1)
      0, // push_frame(0)
      5, 155, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 179, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 155, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 170, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 155, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 207, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 155, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 189, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 155, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 208, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 155, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 209, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 155, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 192, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 155, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 54, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 155, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 210, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 156, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 211, // push_literal(1)
      1, 71, // push_literal(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 156, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 212, // push_literal(1)
      1, 67, // push_literal(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 156, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 213, // push_literal(1)
      1, 42, // push_literal(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 156, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 214, // push_literal(1)
      1, 0, // push_literal(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 156, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 215, // push_literal(1)
      1, 216, // push_literal(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 156, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 217, // push_literal(1)
      1, 218, // push_literal(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 156, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 68, // push_literal(1)
      2, // new_object(0)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 156, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 35, // push_literal(1)
      3, // new_array(0)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 155, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 181, // push_literal(1)
      10, 1, // invoke(1)
      0, // push_frame(0)
      5, 146, // get_slot_direct(1)
      8, 165, // set_slot_direct(1)
      0, // push_frame(0)
      5, 155, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 14, // push_literal(1)
      10, 1, // invoke(1)
      4, 55, // new_function(1)
      8, 165, // set_slot_direct(1)
      0, // push_frame(0)
      5, 159, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 219, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 159, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 220, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 159, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 221, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 159, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 222, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 159, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 223, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 157, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 224, // push_literal(1)
      1, 225, // push_literal(1)
      4, 56, // new_function(1)
      10, 3, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 158, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 228, // push_literal(1)
      1, 229, // push_literal(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 158, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 230, // push_literal(1)
      1, 231, // push_literal(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 158, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 232, // push_literal(1)
      1, 233, // push_literal(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 158, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 234, // push_literal(1)
      1, 233, // push_literal(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 158, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 235, // push_literal(1)
      1, 236, // push_literal(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 158, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 237, // push_literal(1)
      1, 236, // push_literal(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 158, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 238, // push_literal(1)
      1, 236, // push_literal(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 158, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 239, // push_literal(1)
      1, 236, // push_literal(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 157, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 110, // push_literal(1)
      1, 240, // push_literal(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 157, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 109, // push_literal(1)
      1, 240, // push_literal(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 157, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 135, // push_literal(1)
      1, 241, // push_literal(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 157, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 134, // push_literal(1)
      1, 241, // push_literal(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 157, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 107, // push_literal(1)
      1, 242, // push_literal(1)
      4, 57, // new_function(1)
      10, 3, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 157, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 202, // push_literal(1)
      1, 242, // push_literal(1)
      4, 58, // new_function(1)
      10, 3, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 157, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 186, // push_literal(1)
      1, 244, // push_literal(1)
      4, 59, // new_function(1)
      10, 3, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 85, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 246, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 85, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 109, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 85, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 247, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 85, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 186, // push_literal(1)
      4, 60, // new_function(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 85, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 187, // push_literal(1)
      4, 61, // new_function(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 85, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 202, // push_literal(1)
      4, 62, // new_function(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 85, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 193, // push_literal(1)
      4, 63, // new_function(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 160, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 193, // push_literal(1)
      4, 64, // new_function(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 160, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 191, // push_literal(1)
      4, 65, // new_function(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 160, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 252, // push_literal(1)
      4, 66, // new_function(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 160, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 253, // push_literal(1)
      4, 67, // new_function(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 160, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 255, // push_literal(1)
      4, 68, // new_function(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 160, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 77, // push_literal(1)
      4, 69, // new_function(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      4, 70, // new_function(1)
      8, 140, // set_slot_direct(1)
      0, // push_frame(0)
      5, 140, // get_slot_direct(1)
      1, 140, // push_literal(1)
      8, 137, // set_slot_direct(1)
      0, // push_frame(0)
      5, 140, // get_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 261, // get_slot_direct(1)
      8, 139, // set_slot_direct(1)
      0, // push_frame(0)
      5, 140, // get_slot_direct(1)
      3, // new_array(0)
      15, // dup(0)
      1, 84, // push_literal(1)
      8, 3, // set_slot_direct(1)
      8, 262, // set_slot_direct(1)
      0, // push_frame(0)
      5, 140, // get_slot_direct(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // "itself"
    id: 29,
    nargs: 0,
    max_stack: 1,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // "define:"
    id: 30,
    nargs: 1,
    max_stack: 3,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 90, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 127, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 161, // get_slot_direct(1)
      0, // push_frame(0)
      5, 90, // get_slot_direct(1)
      5, 94, // get_slot_direct(1)
      6, // get_slot_indirect(0)
      8, 127, // set_slot_direct(1)
      0, // push_frame(0)
      5, 127, // get_slot_direct(1)
      22, // un_typeof(0)
      1, 41, // push_literal(1)
      23, // bi_eq(0)
      13, 62, // jmp_unless(1)
      0, // push_frame(0)
      5, 90, // get_slot_direct(1)
      15, // dup(0)
      7, 112, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 127, // get_slot_direct(1)
      5, 162, // get_slot_direct(1)
      13, 57, // jmp_unless(1)
      1, 163, // push_literal(1)
      12, 59, // jmp(1)
      1, 164, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 161, // get_slot_direct(1)
      0, // push_frame(0)
      5, 90, // get_slot_direct(1)
      5, 94, // get_slot_direct(1)
      0, // push_frame(0)
      5, 90, // get_slot_direct(1)
      9, // set_slot_indirect(0)
      0, // push_frame(0)
      5, 90, // get_slot_direct(1)
      1, 67, // push_literal(1)
      8, 162, // set_slot_direct(1)
      0, // push_frame(0)
      5, 90, // get_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 146, // get_slot_direct(1)
      8, 165, // set_slot_direct(1)
      0, // push_frame(0)
      5, 90, // get_slot_direct(1)
      1, 42, // push_literal(1)
      8, 166, // set_slot_direct(1)
      0, // push_frame(0)
      5, 90, // get_slot_direct(1)
      1, 42, // push_literal(1)
      8, 167, // set_slot_direct(1)
      0, // push_frame(0)
      5, 90, // get_slot_direct(1)
      1, 3, // push_literal(1)
      8, 168, // set_slot_direct(1)
      0, // push_frame(0)
      5, 90, // get_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 141, // get_slot_direct(1)
      8, 141, // set_slot_direct(1)
      0, // push_frame(0)
      5, 90, // get_slot_direct(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // "find:"
    id: 31,
    nargs: 1,
    max_stack: 4,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 90, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 40, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 66, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      8, 40, // set_slot_direct(1)
      12, 114, // jmp(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 40, // get_slot_direct(1)
      5, 161, // get_slot_direct(1)
      15, // dup(0)
      7, 43, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 90, // get_slot_direct(1)
      10, 1, // invoke(1)
      13, 57, // jmp_unless(1)
      0, // push_frame(0)
      5, 40, // get_slot_direct(1)
      5, 161, // get_slot_direct(1)
      0, // push_frame(0)
      5, 90, // get_slot_direct(1)
      6, // get_slot_indirect(0)
      12, 59, // jmp(1)
      1, 42, // push_literal(1)
      8, 66, // set_slot_direct(1)
      0, // push_frame(0)
      5, 66, // get_slot_direct(1)
      13, 70, // jmp_unless(1)
      0, // push_frame(0)
      5, 66, // get_slot_direct(1)
      11, // return(0)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 40, // get_slot_direct(1)
      5, 169, // get_slot_direct(1)
      8, 40, // set_slot_direct(1)
      0, // push_frame(0)
      5, 40, // get_slot_direct(1)
      20, // un_not(0)
      13, 114, // jmp_unless(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 142, // get_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 142, // get_slot_direct(1)
      15, // dup(0)
      7, 43, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 90, // get_slot_direct(1)
      10, 1, // invoke(1)
      13, 110, // jmp_unless(1)
      0, // push_frame(0)
      5, 90, // get_slot_direct(1)
      12, 112, // jmp(1)
      1, 170, // push_literal(1)
      6, // get_slot_indirect(0)
      11, // return(0)
      1, 71, // push_literal(1)
      20, // un_not(0)
      13, 29, // jmp_unless(1)
      1, 0, // push_literal(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // "pop:"
    id: 32,
    nargs: 0,
    max_stack: 2,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 169, // get_slot_direct(1)
      8, 141, // set_slot_direct(1)
      1, 0, // push_literal(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // "reserve:"
    id: 33,
    nargs: 1,
    max_stack: 4,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 90, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 127, // set_slot_direct(1)
      0, // push_frame(0)
      5, 90, // get_slot_direct(1)
      5, 172, // get_slot_direct(1)
      1, 4, // push_literal(1)
      23, // bi_eq(0)
      20, // un_not(0)
      15, // dup(0)
      20, // un_not(0)
      13, 35, // jmp_unless(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 90, // get_slot_direct(1)
      5, 162, // get_slot_direct(1)
      13, 40, // jmp_unless(1)
      1, 0, // push_literal(1)
      11, // return(0)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 161, // get_slot_direct(1)
      15, // dup(0)
      7, 43, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 90, // get_slot_direct(1)
      5, 94, // get_slot_direct(1)
      10, 1, // invoke(1)
      13, 72, // jmp_unless(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 161, // get_slot_direct(1)
      0, // push_frame(0)
      5, 90, // get_slot_direct(1)
      5, 94, // get_slot_direct(1)
      6, // get_slot_indirect(0)
      12, 74, // jmp(1)
      1, 42, // push_literal(1)
      8, 127, // set_slot_direct(1)
      0, // push_frame(0)
      5, 127, // get_slot_direct(1)
      13, 113, // jmp_unless(1)
      0, // push_frame(0)
      5, 127, // get_slot_direct(1)
      5, 162, // get_slot_direct(1)
      13, 91, // jmp_unless(1)
      1, 0, // push_literal(1)
      11, // return(0)
      0, // push_frame(0)
      5, 127, // get_slot_direct(1)
      5, 172, // get_slot_direct(1)
      1, 4, // push_literal(1)
      23, // bi_eq(0)
      13, 113, // jmp_unless(1)
      0, // push_frame(0)
      5, 90, // get_slot_direct(1)
      15, // dup(0)
      7, 112, // get_slot_direct_check(1)
      19, // swap(0)
      1, 164, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 161, // get_slot_direct(1)
      0, // push_frame(0)
      5, 90, // get_slot_direct(1)
      5, 94, // get_slot_direct(1)
      0, // push_frame(0)
      5, 90, // get_slot_direct(1)
      9, // set_slot_indirect(0)
      0, // push_frame(0)
      5, 90, // get_slot_direct(1)
      1, 71, // push_literal(1)
      8, 162, // set_slot_direct(1)
      1, 0, // push_literal(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // "new_scope"
    id: 34,
    nargs: 0,
    max_stack: 4,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 174, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 141, // get_slot_direct(1)
      8, 174, // set_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      0, // push_frame(0)
      5, 68, // get_slot_direct(1)
      15, // dup(0)
      7, 73, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 147, // get_slot_direct(1)
      10, 1, // invoke(1)
      8, 141, // set_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 141, // get_slot_direct(1)
      2, // new_object(0)
      8, 161, // set_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 141, // get_slot_direct(1)
      0, // push_frame(0)
      5, 174, // get_slot_direct(1)
      8, 169, // set_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 141, // get_slot_direct(1)
      0, // push_frame(0)
      5, 174, // get_slot_direct(1)
      13, 74, // jmp_unless(1)
      0, // push_frame(0)
      5, 174, // get_slot_direct(1)
      5, 175, // get_slot_direct(1)
      1, 5, // push_literal(1)
      26, // bi_add(0)
      12, 76, // jmp(1)
      1, 3, // push_literal(1)
      8, 175, // set_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 141, // get_slot_direct(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // "advance"
    id: 35,
    nargs: 1,
    max_stack: 4,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 176, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 10, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 66, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 127, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 61, // set_slot_direct(1)
      0, // push_frame(0)
      5, 176, // get_slot_direct(1)
      15, // dup(0)
      13, 50, // jmp_unless(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 143, // get_slot_direct(1)
      5, 176, // get_slot_direct(1)
      0, // push_frame(0)
      5, 176, // get_slot_direct(1)
      23, // bi_eq(0)
      20, // un_not(0)
      13, 73, // jmp_unless(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 143, // get_slot_direct(1)
      15, // dup(0)
      7, 112, // get_slot_direct_check(1)
      19, // swap(0)
      1, 177, // push_literal(1)
      0, // push_frame(0)
      5, 176, // get_slot_direct(1)
      26, // bi_add(0)
      1, 178, // push_literal(1)
      26, // bi_add(0)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 145, // get_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 144, // get_slot_direct(1)
      5, 15, // get_slot_direct(1)
      25, // bi_gte(0)
      13, 104, // jmp_unless(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 142, // get_slot_direct(1)
      1, 179, // push_literal(1)
      6, // get_slot_indirect(0)
      8, 143, // set_slot_direct(1)
      1, 0, // push_literal(1)
      11, // return(0)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 144, // get_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 145, // get_slot_direct(1)
      6, // get_slot_indirect(0)
      8, 127, // set_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      15, // dup(0)
      5, 145, // get_slot_direct(1)
      1, 5, // push_literal(1)
      26, // bi_add(0)
      8, 145, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 127, // get_slot_direct(1)
      5, 94, // get_slot_direct(1)
      8, 61, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 127, // get_slot_direct(1)
      5, 93, // get_slot_direct(1)
      8, 10, // set_slot_direct(1)
      0, // push_frame(0)
      5, 10, // get_slot_direct(1)
      1, 4, // push_literal(1)
      23, // bi_eq(0)
      13, 172, // jmp_unless(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 141, // get_slot_direct(1)
      15, // dup(0)
      7, 171, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 61, // get_slot_direct(1)
      10, 1, // invoke(1)
      8, 66, // set_slot_direct(1)
      12, 261, // jmp(1)
      0, // push_frame(0)
      5, 10, // get_slot_direct(1)
      1, 136, // push_literal(1)
      23, // bi_eq(0)
      13, 212, // jmp_unless(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 142, // get_slot_direct(1)
      0, // push_frame(0)
      5, 61, // get_slot_direct(1)
      6, // get_slot_indirect(0)
      8, 66, // set_slot_direct(1)
      0, // push_frame(0)
      5, 66, // get_slot_direct(1)
      20, // un_not(0)
      13, 210, // jmp_unless(1)
      0, // push_frame(0)
      5, 127, // get_slot_direct(1)
      15, // dup(0)
      7, 112, // get_slot_direct_check(1)
      19, // swap(0)
      1, 180, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      12, 261, // jmp(1)
      0, // push_frame(0)
      5, 10, // get_slot_direct(1)
      1, 96, // push_literal(1)
      23, // bi_eq(0)
      15, // dup(0)
      20, // un_not(0)
      13, 229, // jmp_unless(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 10, // get_slot_direct(1)
      1, 111, // push_literal(1)
      23, // bi_eq(0)
      13, 249, // jmp_unless(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 142, // get_slot_direct(1)
      1, 181, // push_literal(1)
      6, // get_slot_indirect(0)
      8, 66, // set_slot_direct(1)
      0, // push_frame(0)
      1, 182, // push_literal(1)
      8, 10, // set_slot_direct(1)
      12, 261, // jmp(1)
      0, // push_frame(0)
      5, 127, // get_slot_direct(1)
      15, // dup(0)
      7, 112, // get_slot_direct_check(1)
      19, // swap(0)
      1, 183, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      0, // push_frame(0)
      5, 68, // get_slot_direct(1)
      15, // dup(0)
      7, 73, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 66, // get_slot_direct(1)
      10, 1, // invoke(1)
      8, 143, // set_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 143, // get_slot_direct(1)
      0, // push_frame(0)
      5, 127, // get_slot_direct(1)
      5, 25, // get_slot_direct(1)
      8, 25, // set_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 143, // get_slot_direct(1)
      0, // push_frame(0)
      5, 127, // get_slot_direct(1)
      5, 95, // get_slot_direct(1)
      8, 95, // set_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 143, // get_slot_direct(1)
      0, // push_frame(0)
      5, 61, // get_slot_direct(1)
      8, 94, // set_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 143, // get_slot_direct(1)
      0, // push_frame(0)
      5, 10, // get_slot_direct(1)
      8, 172, // set_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 143, // get_slot_direct(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // "expression"
    id: 36,
    nargs: 1,
    max_stack: 4,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 184, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 185, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 127, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 143, // get_slot_direct(1)
      8, 127, // set_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 149, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      10, 0, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 127, // get_slot_direct(1)
      15, // dup(0)
      7, 165, // get_slot_direct_check(1)
      19, // swap(0)
      10, 0, // invoke(1)
      8, 185, // set_slot_direct(1)
      12, 88, // jmp(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 143, // get_slot_direct(1)
      8, 127, // set_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 149, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      10, 0, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 127, // get_slot_direct(1)
      15, // dup(0)
      7, 166, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 185, // get_slot_direct(1)
      10, 1, // invoke(1)
      8, 185, // set_slot_direct(1)
      0, // push_frame(0)
      5, 184, // get_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 143, // get_slot_direct(1)
      5, 168, // get_slot_direct(1)
      19, // swap(0)
      24, // bi_gt(0)
      20, // un_not(0)
      13, 54, // jmp_unless(1)
      0, // push_frame(0)
      5, 185, // get_slot_direct(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // "statement"
    id: 37,
    nargs: 0,
    max_stack: 4,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 90, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 61, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 143, // get_slot_direct(1)
      8, 90, // set_slot_direct(1)
      0, // push_frame(0)
      5, 90, // get_slot_direct(1)
      5, 167, // get_slot_direct(1)
      13, 67, // jmp_unless(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 149, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      10, 0, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 141, // get_slot_direct(1)
      15, // dup(0)
      7, 173, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 90, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 90, // get_slot_direct(1)
      15, // dup(0)
      7, 167, // get_slot_direct_check(1)
      19, // swap(0)
      10, 0, // invoke(1)
      11, // return(0)
      12, 185, // jmp(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 150, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 3, // push_literal(1)
      10, 1, // invoke(1)
      8, 61, // set_slot_direct(1)
      0, // push_frame(0)
      5, 61, // get_slot_direct(1)
      5, 159, // get_slot_direct(1)
      20, // un_not(0)
      15, // dup(0)
      13, 123, // jmp_unless(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 61, // get_slot_direct(1)
      5, 176, // get_slot_direct(1)
      1, 186, // push_literal(1)
      23, // bi_eq(0)
      20, // un_not(0)
      15, // dup(0)
      13, 123, // jmp_unless(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 61, // get_slot_direct(1)
      5, 172, // get_slot_direct(1)
      1, 187, // push_literal(1)
      23, // bi_eq(0)
      15, // dup(0)
      13, 122, // jmp_unless(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 61, // get_slot_direct(1)
      5, 4, // get_slot_direct(1)
      20, // un_not(0)
      13, 137, // jmp_unless(1)
      0, // push_frame(0)
      5, 61, // get_slot_direct(1)
      15, // dup(0)
      7, 112, // get_slot_direct_check(1)
      19, // swap(0)
      1, 188, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 61, // get_slot_direct(1)
      5, 172, // get_slot_direct(1)
      1, 187, // push_literal(1)
      23, // bi_eq(0)
      15, // dup(0)
      13, 169, // jmp_unless(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 61, // get_slot_direct(1)
      5, 4, // get_slot_direct(1)
      15, // dup(0)
      13, 169, // jmp_unless(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 143, // get_slot_direct(1)
      5, 176, // get_slot_direct(1)
      1, 189, // push_literal(1)
      23, // bi_eq(0)
      20, // un_not(0)
      20, // un_not(0)
      13, 185, // jmp_unless(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 149, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 189, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 61, // get_slot_direct(1)
      13, 199, // jmp_unless(1)
      3, // new_array(0)
      15, // dup(0)
      0, // push_frame(0)
      5, 61, // get_slot_direct(1)
      8, 3, // set_slot_direct(1)
      12, 201, // jmp(1)
      1, 42, // push_literal(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // "hoist_var"
    id: 38,
    nargs: 1,
    max_stack: 4,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 190, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 61, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 174, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      3, // new_array(0)
      8, 61, // set_slot_direct(1)
      0, // push_frame(0)
      3, // new_array(0)
      8, 174, // set_slot_direct(1)
      0, // push_frame(0)
      1, 3, // push_literal(1)
      8, 12, // set_slot_direct(1)
      12, 100, // jmp(1)
      0, // push_frame(0)
      5, 190, // get_slot_direct(1)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      6, // get_slot_indirect(0)
      5, 94, // get_slot_direct(1)
      1, 191, // push_literal(1)
      23, // bi_eq(0)
      13, 74, // jmp_unless(1)
      0, // push_frame(0)
      5, 61, // get_slot_direct(1)
      15, // dup(0)
      7, 36, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 190, // get_slot_direct(1)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      6, // get_slot_indirect(0)
      10, 1, // invoke(1)
      14, // pop(0)
      12, 91, // jmp(1)
      0, // push_frame(0)
      5, 174, // get_slot_direct(1)
      15, // dup(0)
      7, 36, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 190, // get_slot_direct(1)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      6, // get_slot_indirect(0)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      15, // dup(0)
      5, 12, // get_slot_direct(1)
      1, 5, // push_literal(1)
      26, // bi_add(0)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      0, // push_frame(0)
      5, 190, // get_slot_direct(1)
      5, 15, // get_slot_direct(1)
      19, // swap(0)
      24, // bi_gt(0)
      20, // un_not(0)
      13, 41, // jmp_unless(1)
      0, // push_frame(0)
      5, 61, // get_slot_direct(1)
      15, // dup(0)
      7, 44, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 174, // get_slot_direct(1)
      10, 1, // invoke(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // "statements"
    id: 39,
    nargs: 0,
    max_stack: 4,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 10, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 174, // set_slot_direct(1)
      0, // push_frame(0)
      3, // new_array(0)
      8, 10, // set_slot_direct(1)
      12, 85, // jmp(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 143, // get_slot_direct(1)
      5, 176, // get_slot_direct(1)
      1, 192, // push_literal(1)
      23, // bi_eq(0)
      15, // dup(0)
      20, // un_not(0)
      13, 45, // jmp_unless(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 143, // get_slot_direct(1)
      5, 176, // get_slot_direct(1)
      1, 179, // push_literal(1)
      23, // bi_eq(0)
      13, 49, // jmp_unless(1)
      12, 90, // jmp(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 151, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      10, 0, // invoke(1)
      8, 174, // set_slot_direct(1)
      0, // push_frame(0)
      5, 174, // get_slot_direct(1)
      13, 85, // jmp_unless(1)
      0, // push_frame(0)
      5, 10, // get_slot_direct(1)
      5, 36, // get_slot_direct(1)
      15, // dup(0)
      7, 19, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 10, // get_slot_direct(1)
      0, // push_frame(0)
      5, 174, // get_slot_direct(1)
      10, 2, // invoke(1)
      14, // pop(0)
      1, 71, // push_literal(1)
      20, // un_not(0)
      13, 20, // jmp_unless(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 152, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 10, // get_slot_direct(1)
      10, 1, // invoke(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // "block"
    id: 40,
    nargs: 0,
    max_stack: 3,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 127, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 143, // get_slot_direct(1)
      8, 127, // set_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 149, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 193, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 127, // get_slot_direct(1)
      15, // dup(0)
      7, 167, // get_slot_direct_check(1)
      19, // swap(0)
      10, 0, // invoke(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // "nud:"
    id: 41,
    nargs: 0,
    max_stack: 3,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      15, // dup(0)
      7, 112, // get_slot_direct_check(1)
      19, // swap(0)
      1, 194, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      1, 0, // push_literal(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // "led:"
    id: 42,
    nargs: 1,
    max_stack: 3,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 185, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      15, // dup(0)
      7, 112, // get_slot_direct_check(1)
      19, // swap(0)
      1, 195, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      1, 0, // push_literal(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // "symbol"
    id: 43,
    nargs: 2,
    max_stack: 4,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 176, // set_slot_direct(1)
      15, // dup(0)
      5, 5, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 196, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 174, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 142, // get_slot_direct(1)
      15, // dup(0)
      7, 43, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 176, // get_slot_direct(1)
      10, 1, // invoke(1)
      13, 51, // jmp_unless(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 142, // get_slot_direct(1)
      0, // push_frame(0)
      5, 176, // get_slot_direct(1)
      6, // get_slot_indirect(0)
      12, 53, // jmp(1)
      1, 42, // push_literal(1)
      8, 174, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 196, // get_slot_direct(1)
      15, // dup(0)
      20, // un_not(0)
      13, 66, // jmp_unless(1)
      14, // pop(0)
      1, 3, // push_literal(1)
      8, 196, // set_slot_direct(1)
      0, // push_frame(0)
      5, 174, // get_slot_direct(1)
      13, 94, // jmp_unless(1)
      0, // push_frame(0)
      5, 196, // get_slot_direct(1)
      0, // push_frame(0)
      5, 174, // get_slot_direct(1)
      5, 168, // get_slot_direct(1)
      25, // bi_gte(0)
      13, 92, // jmp_unless(1)
      0, // push_frame(0)
      5, 174, // get_slot_direct(1)
      0, // push_frame(0)
      5, 196, // get_slot_direct(1)
      8, 168, // set_slot_direct(1)
      12, 145, // jmp(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 68, // get_slot_direct(1)
      15, // dup(0)
      7, 73, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 154, // get_slot_direct(1)
      10, 1, // invoke(1)
      8, 174, // set_slot_direct(1)
      0, // push_frame(0)
      5, 174, // get_slot_direct(1)
      0, // push_frame(0)
      5, 174, // get_slot_direct(1)
      0, // push_frame(0)
      5, 176, // get_slot_direct(1)
      17, // over(0)
      8, 94, // set_slot_direct(1)
      8, 176, // set_slot_direct(1)
      0, // push_frame(0)
      5, 174, // get_slot_direct(1)
      0, // push_frame(0)
      5, 196, // get_slot_direct(1)
      8, 168, // set_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 142, // get_slot_direct(1)
      0, // push_frame(0)
      5, 176, // get_slot_direct(1)
      0, // push_frame(0)
      5, 174, // get_slot_direct(1)
      9, // set_slot_indirect(0)
      0, // push_frame(0)
      5, 174, // get_slot_direct(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // "constant"
    id: 44,
    nargs: 2,
    max_stack: 4,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 174, // set_slot_direct(1)
      15, // dup(0)
      5, 5, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 61, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 197, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 155, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 174, // get_slot_direct(1)
      10, 1, // invoke(1)
      8, 197, // set_slot_direct(1)
      0, // push_frame(0)
      5, 197, // get_slot_direct(1)
      4, 45, // new_function(1)
      8, 165, // set_slot_direct(1)
      0, // push_frame(0)
      5, 197, // get_slot_direct(1)
      0, // push_frame(0)
      5, 61, // get_slot_direct(1)
      8, 94, // set_slot_direct(1)
      0, // push_frame(0)
      5, 197, // get_slot_direct(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // ".nud"
    id: 45,
    nargs: 0,
    max_stack: 3,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 18, // get_slot_direct(1)
      5, 141, // get_slot_direct(1)
      15, // dup(0)
      7, 173, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 18, // get_slot_direct(1)
      5, 142, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 176, // get_slot_direct(1)
      6, // get_slot_indirect(0)
      5, 94, // get_slot_direct(1)
      8, 94, // set_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 182, // push_literal(1)
      8, 172, // set_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // "infix"
    id: 46,
    nargs: 3,
    max_stack: 5,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 176, // set_slot_direct(1)
      15, // dup(0)
      5, 5, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 196, // set_slot_direct(1)
      15, // dup(0)
      5, 7, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 166, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 174, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 155, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 176, // get_slot_direct(1)
      0, // push_frame(0)
      5, 196, // get_slot_direct(1)
      10, 2, // invoke(1)
      8, 174, // set_slot_direct(1)
      0, // push_frame(0)
      5, 174, // get_slot_direct(1)
      0, // push_frame(0)
      5, 166, // get_slot_direct(1)
      15, // dup(0)
      20, // un_not(0)
      13, 62, // jmp_unless(1)
      14, // pop(0)
      4, 47, // new_function(1)
      8, 166, // set_slot_direct(1)
      0, // push_frame(0)
      5, 174, // get_slot_direct(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function {
    id: 47,
    nargs: 1,
    max_stack: 4,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 185, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 185, // get_slot_direct(1)
      8, 198, // set_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 18, // get_slot_direct(1)
      5, 150, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 196, // get_slot_direct(1)
      10, 1, // invoke(1)
      8, 199, // set_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 200, // push_literal(1)
      8, 172, // set_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // "infixr"
    id: 48,
    nargs: 3,
    max_stack: 5,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 176, // set_slot_direct(1)
      15, // dup(0)
      5, 5, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 196, // set_slot_direct(1)
      15, // dup(0)
      5, 7, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 166, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 174, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 155, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 176, // get_slot_direct(1)
      0, // push_frame(0)
      5, 196, // get_slot_direct(1)
      10, 2, // invoke(1)
      8, 174, // set_slot_direct(1)
      0, // push_frame(0)
      5, 174, // get_slot_direct(1)
      0, // push_frame(0)
      5, 166, // get_slot_direct(1)
      15, // dup(0)
      20, // un_not(0)
      13, 62, // jmp_unless(1)
      14, // pop(0)
      4, 49, // new_function(1)
      8, 166, // set_slot_direct(1)
      0, // push_frame(0)
      5, 174, // get_slot_direct(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function {
    id: 49,
    nargs: 1,
    max_stack: 5,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 185, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 185, // get_slot_direct(1)
      8, 198, // set_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 18, // get_slot_direct(1)
      5, 150, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 196, // get_slot_direct(1)
      1, 5, // push_literal(1)
      27, // bi_sub(0)
      10, 1, // invoke(1)
      8, 199, // set_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 200, // push_literal(1)
      8, 172, // set_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // "assignment"
    id: 50,
    nargs: 1,
    max_stack: 5,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 176, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 158, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 176, // get_slot_direct(1)
      1, 201, // push_literal(1)
      4, 51, // new_function(1)
      10, 3, // invoke(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function {
    id: 51,
    nargs: 1,
    max_stack: 4,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 185, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 185, // get_slot_direct(1)
      5, 176, // get_slot_direct(1)
      1, 107, // push_literal(1)
      23, // bi_eq(0)
      20, // un_not(0)
      15, // dup(0)
      13, 46, // jmp_unless(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 185, // get_slot_direct(1)
      5, 176, // get_slot_direct(1)
      1, 202, // push_literal(1)
      23, // bi_eq(0)
      20, // un_not(0)
      15, // dup(0)
      13, 46, // jmp_unless(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 185, // get_slot_direct(1)
      5, 172, // get_slot_direct(1)
      1, 4, // push_literal(1)
      23, // bi_eq(0)
      20, // un_not(0)
      13, 60, // jmp_unless(1)
      0, // push_frame(0)
      5, 185, // get_slot_direct(1)
      15, // dup(0)
      7, 112, // get_slot_direct_check(1)
      19, // swap(0)
      1, 203, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 185, // get_slot_direct(1)
      8, 198, // set_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 18, // get_slot_direct(1)
      5, 150, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 204, // push_literal(1)
      10, 1, // invoke(1)
      8, 199, // set_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 71, // push_literal(1)
      8, 159, // set_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 200, // push_literal(1)
      8, 172, // set_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // "prefix"
    id: 52,
    nargs: 2,
    max_stack: 4,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 176, // set_slot_direct(1)
      15, // dup(0)
      5, 5, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 165, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 174, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 155, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 176, // get_slot_direct(1)
      10, 1, // invoke(1)
      8, 174, // set_slot_direct(1)
      0, // push_frame(0)
      5, 174, // get_slot_direct(1)
      0, // push_frame(0)
      5, 165, // get_slot_direct(1)
      15, // dup(0)
      20, // un_not(0)
      13, 52, // jmp_unless(1)
      14, // pop(0)
      4, 53, // new_function(1)
      8, 165, // set_slot_direct(1)
      0, // push_frame(0)
      5, 174, // get_slot_direct(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function {
    id: 53,
    nargs: 0,
    max_stack: 4,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 18, // get_slot_direct(1)
      5, 141, // get_slot_direct(1)
      15, // dup(0)
      7, 173, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 18, // get_slot_direct(1)
      5, 150, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 205, // push_literal(1)
      10, 1, // invoke(1)
      8, 198, // set_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 206, // push_literal(1)
      8, 172, // set_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // "stmt"
    id: 54,
    nargs: 2,
    max_stack: 4,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 174, // set_slot_direct(1)
      15, // dup(0)
      5, 5, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 11, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 197, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 155, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 174, // get_slot_direct(1)
      10, 1, // invoke(1)
      8, 197, // set_slot_direct(1)
      0, // push_frame(0)
      5, 197, // get_slot_direct(1)
      0, // push_frame(0)
      5, 11, // get_slot_direct(1)
      8, 167, // set_slot_direct(1)
      0, // push_frame(0)
      5, 197, // get_slot_direct(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // ".nud"
    id: 55,
    nargs: 0,
    max_stack: 3,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 141, // get_slot_direct(1)
      15, // dup(0)
      7, 173, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 14, // push_literal(1)
      8, 172, // set_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function {
    id: 56,
    nargs: 1,
    max_stack: 4,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 185, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 185, // get_slot_direct(1)
      8, 198, // set_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 150, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 3, // push_literal(1)
      10, 1, // invoke(1)
      8, 199, // set_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 149, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 207, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 150, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 3, // push_literal(1)
      10, 1, // invoke(1)
      8, 226, // set_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 227, // push_literal(1)
      8, 172, // set_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function {
    id: 57,
    nargs: 1,
    max_stack: 3,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 185, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 185, // get_slot_direct(1)
      8, 198, // set_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 143, // get_slot_direct(1)
      5, 172, // get_slot_direct(1)
      1, 4, // push_literal(1)
      23, // bi_eq(0)
      20, // un_not(0)
      13, 46, // jmp_unless(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 143, // get_slot_direct(1)
      15, // dup(0)
      7, 112, // get_slot_direct_check(1)
      19, // swap(0)
      1, 243, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 143, // get_slot_direct(1)
      1, 182, // push_literal(1)
      8, 172, // set_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 143, // get_slot_direct(1)
      8, 199, // set_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 200, // push_literal(1)
      8, 172, // set_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 149, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      10, 0, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function {
    id: 58,
    nargs: 1,
    max_stack: 4,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 185, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 185, // get_slot_direct(1)
      8, 198, // set_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 150, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 3, // push_literal(1)
      10, 1, // invoke(1)
      8, 199, // set_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 200, // push_literal(1)
      8, 172, // set_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 149, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 209, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function {
    id: 59,
    nargs: 1,
    max_stack: 5,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 185, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 10, // set_slot_direct(1)
      0, // push_frame(0)
      3, // new_array(0)
      8, 10, // set_slot_direct(1)
      0, // push_frame(0)
      5, 185, // get_slot_direct(1)
      5, 176, // get_slot_direct(1)
      1, 107, // push_literal(1)
      23, // bi_eq(0)
      15, // dup(0)
      20, // un_not(0)
      13, 41, // jmp_unless(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 185, // get_slot_direct(1)
      5, 176, // get_slot_direct(1)
      1, 202, // push_literal(1)
      23, // bi_eq(0)
      13, 80, // jmp_unless(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 227, // push_literal(1)
      8, 172, // set_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 185, // get_slot_direct(1)
      5, 198, // get_slot_direct(1)
      8, 198, // set_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 185, // get_slot_direct(1)
      5, 199, // get_slot_direct(1)
      8, 199, // set_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 10, // get_slot_direct(1)
      8, 226, // set_slot_direct(1)
      12, 191, // jmp(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 200, // push_literal(1)
      8, 172, // set_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 185, // get_slot_direct(1)
      8, 198, // set_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 10, // get_slot_direct(1)
      8, 199, // set_slot_direct(1)
      0, // push_frame(0)
      5, 185, // get_slot_direct(1)
      5, 172, // get_slot_direct(1)
      1, 187, // push_literal(1)
      23, // bi_eq(0)
      20, // un_not(0)
      15, // dup(0)
      13, 177, // jmp_unless(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 185, // get_slot_direct(1)
      5, 172, // get_slot_direct(1)
      1, 4, // push_literal(1)
      23, // bi_eq(0)
      20, // un_not(0)
      15, // dup(0)
      13, 177, // jmp_unless(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 185, // get_slot_direct(1)
      5, 176, // get_slot_direct(1)
      1, 186, // push_literal(1)
      23, // bi_eq(0)
      20, // un_not(0)
      15, // dup(0)
      13, 177, // jmp_unless(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 185, // get_slot_direct(1)
      5, 176, // get_slot_direct(1)
      1, 230, // push_literal(1)
      23, // bi_eq(0)
      20, // un_not(0)
      15, // dup(0)
      13, 177, // jmp_unless(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 185, // get_slot_direct(1)
      5, 176, // get_slot_direct(1)
      1, 228, // push_literal(1)
      23, // bi_eq(0)
      20, // un_not(0)
      15, // dup(0)
      13, 177, // jmp_unless(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 185, // get_slot_direct(1)
      5, 176, // get_slot_direct(1)
      1, 224, // push_literal(1)
      23, // bi_eq(0)
      20, // un_not(0)
      13, 191, // jmp_unless(1)
      0, // push_frame(0)
      5, 185, // get_slot_direct(1)
      15, // dup(0)
      7, 112, // get_slot_direct_check(1)
      19, // swap(0)
      1, 245, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 143, // get_slot_direct(1)
      5, 176, // get_slot_direct(1)
      1, 208, // push_literal(1)
      23, // bi_eq(0)
      20, // un_not(0)
      13, 261, // jmp_unless(1)
      12, 256, // jmp(1)
      0, // push_frame(0)
      5, 10, // get_slot_direct(1)
      15, // dup(0)
      7, 36, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 150, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 3, // push_literal(1)
      10, 1, // invoke(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 143, // get_slot_direct(1)
      5, 176, // get_slot_direct(1)
      1, 54, // push_literal(1)
      23, // bi_eq(0)
      20, // un_not(0)
      13, 243, // jmp_unless(1)
      12, 261, // jmp(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 149, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 54, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      1, 71, // push_literal(1)
      20, // un_not(0)
      13, 206, // jmp_unless(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 149, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 208, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function {
    id: 60,
    nargs: 0,
    max_stack: 4,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 40, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 150, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 3, // push_literal(1)
      10, 1, // invoke(1)
      8, 40, // set_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 149, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 208, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 40, // get_slot_direct(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function {
    id: 61,
    nargs: 0,
    max_stack: 5,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 10, // set_slot_direct(1)
      0, // push_frame(0)
      3, // new_array(0)
      8, 10, // set_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 143, // get_slot_direct(1)
      5, 172, // get_slot_direct(1)
      1, 4, // push_literal(1)
      23, // bi_eq(0)
      13, 77, // jmp_unless(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 141, // get_slot_direct(1)
      15, // dup(0)
      7, 20, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 143, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 143, // get_slot_direct(1)
      5, 94, // get_slot_direct(1)
      8, 4, // set_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 141, // get_slot_direct(1)
      8, 141, // set_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 149, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      10, 0, // invoke(1)
      14, // pop(0)
      12, 84, // jmp(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 42, // push_literal(1)
      8, 4, // set_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 148, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      10, 0, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 141, // get_slot_direct(1)
      15, // dup(0)
      7, 20, // get_slot_direct_check(1)
      19, // swap(0)
      2, // new_object(0)
      15, // dup(0)
      1, 2, // push_literal(1)
      8, 94, // set_slot_direct(1)
      15, // dup(0)
      1, 4, // push_literal(1)
      8, 172, // set_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 149, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 186, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 143, // get_slot_direct(1)
      5, 176, // get_slot_direct(1)
      1, 208, // push_literal(1)
      23, // bi_eq(0)
      20, // un_not(0)
      13, 249, // jmp_unless(1)
      12, 244, // jmp(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 143, // get_slot_direct(1)
      5, 172, // get_slot_direct(1)
      1, 4, // push_literal(1)
      23, // bi_eq(0)
      20, // un_not(0)
      13, 173, // jmp_unless(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 143, // get_slot_direct(1)
      15, // dup(0)
      7, 112, // get_slot_direct_check(1)
      19, // swap(0)
      1, 248, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 141, // get_slot_direct(1)
      15, // dup(0)
      7, 20, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 143, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 10, // get_slot_direct(1)
      15, // dup(0)
      7, 36, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 143, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 149, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      10, 0, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 143, // get_slot_direct(1)
      5, 176, // get_slot_direct(1)
      1, 54, // push_literal(1)
      23, // bi_eq(0)
      20, // un_not(0)
      13, 231, // jmp_unless(1)
      12, 249, // jmp(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 149, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 54, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      1, 71, // push_literal(1)
      20, // un_not(0)
      13, 146, // jmp_unless(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 10, // get_slot_direct(1)
      8, 198, // set_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 149, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 208, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 149, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 193, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 153, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      10, 0, // invoke(1)
      8, 199, // set_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 149, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 192, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 187, // push_literal(1)
      8, 172, // set_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 141, // get_slot_direct(1)
      15, // dup(0)
      7, 38, // get_slot_direct_check(1)
      19, // swap(0)
      10, 0, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function {
    id: 62,
    nargs: 0,
    max_stack: 5,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 10, // set_slot_direct(1)
      0, // push_frame(0)
      3, // new_array(0)
      8, 10, // set_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 143, // get_slot_direct(1)
      5, 176, // get_slot_direct(1)
      1, 209, // push_literal(1)
      23, // bi_eq(0)
      20, // un_not(0)
      13, 83, // jmp_unless(1)
      12, 78, // jmp(1)
      0, // push_frame(0)
      5, 10, // get_slot_direct(1)
      15, // dup(0)
      7, 36, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 150, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 3, // push_literal(1)
      10, 1, // invoke(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 143, // get_slot_direct(1)
      5, 176, // get_slot_direct(1)
      1, 54, // push_literal(1)
      23, // bi_eq(0)
      20, // un_not(0)
      13, 65, // jmp_unless(1)
      12, 83, // jmp(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 149, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 54, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      1, 71, // push_literal(1)
      20, // un_not(0)
      13, 28, // jmp_unless(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 149, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 209, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 10, // get_slot_direct(1)
      8, 198, // set_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 206, // push_literal(1)
      8, 172, // set_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function {
    id: 63,
    nargs: 0,
    max_stack: 4,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 10, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 90, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 61, // set_slot_direct(1)
      0, // push_frame(0)
      3, // new_array(0)
      8, 10, // set_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 143, // get_slot_direct(1)
      5, 176, // get_slot_direct(1)
      1, 192, // push_literal(1)
      23, // bi_eq(0)
      20, // un_not(0)
      13, 179, // jmp_unless(1)
      12, 174, // jmp(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 143, // get_slot_direct(1)
      8, 90, // set_slot_direct(1)
      0, // push_frame(0)
      5, 90, // get_slot_direct(1)
      5, 172, // get_slot_direct(1)
      1, 4, // push_literal(1)
      23, // bi_eq(0)
      20, // un_not(0)
      15, // dup(0)
      13, 68, // jmp_unless(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 90, // get_slot_direct(1)
      5, 172, // get_slot_direct(1)
      1, 182, // push_literal(1)
      23, // bi_eq(0)
      20, // un_not(0)
      13, 84, // jmp_unless(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 143, // get_slot_direct(1)
      15, // dup(0)
      7, 112, // get_slot_direct_check(1)
      19, // swap(0)
      1, 249, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 149, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      10, 0, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 149, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 207, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 150, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 3, // push_literal(1)
      10, 1, // invoke(1)
      8, 61, // set_slot_direct(1)
      0, // push_frame(0)
      5, 61, // get_slot_direct(1)
      0, // push_frame(0)
      5, 90, // get_slot_direct(1)
      5, 94, // get_slot_direct(1)
      8, 250, // set_slot_direct(1)
      0, // push_frame(0)
      5, 10, // get_slot_direct(1)
      15, // dup(0)
      7, 36, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 61, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 143, // get_slot_direct(1)
      5, 176, // get_slot_direct(1)
      1, 54, // push_literal(1)
      23, // bi_eq(0)
      20, // un_not(0)
      13, 161, // jmp_unless(1)
      12, 179, // jmp(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 149, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 54, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      1, 71, // push_literal(1)
      20, // un_not(0)
      13, 38, // jmp_unless(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 149, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 192, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 10, // get_slot_direct(1)
      8, 198, // set_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 206, // push_literal(1)
      8, 172, // set_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function {
    id: 64,
    nargs: 0,
    max_stack: 5,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 10, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 153, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      10, 0, // invoke(1)
      8, 10, // set_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 149, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 192, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      3, // new_array(0)
      15, // dup(0)
      2, // new_object(0)
      15, // dup(0)
      1, 45, // push_literal(1)
      8, 94, // set_slot_direct(1)
      15, // dup(0)
      1, 151, // push_literal(1)
      8, 172, // set_slot_direct(1)
      15, // dup(0)
      0, // push_frame(0)
      5, 10, // get_slot_direct(1)
      8, 198, // set_slot_direct(1)
      8, 3, // set_slot_direct(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function {
    id: 65,
    nargs: 0,
    max_stack: 4,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 10, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 90, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 127, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 61, // set_slot_direct(1)
      0, // push_frame(0)
      3, // new_array(0)
      8, 10, // set_slot_direct(1)
      12, 226, // jmp(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 143, // get_slot_direct(1)
      8, 90, // set_slot_direct(1)
      0, // push_frame(0)
      5, 90, // get_slot_direct(1)
      5, 172, // get_slot_direct(1)
      1, 4, // push_literal(1)
      23, // bi_eq(0)
      20, // un_not(0)
      13, 61, // jmp_unless(1)
      0, // push_frame(0)
      5, 90, // get_slot_direct(1)
      15, // dup(0)
      7, 112, // get_slot_direct_check(1)
      19, // swap(0)
      1, 251, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 141, // get_slot_direct(1)
      15, // dup(0)
      7, 20, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 90, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      2, // new_object(0)
      15, // dup(0)
      1, 191, // push_literal(1)
      8, 94, // set_slot_direct(1)
      15, // dup(0)
      1, 151, // push_literal(1)
      8, 172, // set_slot_direct(1)
      15, // dup(0)
      0, // push_frame(0)
      5, 90, // get_slot_direct(1)
      8, 198, // set_slot_direct(1)
      8, 61, // set_slot_direct(1)
      0, // push_frame(0)
      5, 10, // get_slot_direct(1)
      15, // dup(0)
      7, 36, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 61, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 149, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      10, 0, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 143, // get_slot_direct(1)
      5, 176, // get_slot_direct(1)
      1, 219, // push_literal(1)
      23, // bi_eq(0)
      13, 198, // jmp_unless(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 143, // get_slot_direct(1)
      8, 127, // set_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 149, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 219, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 127, // get_slot_direct(1)
      0, // push_frame(0)
      5, 90, // get_slot_direct(1)
      8, 198, // set_slot_direct(1)
      0, // push_frame(0)
      5, 127, // get_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 150, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 3, // push_literal(1)
      10, 1, // invoke(1)
      8, 199, // set_slot_direct(1)
      0, // push_frame(0)
      5, 127, // get_slot_direct(1)
      1, 200, // push_literal(1)
      8, 172, // set_slot_direct(1)
      0, // push_frame(0)
      5, 10, // get_slot_direct(1)
      15, // dup(0)
      7, 36, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 127, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 143, // get_slot_direct(1)
      5, 176, // get_slot_direct(1)
      1, 54, // push_literal(1)
      23, // bi_eq(0)
      20, // un_not(0)
      13, 213, // jmp_unless(1)
      12, 231, // jmp(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 149, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 54, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      1, 71, // push_literal(1)
      20, // un_not(0)
      13, 30, // jmp_unless(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 149, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 189, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 10, // get_slot_direct(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function {
    id: 66,
    nargs: 0,
    max_stack: 5,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 149, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 186, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 150, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 3, // push_literal(1)
      10, 1, // invoke(1)
      8, 198, // set_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 149, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 208, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 45, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      10, 0, // invoke(1)
      1, 3, // push_literal(1)
      6, // get_slot_indirect(0)
      8, 199, // set_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 143, // get_slot_direct(1)
      5, 176, // get_slot_direct(1)
      1, 210, // push_literal(1)
      23, // bi_eq(0)
      13, 165, // jmp_unless(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 141, // get_slot_direct(1)
      15, // dup(0)
      7, 173, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 143, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 149, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 210, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 143, // get_slot_direct(1)
      5, 176, // get_slot_direct(1)
      1, 252, // push_literal(1)
      23, // bi_eq(0)
      13, 148, // jmp_unless(1)
      2, // new_object(0)
      15, // dup(0)
      1, 45, // push_literal(1)
      8, 94, // set_slot_direct(1)
      15, // dup(0)
      1, 151, // push_literal(1)
      8, 172, // set_slot_direct(1)
      15, // dup(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 151, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      10, 0, // invoke(1)
      8, 198, // set_slot_direct(1)
      12, 161, // jmp(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 45, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      10, 0, // invoke(1)
      1, 3, // push_literal(1)
      6, // get_slot_indirect(0)
      8, 226, // set_slot_direct(1)
      12, 172, // jmp(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 42, // push_literal(1)
      8, 226, // set_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 151, // push_literal(1)
      8, 172, // set_slot_direct(1)
      3, // new_array(0)
      15, // dup(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      8, 3, // set_slot_direct(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function {
    id: 67,
    nargs: 0,
    max_stack: 4,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 143, // get_slot_direct(1)
      5, 176, // get_slot_direct(1)
      1, 189, // push_literal(1)
      23, // bi_eq(0)
      20, // un_not(0)
      13, 36, // jmp_unless(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 150, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 3, // push_literal(1)
      10, 1, // invoke(1)
      8, 198, // set_slot_direct(1)
      12, 43, // jmp(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 42, // push_literal(1)
      8, 198, // set_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 149, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 189, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 143, // get_slot_direct(1)
      5, 176, // get_slot_direct(1)
      1, 192, // push_literal(1)
      23, // bi_eq(0)
      20, // un_not(0)
      13, 83, // jmp_unless(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 143, // get_slot_direct(1)
      15, // dup(0)
      7, 112, // get_slot_direct_check(1)
      19, // swap(0)
      1, 254, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 151, // push_literal(1)
      8, 172, // set_slot_direct(1)
      3, // new_array(0)
      15, // dup(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      8, 3, // set_slot_direct(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function {
    id: 68,
    nargs: 0,
    max_stack: 3,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 149, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 189, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 143, // get_slot_direct(1)
      5, 176, // get_slot_direct(1)
      1, 192, // push_literal(1)
      23, // bi_eq(0)
      20, // un_not(0)
      13, 44, // jmp_unless(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 143, // get_slot_direct(1)
      15, // dup(0)
      7, 112, // get_slot_direct_check(1)
      19, // swap(0)
      1, 254, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 151, // push_literal(1)
      8, 172, // set_slot_direct(1)
      3, // new_array(0)
      15, // dup(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      8, 3, // set_slot_direct(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function {
    id: 69,
    nargs: 0,
    max_stack: 4,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 149, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 186, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 150, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 3, // push_literal(1)
      10, 1, // invoke(1)
      8, 198, // set_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 149, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 208, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 45, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      10, 0, // invoke(1)
      1, 3, // push_literal(1)
      6, // get_slot_indirect(0)
      8, 199, // set_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 151, // push_literal(1)
      8, 172, // set_slot_direct(1)
      3, // new_array(0)
      15, // dup(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      8, 3, // set_slot_direct(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // "parse"
    id: 70,
    nargs: 3,
    max_stack: 6,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 256, // set_slot_direct(1)
      15, // dup(0)
      5, 5, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 257, // set_slot_direct(1)
      15, // dup(0)
      5, 7, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 258, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 174, // set_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      0, // push_frame(0)
      5, 258, // get_slot_direct(1)
      8, 88, // set_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 84, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 256, // get_slot_direct(1)
      1, 259, // push_literal(1)
      1, 260, // push_literal(1)
      10, 3, // invoke(1)
      8, 144, // set_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      1, 3, // push_literal(1)
      8, 145, // set_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 148, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      10, 0, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 257, // get_slot_direct(1)
      13, 152, // jmp_unless(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 84, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 257, // get_slot_direct(1)
      10, 1, // invoke(1)
      8, 257, // set_slot_direct(1)
      0, // push_frame(0)
      1, 3, // push_literal(1)
      8, 12, // set_slot_direct(1)
      12, 139, // jmp(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 141, // get_slot_direct(1)
      15, // dup(0)
      7, 20, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 257, // get_slot_direct(1)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      6, // get_slot_indirect(0)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      15, // dup(0)
      5, 12, // get_slot_direct(1)
      1, 5, // push_literal(1)
      26, // bi_add(0)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      0, // push_frame(0)
      5, 257, // get_slot_direct(1)
      5, 15, // get_slot_direct(1)
      19, // swap(0)
      24, // bi_gt(0)
      20, // un_not(0)
      13, 111, // jmp_unless(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 149, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      10, 0, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 153, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      10, 0, // invoke(1)
      8, 174, // set_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 149, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 179, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 141, // get_slot_direct(1)
      15, // dup(0)
      7, 38, // get_slot_direct_check(1)
      19, // swap(0)
      10, 0, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 174, // get_slot_direct(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // "make_bytecode_table"
    id: 71,
    nargs: 0,
    max_stack: 7,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 264, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 265, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 266, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 267, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 268, // set_slot_direct(1)
      0, // push_frame(0)
      3, // new_array(0)
      8, 264, // set_slot_direct(1)
      0, // push_frame(0)
      2, // new_object(0)
      8, 265, // set_slot_direct(1)
      0, // push_frame(0)
      4, 72, // new_function(1)
      8, 266, // set_slot_direct(1)
      0, // push_frame(0)
      4, 76, // new_function(1)
      8, 267, // set_slot_direct(1)
      0, // push_frame(0)
      4, 77, // new_function(1)
      8, 268, // set_slot_direct(1)
      0, // push_frame(0)
      5, 266, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 283, // push_literal(1)
      1, 3, // push_literal(1)
      1, 3, // push_literal(1)
      1, 5, // push_literal(1)
      10, 4, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 266, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 284, // push_literal(1)
      1, 5, // push_literal(1)
      1, 3, // push_literal(1)
      1, 5, // push_literal(1)
      0, // push_frame(0)
      5, 267, // get_slot_direct(1)
      10, 5, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 266, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 285, // push_literal(1)
      1, 3, // push_literal(1)
      1, 3, // push_literal(1)
      1, 5, // push_literal(1)
      10, 4, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 266, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 286, // push_literal(1)
      1, 3, // push_literal(1)
      1, 3, // push_literal(1)
      1, 5, // push_literal(1)
      10, 4, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 266, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 287, // push_literal(1)
      1, 5, // push_literal(1)
      1, 3, // push_literal(1)
      1, 5, // push_literal(1)
      10, 4, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 266, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 288, // push_literal(1)
      1, 5, // push_literal(1)
      1, 5, // push_literal(1)
      1, 5, // push_literal(1)
      0, // push_frame(0)
      5, 267, // get_slot_direct(1)
      10, 5, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 266, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 289, // push_literal(1)
      1, 3, // push_literal(1)
      1, 7, // push_literal(1)
      1, 5, // push_literal(1)
      10, 4, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 266, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 290, // push_literal(1)
      1, 5, // push_literal(1)
      1, 5, // push_literal(1)
      1, 5, // push_literal(1)
      0, // push_frame(0)
      5, 267, // get_slot_direct(1)
      10, 5, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 266, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 291, // push_literal(1)
      1, 5, // push_literal(1)
      1, 7, // push_literal(1)
      1, 3, // push_literal(1)
      0, // push_frame(0)
      5, 267, // get_slot_direct(1)
      10, 5, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 266, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 292, // push_literal(1)
      1, 3, // push_literal(1)
      1, 87, // push_literal(1)
      1, 3, // push_literal(1)
      10, 4, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 266, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 293, // push_literal(1)
      1, 5, // push_literal(1)
      4, 78, // new_function(1)
      1, 5, // push_literal(1)
      10, 4, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 266, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 253, // push_literal(1)
      1, 3, // push_literal(1)
      1, 5, // push_literal(1)
      1, 3, // push_literal(1)
      10, 4, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 266, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 296, // push_literal(1)
      1, 5, // push_literal(1)
      1, 3, // push_literal(1)
      1, 3, // push_literal(1)
      0, // push_frame(0)
      5, 268, // get_slot_direct(1)
      10, 5, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 266, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 297, // push_literal(1)
      1, 5, // push_literal(1)
      1, 5, // push_literal(1)
      1, 3, // push_literal(1)
      0, // push_frame(0)
      5, 268, // get_slot_direct(1)
      10, 5, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 266, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 38, // push_literal(1)
      1, 3, // push_literal(1)
      1, 5, // push_literal(1)
      1, 3, // push_literal(1)
      10, 4, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 266, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 298, // push_literal(1)
      1, 3, // push_literal(1)
      1, 5, // push_literal(1)
      1, 7, // push_literal(1)
      10, 4, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 266, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 299, // push_literal(1)
      1, 3, // push_literal(1)
      1, 7, // push_literal(1)
      1, 131, // push_literal(1)
      10, 4, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 266, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 300, // push_literal(1)
      1, 3, // push_literal(1)
      1, 7, // push_literal(1)
      1, 87, // push_literal(1)
      10, 4, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 266, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 301, // push_literal(1)
      1, 3, // push_literal(1)
      1, 87, // push_literal(1)
      1, 131, // push_literal(1)
      10, 4, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 266, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 302, // push_literal(1)
      1, 3, // push_literal(1)
      1, 7, // push_literal(1)
      1, 7, // push_literal(1)
      10, 4, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 266, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 303, // push_literal(1)
      1, 3, // push_literal(1)
      1, 5, // push_literal(1)
      1, 5, // push_literal(1)
      10, 4, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 266, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 304, // push_literal(1)
      1, 3, // push_literal(1)
      1, 5, // push_literal(1)
      1, 5, // push_literal(1)
      10, 4, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 266, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 305, // push_literal(1)
      1, 3, // push_literal(1)
      1, 5, // push_literal(1)
      1, 5, // push_literal(1)
      10, 4, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 266, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 306, // push_literal(1)
      1, 3, // push_literal(1)
      1, 7, // push_literal(1)
      1, 5, // push_literal(1)
      10, 4, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 266, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 307, // push_literal(1)
      1, 3, // push_literal(1)
      1, 7, // push_literal(1)
      1, 5, // push_literal(1)
      10, 4, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 266, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 308, // push_literal(1)
      1, 3, // push_literal(1)
      1, 7, // push_literal(1)
      1, 5, // push_literal(1)
      10, 4, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 266, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 309, // push_literal(1)
      1, 3, // push_literal(1)
      1, 7, // push_literal(1)
      1, 5, // push_literal(1)
      10, 4, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 266, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 310, // push_literal(1)
      1, 3, // push_literal(1)
      1, 7, // push_literal(1)
      1, 5, // push_literal(1)
      10, 4, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 266, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 311, // push_literal(1)
      1, 3, // push_literal(1)
      1, 7, // push_literal(1)
      1, 5, // push_literal(1)
      10, 4, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 266, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 312, // push_literal(1)
      1, 3, // push_literal(1)
      1, 7, // push_literal(1)
      1, 5, // push_literal(1)
      10, 4, // invoke(1)
      14, // pop(0)
      2, // new_object(0)
      15, // dup(0)
      1, 263, // push_literal(1)
      8, 137, // set_slot_direct(1)
      15, // dup(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 313, // get_slot_direct(1)
      8, 139, // set_slot_direct(1)
      15, // dup(0)
      3, // new_array(0)
      8, 262, // set_slot_direct(1)
      15, // dup(0)
      4, 79, // new_function(1)
      8, 314, // set_slot_direct(1)
      15, // dup(0)
      4, 80, // new_function(1)
      8, 315, // set_slot_direct(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // "bc"
    id: 72,
    nargs: 5,
    max_stack: 4,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 4, // set_slot_direct(1)
      15, // dup(0)
      5, 5, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 269, // set_slot_direct(1)
      15, // dup(0)
      5, 7, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 270, // set_slot_direct(1)
      15, // dup(0)
      5, 87, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 271, // set_slot_direct(1)
      15, // dup(0)
      5, 131, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 272, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 273, // set_slot_direct(1)
      0, // push_frame(0)
      2, // new_object(0)
      15, // dup(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 264, // get_slot_direct(1)
      5, 15, // get_slot_direct(1)
      8, 176, // set_slot_direct(1)
      15, // dup(0)
      0, // push_frame(0)
      5, 4, // get_slot_direct(1)
      8, 4, // set_slot_direct(1)
      15, // dup(0)
      0, // push_frame(0)
      5, 269, // get_slot_direct(1)
      8, 269, // set_slot_direct(1)
      15, // dup(0)
      0, // push_frame(0)
      5, 270, // get_slot_direct(1)
      8, 270, // set_slot_direct(1)
      15, // dup(0)
      0, // push_frame(0)
      5, 271, // get_slot_direct(1)
      8, 271, // set_slot_direct(1)
      15, // dup(0)
      0, // push_frame(0)
      5, 272, // get_slot_direct(1)
      8, 272, // set_slot_direct(1)
      8, 273, // set_slot_direct(1)
      0, // push_frame(0)
      5, 273, // get_slot_direct(1)
      5, 270, // get_slot_direct(1)
      22, // un_typeof(0)
      1, 187, // push_literal(1)
      23, // bi_eq(0)
      20, // un_not(0)
      13, 107, // jmp_unless(1)
      0, // push_frame(0)
      5, 273, // get_slot_direct(1)
      4, 73, // new_function(1)
      8, 270, // set_slot_direct(1)
      0, // push_frame(0)
      5, 273, // get_slot_direct(1)
      5, 271, // get_slot_direct(1)
      22, // un_typeof(0)
      1, 187, // push_literal(1)
      23, // bi_eq(0)
      20, // un_not(0)
      13, 126, // jmp_unless(1)
      0, // push_frame(0)
      5, 273, // get_slot_direct(1)
      4, 74, // new_function(1)
      8, 271, // set_slot_direct(1)
      0, // push_frame(0)
      5, 273, // get_slot_direct(1)
      5, 272, // get_slot_direct(1)
      20, // un_not(0)
      13, 141, // jmp_unless(1)
      0, // push_frame(0)
      5, 273, // get_slot_direct(1)
      4, 75, // new_function(1)
      8, 272, // set_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 264, // get_slot_direct(1)
      0, // push_frame(0)
      5, 273, // get_slot_direct(1)
      5, 176, // get_slot_direct(1)
      0, // push_frame(0)
      5, 273, // get_slot_direct(1)
      9, // set_slot_indirect(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 265, // get_slot_direct(1)
      0, // push_frame(0)
      5, 273, // get_slot_direct(1)
      5, 4, // get_slot_direct(1)
      0, // push_frame(0)
      5, 273, // get_slot_direct(1)
      9, // set_slot_indirect(0)
      1, 0, // push_literal(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // ".stackpop"
    id: 73,
    nargs: 0,
    max_stack: 1,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 270, // get_slot_direct(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // ".stackpush"
    id: 74,
    nargs: 0,
    max_stack: 1,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 271, // get_slot_direct(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // ".printargs"
    id: 75,
    nargs: 3,
    max_stack: 5,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 274, // set_slot_direct(1)
      15, // dup(0)
      5, 5, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 275, // set_slot_direct(1)
      15, // dup(0)
      5, 7, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 276, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 39, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      1, 33, // push_literal(1)
      8, 39, // set_slot_direct(1)
      0, // push_frame(0)
      1, 3, // push_literal(1)
      8, 12, // set_slot_direct(1)
      12, 86, // jmp(1)
      0, // push_frame(0)
      15, // dup(0)
      5, 39, // get_slot_direct(1)
      1, 99, // push_literal(1)
      26, // bi_add(0)
      8, 39, // set_slot_direct(1)
      0, // push_frame(0)
      15, // dup(0)
      5, 39, // get_slot_direct(1)
      0, // push_frame(0)
      5, 275, // get_slot_direct(1)
      0, // push_frame(0)
      5, 276, // get_slot_direct(1)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      26, // bi_add(0)
      1, 5, // push_literal(1)
      26, // bi_add(0)
      6, // get_slot_indirect(0)
      26, // bi_add(0)
      8, 39, // set_slot_direct(1)
      0, // push_frame(0)
      15, // dup(0)
      5, 12, // get_slot_direct(1)
      1, 5, // push_literal(1)
      26, // bi_add(0)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 269, // get_slot_direct(1)
      19, // swap(0)
      24, // bi_gt(0)
      20, // un_not(0)
      13, 47, // jmp_unless(1)
      0, // push_frame(0)
      5, 39, // get_slot_direct(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // "print_literal"
    id: 76,
    nargs: 3,
    max_stack: 4,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 274, // set_slot_direct(1)
      15, // dup(0)
      5, 5, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 275, // set_slot_direct(1)
      15, // dup(0)
      5, 7, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 276, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 277, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 275, // get_slot_direct(1)
      0, // push_frame(0)
      5, 276, // get_slot_direct(1)
      1, 5, // push_literal(1)
      26, // bi_add(0)
      6, // get_slot_indirect(0)
      8, 277, // set_slot_direct(1)
      1, 99, // push_literal(1)
      0, // push_frame(0)
      5, 277, // get_slot_direct(1)
      26, // bi_add(0)
      1, 278, // push_literal(1)
      26, // bi_add(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      5, 279, // get_slot_direct(1)
      0, // push_frame(0)
      5, 277, // get_slot_direct(1)
      6, // get_slot_indirect(0)
      26, // bi_add(0)
      1, 280, // push_literal(1)
      26, // bi_add(0)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // "print_label"
    id: 77,
    nargs: 3,
    max_stack: 4,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 274, // set_slot_direct(1)
      15, // dup(0)
      5, 5, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 275, // set_slot_direct(1)
      15, // dup(0)
      5, 7, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 276, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 281, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 275, // get_slot_direct(1)
      0, // push_frame(0)
      5, 276, // get_slot_direct(1)
      1, 5, // push_literal(1)
      26, // bi_add(0)
      6, // get_slot_indirect(0)
      8, 281, // set_slot_direct(1)
      0, // push_frame(0)
      5, 281, // get_slot_direct(1)
      22, // un_typeof(0)
      1, 111, // push_literal(1)
      23, // bi_eq(0)
      20, // un_not(0)
      13, 61, // jmp_unless(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 281, // get_slot_direct(1)
      5, 282, // get_slot_direct(1)
      8, 281, // set_slot_direct(1)
      1, 99, // push_literal(1)
      0, // push_frame(0)
      5, 281, // get_slot_direct(1)
      26, // bi_add(0)
      11 // return(0)
    ]
  });
  vec::push(functions, Function {
    id: 78,
    nargs: 2,
    max_stack: 3,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 294, // set_slot_direct(1)
      15, // dup(0)
      5, 5, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 295, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 295, // get_slot_direct(1)
      1, 7, // push_literal(1)
      26, // bi_add(0)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // "for_num:"
    id: 79,
    nargs: 1,
    max_stack: 3,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 90, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 264, // get_slot_direct(1)
      0, // push_frame(0)
      5, 90, // get_slot_direct(1)
      6, // get_slot_indirect(0)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // "for_name:"
    id: 80,
    nargs: 1,
    max_stack: 3,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 4, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 265, // get_slot_direct(1)
      0, // push_frame(0)
      5, 4, // get_slot_direct(1)
      6, // get_slot_indirect(0)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // "make_bcompile"
    id: 81,
    nargs: 1,
    max_stack: 6,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 317, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 318, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 319, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 320, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 206, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 200, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 159, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 227, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 160, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 316, // set_slot_direct(1)
      0, // push_frame(0)
      4, 82, // new_function(1)
      8, 318, // set_slot_direct(1)
      0, // push_frame(0)
      2, // new_object(0)
      8, 319, // set_slot_direct(1)
      0, // push_frame(0)
      4, 83, // new_function(1)
      8, 320, // set_slot_direct(1)
      0, // push_frame(0)
      5, 319, // get_slot_direct(1)
      4, 99, // new_function(1)
      8, 4, // set_slot_direct(1)
      0, // push_frame(0)
      5, 319, // get_slot_direct(1)
      4, 100, // new_function(1)
      8, 182, // set_slot_direct(1)
      0, // push_frame(0)
      5, 319, // get_slot_direct(1)
      4, 101, // new_function(1)
      8, 206, // set_slot_direct(1)
      0, // push_frame(0)
      4, 102, // new_function(1)
      8, 206, // set_slot_direct(1)
      0, // push_frame(0)
      5, 206, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 246, // push_literal(1)
      1, 303, // push_literal(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 206, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 109, // push_literal(1)
      1, 304, // push_literal(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 206, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 247, // push_literal(1)
      1, 305, // push_literal(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 206, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 202, // push_literal(1)
      4, 104, // new_function(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 206, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 193, // push_literal(1)
      4, 106, // new_function(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 319, // get_slot_direct(1)
      4, 108, // new_function(1)
      8, 200, // set_slot_direct(1)
      0, // push_frame(0)
      4, 109, // new_function(1)
      8, 200, // set_slot_direct(1)
      0, // push_frame(0)
      4, 111, // new_function(1)
      8, 159, // set_slot_direct(1)
      0, // push_frame(0)
      5, 200, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 219, // push_literal(1)
      0, // push_frame(0)
      5, 159, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 42, // push_literal(1)
      10, 1, // invoke(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 200, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 220, // push_literal(1)
      0, // push_frame(0)
      5, 159, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 309, // push_literal(1)
      10, 1, // invoke(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 200, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 221, // push_literal(1)
      0, // push_frame(0)
      5, 159, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 310, // push_literal(1)
      10, 1, // invoke(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 200, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 222, // push_literal(1)
      0, // push_frame(0)
      5, 159, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 311, // push_literal(1)
      10, 1, // invoke(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 200, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 223, // push_literal(1)
      0, // push_frame(0)
      5, 159, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 312, // push_literal(1)
      10, 1, // invoke(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 200, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 228, // push_literal(1)
      4, 113, // new_function(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 200, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 230, // push_literal(1)
      4, 114, // new_function(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 200, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 232, // push_literal(1)
      1, 306, // push_literal(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 200, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 234, // push_literal(1)
      4, 115, // new_function(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 200, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 235, // push_literal(1)
      1, 307, // push_literal(1)
      1, 5, // push_literal(1)
      10, 3, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 200, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 237, // push_literal(1)
      1, 308, // push_literal(1)
      1, 5, // push_literal(1)
      10, 3, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 200, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 238, // push_literal(1)
      1, 307, // push_literal(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 200, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 239, // push_literal(1)
      1, 308, // push_literal(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 200, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 110, // push_literal(1)
      1, 309, // push_literal(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 200, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 109, // push_literal(1)
      1, 310, // push_literal(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 200, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 135, // push_literal(1)
      1, 311, // push_literal(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 200, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 134, // push_literal(1)
      1, 312, // push_literal(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 200, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 107, // push_literal(1)
      4, 116, // new_function(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 200, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 202, // push_literal(1)
      4, 117, // new_function(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 200, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 186, // push_literal(1)
      4, 118, // new_function(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 319, // get_slot_direct(1)
      4, 120, // new_function(1)
      8, 227, // set_slot_direct(1)
      0, // push_frame(0)
      4, 121, // new_function(1)
      8, 227, // set_slot_direct(1)
      0, // push_frame(0)
      5, 227, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 224, // push_literal(1)
      4, 122, // new_function(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 227, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 186, // push_literal(1)
      4, 123, // new_function(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 319, // get_slot_direct(1)
      4, 125, // new_function(1)
      8, 151, // set_slot_direct(1)
      0, // push_frame(0)
      4, 126, // new_function(1)
      8, 160, // set_slot_direct(1)
      0, // push_frame(0)
      5, 160, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 45, // push_literal(1)
      4, 127, // new_function(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 160, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 191, // push_literal(1)
      4, 129, // new_function(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 160, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 252, // push_literal(1)
      4, 130, // new_function(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 160, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 253, // push_literal(1)
      4, 131, // new_function(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 160, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 255, // push_literal(1)
      4, 132, // new_function(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 160, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 77, // push_literal(1)
      4, 133, // new_function(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 319, // get_slot_direct(1)
      1, 14, // push_literal(1)
      4, 134, // new_function(1)
      9, // set_slot_indirect(0)
      0, // push_frame(0)
      5, 319, // get_slot_direct(1)
      1, 187, // push_literal(1)
      4, 135, // new_function(1)
      9, // set_slot_indirect(0)
      0, // push_frame(0)
      4, 137, // new_function(1)
      8, 316, // set_slot_direct(1)
      0, // push_frame(0)
      5, 316, // get_slot_direct(1)
      1, 316, // push_literal(1)
      8, 137, // set_slot_direct(1)
      0, // push_frame(0)
      5, 316, // get_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 385, // get_slot_direct(1)
      8, 139, // set_slot_direct(1)
      0, // push_frame(0)
      5, 316, // get_slot_direct(1)
      3, // new_array(0)
      15, // dup(0)
      1, 263, // push_literal(1)
      8, 3, // set_slot_direct(1)
      8, 262, // set_slot_direct(1)
      0, // push_frame(0)
      5, 316, // get_slot_direct(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // "assert"
    id: 82,
    nargs: 2,
    max_stack: 4,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 124, // set_slot_direct(1)
      15, // dup(0)
      5, 5, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 321, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 124, // get_slot_direct(1)
      20, // un_not(0)
      13, 58, // jmp_unless(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 18, // get_slot_direct(1)
      5, 322, // get_slot_direct(1)
      15, // dup(0)
      7, 323, // get_slot_direct_check(1)
      19, // swap(0)
      1, 324, // push_literal(1)
      0, // push_frame(0)
      5, 321, // get_slot_direct(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 68, // get_slot_direct(1)
      15, // dup(0)
      7, 112, // get_slot_direct_check(1)
      19, // swap(0)
      1, 325, // push_literal(1)
      0, // push_frame(0)
      5, 321, // get_slot_direct(1)
      10, 2, // invoke(1)
      14, // pop(0)
      1, 0, // push_literal(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // "mkstate"
    id: 83,
    nargs: 0,
    max_stack: 4,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 274, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 326, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 327, // set_slot_direct(1)
      0, // push_frame(0)
      2, // new_object(0)
      15, // dup(0)
      3, // new_array(0)
      8, 328, // set_slot_direct(1)
      15, // dup(0)
      3, // new_array(0)
      8, 279, // set_slot_direct(1)
      15, // dup(0)
      1, 3, // push_literal(1)
      8, 141, // set_slot_direct(1)
      8, 274, // set_slot_direct(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      4, 84, // new_function(1)
      8, 182, // set_slot_direct(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      4, 85, // new_function(1)
      8, 287, // set_slot_direct(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      4, 86, // new_function(1)
      8, 341, // set_slot_direct(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      4, 87, // new_function(1)
      8, 344, // set_slot_direct(1)
      0, // push_frame(0)
      4, 88, // new_function(1)
      8, 326, // set_slot_direct(1)
      0, // push_frame(0)
      4, 89, // new_function(1)
      8, 327, // set_slot_direct(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      4, 90, // new_function(1)
      8, 357, // set_slot_direct(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      4, 91, // new_function(1)
      8, 359, // set_slot_direct(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      4, 92, // new_function(1)
      8, 360, // set_slot_direct(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      4, 93, // new_function(1)
      8, 362, // set_slot_direct(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      4, 94, // new_function(1)
      8, 363, // set_slot_direct(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      4, 95, // new_function(1)
      8, 364, // set_slot_direct(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      4, 96, // new_function(1)
      8, 367, // set_slot_direct(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      4, 97, // new_function(1)
      8, 366, // set_slot_direct(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      4, 98, // new_function(1)
      8, 369, // set_slot_direct(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // ".literal"
    id: 84,
    nargs: 1,
    max_stack: 3,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 329, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 330, // set_slot_direct(1)
      0, // push_frame(0)
      1, 3, // push_literal(1)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 329, // get_slot_direct(1)
      0, // push_frame(0)
      5, 329, // get_slot_direct(1)
      23, // bi_eq(0)
      20, // un_not(0)
      8, 330, // set_slot_direct(1)
      12, 93, // jmp(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 331, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 279, // get_slot_direct(1)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      6, // get_slot_indirect(0)
      8, 331, // set_slot_direct(1)
      0, // push_frame(0)
      5, 330, // get_slot_direct(1)
      13, 71, // jmp_unless(1)
      0, // push_frame(0)
      5, 331, // get_slot_direct(1)
      0, // push_frame(0)
      5, 331, // get_slot_direct(1)
      23, // bi_eq(0)
      20, // un_not(0)
      12, 78, // jmp(1)
      0, // push_frame(0)
      5, 331, // get_slot_direct(1)
      0, // push_frame(0)
      5, 329, // get_slot_direct(1)
      23, // bi_eq(0)
      13, 84, // jmp_unless(1)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      11, // return(0)
      0, // push_frame(0)
      15, // dup(0)
      5, 12, // get_slot_direct(1)
      1, 5, // push_literal(1)
      26, // bi_add(0)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 279, // get_slot_direct(1)
      5, 15, // get_slot_direct(1)
      19, // swap(0)
      24, // bi_gt(0)
      20, // un_not(0)
      13, 39, // jmp_unless(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 279, // get_slot_direct(1)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      0, // push_frame(0)
      5, 329, // get_slot_direct(1)
      9, // set_slot_indirect(0)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // ".new_function"
    id: 85,
    nargs: 1,
    max_stack: 4,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 60, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 332, // set_slot_direct(1)
      0, // push_frame(0)
      2, // new_object(0)
      15, // dup(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 328, // get_slot_direct(1)
      5, 15, // get_slot_direct(1)
      8, 176, // set_slot_direct(1)
      15, // dup(0)
      0, // push_frame(0)
      5, 60, // get_slot_direct(1)
      8, 60, // set_slot_direct(1)
      15, // dup(0)
      1, 3, // push_literal(1)
      8, 333, // set_slot_direct(1)
      15, // dup(0)
      3, // new_array(0)
      8, 275, // set_slot_direct(1)
      15, // dup(0)
      1, 3, // push_literal(1)
      8, 334, // set_slot_direct(1)
      15, // dup(0)
      3, // new_array(0)
      8, 335, // set_slot_direct(1)
      8, 332, // set_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 328, // get_slot_direct(1)
      0, // push_frame(0)
      5, 332, // get_slot_direct(1)
      5, 176, // get_slot_direct(1)
      0, // push_frame(0)
      5, 332, // get_slot_direct(1)
      9, // set_slot_indirect(0)
      0, // push_frame(0)
      5, 332, // get_slot_direct(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // ".emit"
    id: 86,
    nargs: 1,
    max_stack: 7,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 336, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 337, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 338, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 18, // get_slot_direct(1)
      5, 317, // get_slot_direct(1)
      15, // dup(0)
      7, 315, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 336, // get_slot_direct(1)
      10, 1, // invoke(1)
      8, 337, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 339, // get_slot_direct(1)
      8, 338, // set_slot_direct(1)
      0, // push_frame(0)
      1, 5, // push_literal(1)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 18, // get_slot_direct(1)
      5, 318, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 337, // get_slot_direct(1)
      0, // push_frame(0)
      5, 336, // get_slot_direct(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 18, // get_slot_direct(1)
      5, 318, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 338, // get_slot_direct(1)
      5, 334, // get_slot_direct(1)
      0, // push_frame(0)
      5, 337, // get_slot_direct(1)
      5, 270, // get_slot_direct(1)
      15, // dup(0)
      7, 19, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 337, // get_slot_direct(1)
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      10, 2, // invoke(1)
      25, // bi_gte(0)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 338, // get_slot_direct(1)
      5, 275, // get_slot_direct(1)
      15, // dup(0)
      7, 36, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 337, // get_slot_direct(1)
      5, 176, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      12, 160, // jmp(1)
      0, // push_frame(0)
      5, 338, // get_slot_direct(1)
      5, 275, // get_slot_direct(1)
      15, // dup(0)
      7, 36, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      6, // get_slot_indirect(0)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      15, // dup(0)
      5, 12, // get_slot_direct(1)
      1, 5, // push_literal(1)
      26, // bi_add(0)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      5, 15, // get_slot_direct(1)
      19, // swap(0)
      24, // bi_gt(0)
      20, // un_not(0)
      13, 132, // jmp_unless(1)
      0, // push_frame(0)
      5, 338, // get_slot_direct(1)
      15, // dup(0)
      5, 334, // get_slot_direct(1)
      0, // push_frame(0)
      5, 337, // get_slot_direct(1)
      5, 270, // get_slot_direct(1)
      15, // dup(0)
      7, 19, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 337, // get_slot_direct(1)
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      10, 2, // invoke(1)
      27, // bi_sub(0)
      8, 334, // set_slot_direct(1)
      0, // push_frame(0)
      5, 338, // get_slot_direct(1)
      15, // dup(0)
      5, 334, // get_slot_direct(1)
      0, // push_frame(0)
      5, 337, // get_slot_direct(1)
      5, 271, // get_slot_direct(1)
      15, // dup(0)
      7, 19, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 337, // get_slot_direct(1)
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      10, 2, // invoke(1)
      26, // bi_add(0)
      8, 334, // set_slot_direct(1)
      0, // push_frame(0)
      5, 338, // get_slot_direct(1)
      5, 334, // get_slot_direct(1)
      0, // push_frame(0)
      5, 338, // get_slot_direct(1)
      5, 333, // get_slot_direct(1)
      24, // bi_gt(0)
      13, 248, // jmp_unless(1)
      0, // push_frame(0)
      5, 338, // get_slot_direct(1)
      0, // push_frame(0)
      5, 338, // get_slot_direct(1)
      5, 334, // get_slot_direct(1)
      8, 333, // set_slot_direct(1)
      0, // push_frame(0)
      5, 338, // get_slot_direct(1)
      1, 71, // push_literal(1)
      8, 340, // set_slot_direct(1)
      1, 0, // push_literal(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // ".decompile"
    id: 87,
    nargs: 1,
    max_stack: 7,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 342, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 39, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 11, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 276, // set_slot_direct(1)
      0, // push_frame(0)
      1, 33, // push_literal(1)
      8, 39, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 328, // get_slot_direct(1)
      0, // push_frame(0)
      5, 342, // get_slot_direct(1)
      6, // get_slot_indirect(0)
      8, 11, // set_slot_direct(1)
      0, // push_frame(0)
      1, 3, // push_literal(1)
      8, 276, // set_slot_direct(1)
      12, 166, // jmp(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 337, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 18, // get_slot_direct(1)
      5, 317, // get_slot_direct(1)
      15, // dup(0)
      7, 314, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 11, // get_slot_direct(1)
      5, 275, // get_slot_direct(1)
      0, // push_frame(0)
      5, 276, // get_slot_direct(1)
      6, // get_slot_indirect(0)
      10, 1, // invoke(1)
      8, 337, // set_slot_direct(1)
      0, // push_frame(0)
      1, 3, // push_literal(1)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      15, // dup(0)
      5, 39, // get_slot_direct(1)
      0, // push_frame(0)
      5, 276, // get_slot_direct(1)
      1, 343, // push_literal(1)
      26, // bi_add(0)
      26, // bi_add(0)
      8, 39, // set_slot_direct(1)
      0, // push_frame(0)
      15, // dup(0)
      5, 39, // get_slot_direct(1)
      0, // push_frame(0)
      5, 337, // get_slot_direct(1)
      5, 4, // get_slot_direct(1)
      26, // bi_add(0)
      8, 39, // set_slot_direct(1)
      0, // push_frame(0)
      15, // dup(0)
      5, 39, // get_slot_direct(1)
      0, // push_frame(0)
      5, 337, // get_slot_direct(1)
      15, // dup(0)
      7, 272, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 11, // get_slot_direct(1)
      5, 275, // get_slot_direct(1)
      0, // push_frame(0)
      5, 276, // get_slot_direct(1)
      10, 3, // invoke(1)
      26, // bi_add(0)
      8, 39, // set_slot_direct(1)
      0, // push_frame(0)
      15, // dup(0)
      5, 39, // get_slot_direct(1)
      1, 118, // push_literal(1)
      26, // bi_add(0)
      8, 39, // set_slot_direct(1)
      0, // push_frame(0)
      15, // dup(0)
      5, 276, // get_slot_direct(1)
      1, 5, // push_literal(1)
      0, // push_frame(0)
      5, 337, // get_slot_direct(1)
      5, 269, // get_slot_direct(1)
      26, // bi_add(0)
      26, // bi_add(0)
      8, 276, // set_slot_direct(1)
      0, // push_frame(0)
      5, 276, // get_slot_direct(1)
      0, // push_frame(0)
      5, 11, // get_slot_direct(1)
      5, 275, // get_slot_direct(1)
      5, 15, // get_slot_direct(1)
      19, // swap(0)
      24, // bi_gt(0)
      20, // un_not(0)
      13, 50, // jmp_unless(1)
      0, // push_frame(0)
      5, 39, // get_slot_direct(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // "encode_uint"
    id: 88,
    nargs: 2,
    max_stack: 5,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 345, // set_slot_direct(1)
      15, // dup(0)
      5, 5, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 329, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 346, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 347, // set_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 18, // get_slot_direct(1)
      5, 318, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 329, // get_slot_direct(1)
      1, 3, // push_literal(1)
      25, // bi_gte(0)
      0, // push_frame(0)
      5, 329, // get_slot_direct(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 329, // get_slot_direct(1)
      1, 348, // push_literal(1)
      19, // swap(0)
      24, // bi_gt(0)
      13, 75, // jmp_unless(1)
      0, // push_frame(0)
      5, 345, // get_slot_direct(1)
      15, // dup(0)
      7, 36, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 329, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      1, 0, // push_literal(1)
      11, // return(0)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 18, // get_slot_direct(1)
      5, 18, // get_slot_direct(1)
      5, 349, // get_slot_direct(1)
      15, // dup(0)
      7, 350, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 329, // get_slot_direct(1)
      1, 348, // push_literal(1)
      29, // bi_div(0)
      10, 1, // invoke(1)
      8, 346, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 329, // get_slot_direct(1)
      1, 348, // push_literal(1)
      0, // push_frame(0)
      5, 346, // get_slot_direct(1)
      28, // bi_mul(0)
      27, // bi_sub(0)
      8, 347, // set_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 18, // get_slot_direct(1)
      5, 318, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 347, // get_slot_direct(1)
      1, 3, // push_literal(1)
      25, // bi_gte(0)
      15, // dup(0)
      13, 139, // jmp_unless(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 347, // get_slot_direct(1)
      1, 348, // push_literal(1)
      19, // swap(0)
      24, // bi_gt(0)
      0, // push_frame(0)
      5, 329, // get_slot_direct(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 18, // get_slot_direct(1)
      5, 318, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 346, // get_slot_direct(1)
      1, 3, // push_literal(1)
      24, // bi_gt(0)
      0, // push_frame(0)
      5, 329, // get_slot_direct(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 345, // get_slot_direct(1)
      15, // dup(0)
      7, 36, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 347, // get_slot_direct(1)
      1, 348, // push_literal(1)
      26, // bi_add(0)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 326, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 345, // get_slot_direct(1)
      0, // push_frame(0)
      5, 346, // get_slot_direct(1)
      10, 2, // invoke(1)
      14, // pop(0)
      1, 0, // push_literal(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // "encode_str"
    id: 89,
    nargs: 2,
    max_stack: 6,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 345, // set_slot_direct(1)
      15, // dup(0)
      5, 5, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 29, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      1, 3, // push_literal(1)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 326, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 345, // get_slot_direct(1)
      0, // push_frame(0)
      5, 29, // get_slot_direct(1)
      5, 15, // get_slot_direct(1)
      10, 2, // invoke(1)
      14, // pop(0)
      12, 84, // jmp(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 326, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 345, // get_slot_direct(1)
      0, // push_frame(0)
      5, 29, // get_slot_direct(1)
      15, // dup(0)
      7, 351, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      10, 1, // invoke(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      15, // dup(0)
      5, 12, // get_slot_direct(1)
      1, 5, // push_literal(1)
      26, // bi_add(0)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      0, // push_frame(0)
      5, 29, // get_slot_direct(1)
      5, 15, // get_slot_direct(1)
      19, // swap(0)
      24, // bi_gt(0)
      20, // un_not(0)
      13, 49, // jmp_unless(1)
      1, 0, // push_literal(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // ".encode"
    id: 90,
    nargs: 0,
    max_stack: 5,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 345, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      3, // new_array(0)
      8, 345, // set_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 326, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 345, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 328, // get_slot_direct(1)
      5, 15, // get_slot_direct(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 3, // push_literal(1)
      8, 12, // set_slot_direct(1)
      12, 249, // jmp(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 11, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 26, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 328, // get_slot_direct(1)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      6, // get_slot_indirect(0)
      8, 11, // set_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 326, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 345, // get_slot_direct(1)
      0, // push_frame(0)
      5, 11, // get_slot_direct(1)
      5, 60, // get_slot_direct(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 326, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 345, // get_slot_direct(1)
      0, // push_frame(0)
      5, 11, // get_slot_direct(1)
      5, 333, // get_slot_direct(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 327, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 345, // get_slot_direct(1)
      0, // push_frame(0)
      5, 11, // get_slot_direct(1)
      5, 4, // get_slot_direct(1)
      15, // dup(0)
      20, // un_not(0)
      13, 129, // jmp_unless(1)
      14, // pop(0)
      1, 33, // push_literal(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 326, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 345, // get_slot_direct(1)
      0, // push_frame(0)
      5, 11, // get_slot_direct(1)
      5, 275, // get_slot_direct(1)
      5, 15, // get_slot_direct(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 3, // push_literal(1)
      8, 26, // set_slot_direct(1)
      12, 225, // jmp(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 61, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 11, // get_slot_direct(1)
      5, 275, // get_slot_direct(1)
      0, // push_frame(0)
      5, 26, // get_slot_direct(1)
      6, // get_slot_indirect(0)
      8, 61, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 61, // get_slot_direct(1)
      22, // un_typeof(0)
      1, 111, // push_literal(1)
      23, // bi_eq(0)
      13, 192, // jmp_unless(1)
      0, // push_frame(0)
      5, 61, // get_slot_direct(1)
      12, 197, // jmp(1)
      0, // push_frame(0)
      5, 61, // get_slot_direct(1)
      5, 282, // get_slot_direct(1)
      8, 61, // set_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 326, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 345, // get_slot_direct(1)
      0, // push_frame(0)
      5, 61, // get_slot_direct(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      15, // dup(0)
      5, 26, // get_slot_direct(1)
      1, 5, // push_literal(1)
      26, // bi_add(0)
      8, 26, // set_slot_direct(1)
      0, // push_frame(0)
      5, 26, // get_slot_direct(1)
      0, // push_frame(0)
      5, 11, // get_slot_direct(1)
      5, 275, // get_slot_direct(1)
      5, 15, // get_slot_direct(1)
      19, // swap(0)
      24, // bi_gt(0)
      20, // un_not(0)
      13, 160, // jmp_unless(1)
      0, // push_frame(0)
      15, // dup(0)
      5, 12, // get_slot_direct(1)
      1, 5, // push_literal(1)
      26, // bi_add(0)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 328, // get_slot_direct(1)
      5, 15, // get_slot_direct(1)
      19, // swap(0)
      24, // bi_gt(0)
      20, // un_not(0)
      13, 46, // jmp_unless(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 326, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 345, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 279, // get_slot_direct(1)
      5, 15, // get_slot_direct(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 3, // push_literal(1)
      8, 12, // set_slot_direct(1)
      12, 537, // jmp(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 352, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 279, // get_slot_direct(1)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      6, // get_slot_indirect(0)
      8, 352, // set_slot_direct(1)
      0, // push_frame(0)
      5, 352, // get_slot_direct(1)
      22, // un_typeof(0)
      1, 111, // push_literal(1)
      23, // bi_eq(0)
      13, 359, // jmp_unless(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 326, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 345, // get_slot_direct(1)
      1, 3, // push_literal(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 327, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 345, // get_slot_direct(1)
      0, // push_frame(0)
      5, 352, // get_slot_direct(1)
      15, // dup(0)
      7, 76, // get_slot_direct_check(1)
      19, // swap(0)
      10, 0, // invoke(1)
      10, 2, // invoke(1)
      14, // pop(0)
      12, 528, // jmp(1)
      0, // push_frame(0)
      5, 352, // get_slot_direct(1)
      22, // un_typeof(0)
      1, 96, // push_literal(1)
      23, // bi_eq(0)
      13, 403, // jmp_unless(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 326, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 345, // get_slot_direct(1)
      1, 5, // push_literal(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 327, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 345, // get_slot_direct(1)
      0, // push_frame(0)
      5, 352, // get_slot_direct(1)
      10, 2, // invoke(1)
      14, // pop(0)
      12, 528, // jmp(1)
      0, // push_frame(0)
      5, 352, // get_slot_direct(1)
      22, // un_typeof(0)
      1, 353, // push_literal(1)
      23, // bi_eq(0)
      13, 439, // jmp_unless(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 326, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 345, // get_slot_direct(1)
      0, // push_frame(0)
      5, 352, // get_slot_direct(1)
      13, 432, // jmp_unless(1)
      1, 7, // push_literal(1)
      12, 434, // jmp(1)
      1, 87, // push_literal(1)
      10, 2, // invoke(1)
      14, // pop(0)
      12, 528, // jmp(1)
      0, // push_frame(0)
      5, 352, // get_slot_direct(1)
      1, 42, // push_literal(1)
      23, // bi_eq(0)
      13, 465, // jmp_unless(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 326, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 345, // get_slot_direct(1)
      1, 131, // push_literal(1)
      10, 2, // invoke(1)
      14, // pop(0)
      12, 528, // jmp(1)
      0, // push_frame(0)
      5, 352, // get_slot_direct(1)
      1, 0, // push_literal(1)
      23, // bi_eq(0)
      13, 491, // jmp_unless(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 326, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 345, // get_slot_direct(1)
      1, 354, // push_literal(1)
      10, 2, // invoke(1)
      14, // pop(0)
      12, 528, // jmp(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 18, // get_slot_direct(1)
      5, 18, // get_slot_direct(1)
      5, 322, // get_slot_direct(1)
      15, // dup(0)
      7, 323, // get_slot_direct_check(1)
      19, // swap(0)
      1, 355, // push_literal(1)
      0, // push_frame(0)
      5, 352, // get_slot_direct(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 326, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 345, // get_slot_direct(1)
      1, 356, // push_literal(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      15, // dup(0)
      5, 12, // get_slot_direct(1)
      1, 5, // push_literal(1)
      26, // bi_add(0)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 279, // get_slot_direct(1)
      5, 15, // get_slot_direct(1)
      19, // swap(0)
      24, // bi_gt(0)
      20, // un_not(0)
      13, 292, // jmp_unless(1)
      0, // push_frame(0)
      5, 345, // get_slot_direct(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // ".new_label"
    id: 91,
    nargs: 0,
    max_stack: 3,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      14, // pop(0)
      2, // new_object(0)
      15, // dup(0)
      1, 358, // push_literal(1)
      8, 282, // set_slot_direct(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // ".set_label"
    id: 92,
    nargs: 1,
    max_stack: 3,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 282, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 282, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 339, // get_slot_direct(1)
      5, 275, // get_slot_direct(1)
      5, 15, // get_slot_direct(1)
      8, 282, // set_slot_direct(1)
      1, 0, // push_literal(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // ".peek_loop_label"
    id: 93,
    nargs: 0,
    max_stack: 3,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 361, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 339, // get_slot_direct(1)
      5, 335, // get_slot_direct(1)
      8, 361, // set_slot_direct(1)
      0, // push_frame(0)
      5, 361, // get_slot_direct(1)
      0, // push_frame(0)
      5, 361, // get_slot_direct(1)
      5, 15, // get_slot_direct(1)
      1, 5, // push_literal(1)
      27, // bi_sub(0)
      6, // get_slot_indirect(0)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // ".pop_loop_label"
    id: 94,
    nargs: 0,
    max_stack: 2,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 339, // get_slot_direct(1)
      5, 335, // get_slot_direct(1)
      15, // dup(0)
      7, 38, // get_slot_direct_check(1)
      19, // swap(0)
      10, 0, // invoke(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // ".push_loop_label"
    id: 95,
    nargs: 1,
    max_stack: 3,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 282, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 339, // get_slot_direct(1)
      5, 335, // get_slot_direct(1)
      15, // dup(0)
      7, 36, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 282, // get_slot_direct(1)
      10, 1, // invoke(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // ".bcompile_stmts"
    id: 96,
    nargs: 1,
    max_stack: 5,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 365, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      15, // dup(0)
      7, 366, // get_slot_direct_check(1)
      19, // swap(0)
      2, // new_object(0)
      15, // dup(0)
      1, 45, // push_literal(1)
      8, 94, // set_slot_direct(1)
      15, // dup(0)
      1, 151, // push_literal(1)
      8, 172, // set_slot_direct(1)
      15, // dup(0)
      0, // push_frame(0)
      5, 365, // get_slot_direct(1)
      8, 198, // set_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      1, 0, // push_literal(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // ".bcompile_stmt"
    id: 97,
    nargs: 1,
    max_stack: 5,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 368, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 18, // get_slot_direct(1)
      5, 318, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 274, // get_slot_direct(1)
      5, 339, // get_slot_direct(1)
      5, 334, // get_slot_direct(1)
      1, 3, // push_literal(1)
      23, // bi_eq(0)
      0, // push_frame(0)
      5, 368, // get_slot_direct(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 368, // get_slot_direct(1)
      5, 172, // get_slot_direct(1)
      1, 200, // push_literal(1)
      23, // bi_eq(0)
      15, // dup(0)
      13, 111, // jmp_unless(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 368, // get_slot_direct(1)
      5, 94, // get_slot_direct(1)
      1, 219, // push_literal(1)
      23, // bi_eq(0)
      15, // dup(0)
      20, // un_not(0)
      13, 111, // jmp_unless(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 368, // get_slot_direct(1)
      5, 94, // get_slot_direct(1)
      1, 220, // push_literal(1)
      23, // bi_eq(0)
      15, // dup(0)
      20, // un_not(0)
      13, 111, // jmp_unless(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 368, // get_slot_direct(1)
      5, 94, // get_slot_direct(1)
      1, 221, // push_literal(1)
      23, // bi_eq(0)
      15, // dup(0)
      20, // un_not(0)
      13, 111, // jmp_unless(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 368, // get_slot_direct(1)
      5, 94, // get_slot_direct(1)
      1, 222, // push_literal(1)
      23, // bi_eq(0)
      15, // dup(0)
      20, // un_not(0)
      13, 111, // jmp_unless(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 368, // get_slot_direct(1)
      5, 94, // get_slot_direct(1)
      1, 223, // push_literal(1)
      23, // bi_eq(0)
      13, 172, // jmp_unless(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 18, // get_slot_direct(1)
      5, 319, // get_slot_direct(1)
      0, // push_frame(0)
      5, 368, // get_slot_direct(1)
      5, 172, // get_slot_direct(1)
      6, // get_slot_indirect(0)
      15, // dup(0)
      7, 48, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 368, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 5, // push_literal(1)
      10, 3, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 18, // get_slot_direct(1)
      5, 318, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 274, // get_slot_direct(1)
      5, 339, // get_slot_direct(1)
      5, 334, // get_slot_direct(1)
      1, 3, // push_literal(1)
      23, // bi_eq(0)
      0, // push_frame(0)
      5, 368, // get_slot_direct(1)
      10, 2, // invoke(1)
      14, // pop(0)
      1, 0, // push_literal(1)
      11, // return(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      15, // dup(0)
      7, 369, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 368, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 368, // get_slot_direct(1)
      5, 172, // get_slot_direct(1)
      1, 151, // push_literal(1)
      23, // bi_eq(0)
      20, // un_not(0)
      13, 236, // jmp_unless(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 18, // get_slot_direct(1)
      5, 318, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 274, // get_slot_direct(1)
      5, 339, // get_slot_direct(1)
      5, 334, // get_slot_direct(1)
      1, 5, // push_literal(1)
      23, // bi_eq(0)
      0, // push_frame(0)
      5, 368, // get_slot_direct(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 38, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 18, // get_slot_direct(1)
      5, 318, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 274, // get_slot_direct(1)
      5, 339, // get_slot_direct(1)
      5, 334, // get_slot_direct(1)
      1, 3, // push_literal(1)
      23, // bi_eq(0)
      0, // push_frame(0)
      5, 368, // get_slot_direct(1)
      10, 2, // invoke(1)
      14, // pop(0)
      1, 0, // push_literal(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // ".bcompile_expr"
    id: 98,
    nargs: 1,
    max_stack: 4,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 368, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 18, // get_slot_direct(1)
      5, 318, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 18, // get_slot_direct(1)
      5, 319, // get_slot_direct(1)
      0, // push_frame(0)
      5, 368, // get_slot_direct(1)
      5, 172, // get_slot_direct(1)
      6, // get_slot_indirect(0)
      0, // push_frame(0)
      5, 368, // get_slot_direct(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 18, // get_slot_direct(1)
      5, 319, // get_slot_direct(1)
      0, // push_frame(0)
      5, 368, // get_slot_direct(1)
      5, 172, // get_slot_direct(1)
      6, // get_slot_indirect(0)
      15, // dup(0)
      7, 48, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 368, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      10, 2, // invoke(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // ".name"
    id: 99,
    nargs: 1,
    max_stack: 6,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 274, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 370, // set_slot_direct(1)
      0, // push_frame(0)
      1, 3, // push_literal(1)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      5, 141, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 141, // get_slot_direct(1)
      5, 175, // get_slot_direct(1)
      27, // bi_sub(0)
      8, 370, // set_slot_direct(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 283, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      12, 88, // jmp(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 288, // push_literal(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 182, // get_slot_direct_check(1)
      19, // swap(0)
      1, 18, // push_literal(1)
      10, 1, // invoke(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      15, // dup(0)
      5, 12, // get_slot_direct(1)
      1, 5, // push_literal(1)
      26, // bi_add(0)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      0, // push_frame(0)
      5, 370, // get_slot_direct(1)
      19, // swap(0)
      24, // bi_gt(0)
      20, // un_not(0)
      13, 56, // jmp_unless(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 288, // push_literal(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 182, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 94, // get_slot_direct(1)
      10, 1, // invoke(1)
      10, 2, // invoke(1)
      14, // pop(0)
      1, 0, // push_literal(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // ".literal"
    id: 100,
    nargs: 1,
    max_stack: 6,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 274, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 94, // get_slot_direct(1)
      1, 0, // push_literal(1)
      23, // bi_eq(0)
      13, 47, // jmp_unless(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 284, // push_literal(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 182, // get_slot_direct_check(1)
      19, // swap(0)
      1, 0, // push_literal(1)
      10, 1, // invoke(1)
      10, 2, // invoke(1)
      14, // pop(0)
      1, 0, // push_literal(1)
      11, // return(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 94, // get_slot_direct(1)
      1, 42, // push_literal(1)
      23, // bi_eq(0)
      13, 83, // jmp_unless(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 284, // push_literal(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 182, // get_slot_direct_check(1)
      19, // swap(0)
      1, 42, // push_literal(1)
      10, 1, // invoke(1)
      10, 2, // invoke(1)
      14, // pop(0)
      1, 0, // push_literal(1)
      11, // return(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 94, // get_slot_direct(1)
      22, // un_typeof(0)
      1, 41, // push_literal(1)
      23, // bi_eq(0)
      13, 160, // jmp_unless(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 371, // set_slot_direct(1)
      0, // push_frame(0)
      1, 68, // push_literal(1)
      8, 371, // set_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 94, // get_slot_direct(1)
      5, 15, // get_slot_direct(1)
      1, 3, // push_literal(1)
      23, // bi_eq(0)
      13, 121, // jmp_unless(1)
      0, // push_frame(0)
      1, 35, // push_literal(1)
      8, 371, // set_slot_direct(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 283, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 288, // push_literal(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 182, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 371, // get_slot_direct(1)
      10, 1, // invoke(1)
      10, 2, // invoke(1)
      14, // pop(0)
      1, 0, // push_literal(1)
      11, // return(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 94, // get_slot_direct(1)
      22, // un_typeof(0)
      1, 96, // push_literal(1)
      23, // bi_eq(0)
      13, 200, // jmp_unless(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 284, // push_literal(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 182, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 94, // get_slot_direct(1)
      10, 1, // invoke(1)
      10, 2, // invoke(1)
      14, // pop(0)
      1, 0, // push_literal(1)
      11, // return(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 94, // get_slot_direct(1)
      22, // un_typeof(0)
      1, 353, // push_literal(1)
      23, // bi_eq(0)
      13, 240, // jmp_unless(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 284, // push_literal(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 182, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 94, // get_slot_direct(1)
      10, 1, // invoke(1)
      10, 2, // invoke(1)
      14, // pop(0)
      1, 0, // push_literal(1)
      11, // return(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 318, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 94, // get_slot_direct(1)
      22, // un_typeof(0)
      1, 111, // push_literal(1)
      23, // bi_eq(0)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 284, // push_literal(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 182, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 94, // get_slot_direct(1)
      10, 1, // invoke(1)
      10, 2, // invoke(1)
      14, // pop(0)
      1, 0, // push_literal(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // ".unary"
    id: 101,
    nargs: 1,
    max_stack: 4,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 274, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 318, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 319, // get_slot_direct(1)
      5, 206, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 94, // get_slot_direct(1)
      6, // get_slot_indirect(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 319, // get_slot_direct(1)
      5, 206, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 94, // get_slot_direct(1)
      6, // get_slot_indirect(0)
      15, // dup(0)
      7, 48, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      10, 2, // invoke(1)
      14, // pop(0)
      1, 0, // push_literal(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // "unary"
    id: 102,
    nargs: 2,
    max_stack: 3,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 337, // set_slot_direct(1)
      15, // dup(0)
      5, 5, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 11, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 11, // get_slot_direct(1)
      22, // un_typeof(0)
      1, 96, // push_literal(1)
      23, // bi_eq(0)
      13, 42, // jmp_unless(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 319, // get_slot_direct(1)
      5, 206, // get_slot_direct(1)
      0, // push_frame(0)
      5, 337, // get_slot_direct(1)
      4, 103, // new_function(1)
      9, // set_slot_indirect(0)
      12, 56, // jmp(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 319, // get_slot_direct(1)
      5, 206, // get_slot_direct(1)
      0, // push_frame(0)
      5, 337, // get_slot_direct(1)
      0, // push_frame(0)
      5, 11, // get_slot_direct(1)
      9, // set_slot_indirect(0)
      1, 0, // push_literal(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function {
    id: 103,
    nargs: 1,
    max_stack: 3,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 274, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 369, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 198, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 11, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      1, 0, // push_literal(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function {
    id: 104,
    nargs: 1,
    max_stack: 3,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 274, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      1, 3, // push_literal(1)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 286, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 198, // get_slot_direct(1)
      15, // dup(0)
      7, 49, // get_slot_direct_check(1)
      19, // swap(0)
      4, 105, // new_function(1)
      10, 1, // invoke(1)
      14, // pop(0)
      1, 0, // push_literal(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function {
    id: 105,
    nargs: 2,
    max_stack: 6,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 40, // set_slot_direct(1)
      15, // dup(0)
      5, 5, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 12, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 298, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 369, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 40, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 291, // push_literal(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 182, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      10, 1, // invoke(1)
      10, 2, // invoke(1)
      14, // pop(0)
      1, 0, // push_literal(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function {
    id: 106,
    nargs: 1,
    max_stack: 3,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 274, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      1, 3, // push_literal(1)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 285, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 198, // get_slot_direct(1)
      15, // dup(0)
      7, 49, // get_slot_direct_check(1)
      19, // swap(0)
      4, 107, // new_function(1)
      10, 1, // invoke(1)
      14, // pop(0)
      1, 0, // push_literal(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function {
    id: 107,
    nargs: 2,
    max_stack: 6,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 40, // set_slot_direct(1)
      15, // dup(0)
      5, 5, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 12, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 298, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 40, // get_slot_direct(1)
      5, 172, // get_slot_direct(1)
      1, 187, // push_literal(1)
      23, // bi_eq(0)
      13, 55, // jmp_unless(1)
      0, // push_frame(0)
      5, 40, // get_slot_direct(1)
      0, // push_frame(0)
      5, 40, // get_slot_direct(1)
      5, 250, // get_slot_direct(1)
      1, 207, // push_literal(1)
      26, // bi_add(0)
      8, 372, // set_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 369, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 40, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 291, // push_literal(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 182, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 40, // get_slot_direct(1)
      5, 250, // get_slot_direct(1)
      10, 1, // invoke(1)
      10, 2, // invoke(1)
      14, // pop(0)
      1, 0, // push_literal(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // ".binary"
    id: 108,
    nargs: 2,
    max_stack: 5,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 274, // set_slot_direct(1)
      15, // dup(0)
      5, 5, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 373, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 318, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 319, // get_slot_direct(1)
      5, 200, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 94, // get_slot_direct(1)
      6, // get_slot_indirect(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 319, // get_slot_direct(1)
      5, 200, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 94, // get_slot_direct(1)
      6, // get_slot_indirect(0)
      15, // dup(0)
      7, 48, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      0, // push_frame(0)
      5, 373, // get_slot_direct(1)
      10, 3, // invoke(1)
      14, // pop(0)
      1, 0, // push_literal(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // "binary"
    id: 109,
    nargs: 3,
    max_stack: 3,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 337, // set_slot_direct(1)
      15, // dup(0)
      5, 5, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 11, // set_slot_direct(1)
      15, // dup(0)
      5, 7, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 302, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 11, // get_slot_direct(1)
      22, // un_typeof(0)
      1, 96, // push_literal(1)
      23, // bi_eq(0)
      13, 49, // jmp_unless(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 319, // get_slot_direct(1)
      5, 200, // get_slot_direct(1)
      0, // push_frame(0)
      5, 337, // get_slot_direct(1)
      4, 110, // new_function(1)
      9, // set_slot_indirect(0)
      12, 63, // jmp(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 319, // get_slot_direct(1)
      5, 200, // get_slot_direct(1)
      0, // push_frame(0)
      5, 337, // get_slot_direct(1)
      0, // push_frame(0)
      5, 11, // get_slot_direct(1)
      9, // set_slot_indirect(0)
      1, 0, // push_literal(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function {
    id: 110,
    nargs: 1,
    max_stack: 3,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 274, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 369, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 198, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 369, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 199, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 302, // get_slot_direct(1)
      13, 60, // jmp_unless(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 302, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 11, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      1, 0, // push_literal(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // "assignment"
    id: 111,
    nargs: 1,
    max_stack: 3,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 374, // set_slot_direct(1)
      14, // pop(0)
      4, 112, // new_function(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function {
    id: 112,
    nargs: 2,
    max_stack: 6,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 274, // set_slot_direct(1)
      15, // dup(0)
      5, 5, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 373, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 198, // get_slot_direct(1)
      5, 172, // get_slot_direct(1)
      1, 4, // push_literal(1)
      23, // bi_eq(0)
      13, 279, // jmp_unless(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 370, // set_slot_direct(1)
      0, // push_frame(0)
      1, 3, // push_literal(1)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      5, 141, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 198, // get_slot_direct(1)
      5, 141, // get_slot_direct(1)
      5, 175, // get_slot_direct(1)
      27, // bi_sub(0)
      8, 370, // set_slot_direct(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 283, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      12, 109, // jmp(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 288, // push_literal(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 182, // get_slot_direct_check(1)
      19, // swap(0)
      1, 18, // push_literal(1)
      10, 1, // invoke(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      15, // dup(0)
      5, 12, // get_slot_direct(1)
      1, 5, // push_literal(1)
      26, // bi_add(0)
      8, 12, // set_slot_direct(1)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      0, // push_frame(0)
      5, 370, // get_slot_direct(1)
      19, // swap(0)
      24, // bi_gt(0)
      20, // un_not(0)
      13, 77, // jmp_unless(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 374, // get_slot_direct(1)
      13, 167, // jmp_unless(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 298, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 288, // push_literal(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 182, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 198, // get_slot_direct(1)
      5, 94, // get_slot_direct(1)
      10, 1, // invoke(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 199, // get_slot_direct(1)
      5, 172, // get_slot_direct(1)
      1, 187, // push_literal(1)
      23, // bi_eq(0)
      13, 193, // jmp_unless(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 199, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 198, // get_slot_direct(1)
      5, 94, // get_slot_direct(1)
      8, 372, // set_slot_direct(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 369, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 199, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 374, // get_slot_direct(1)
      13, 230, // jmp_unless(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 374, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 373, // get_slot_direct(1)
      20, // un_not(0)
      13, 248, // jmp_unless(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 300, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 291, // push_literal(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 182, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 198, // get_slot_direct(1)
      5, 94, // get_slot_direct(1)
      10, 1, // invoke(1)
      10, 2, // invoke(1)
      14, // pop(0)
      1, 0, // push_literal(1)
      11, // return(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 18, // get_slot_direct(1)
      5, 318, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 198, // get_slot_direct(1)
      5, 172, // get_slot_direct(1)
      1, 200, // push_literal(1)
      23, // bi_eq(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 198, // get_slot_direct(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 198, // get_slot_direct(1)
      5, 94, // get_slot_direct(1)
      1, 107, // push_literal(1)
      23, // bi_eq(0)
      13, 534, // jmp_unless(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 18, // get_slot_direct(1)
      5, 318, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 198, // get_slot_direct(1)
      5, 199, // get_slot_direct(1)
      5, 172, // get_slot_direct(1)
      1, 182, // push_literal(1)
      23, // bi_eq(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 198, // get_slot_direct(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 369, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 198, // get_slot_direct(1)
      5, 198, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 374, // get_slot_direct(1)
      13, 415, // jmp_unless(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 298, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 288, // push_literal(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 182, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 198, // get_slot_direct(1)
      5, 199, // get_slot_direct(1)
      5, 94, // get_slot_direct(1)
      10, 1, // invoke(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 199, // get_slot_direct(1)
      5, 172, // get_slot_direct(1)
      1, 187, // push_literal(1)
      23, // bi_eq(0)
      13, 446, // jmp_unless(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 199, // get_slot_direct(1)
      1, 107, // push_literal(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 198, // get_slot_direct(1)
      5, 199, // get_slot_direct(1)
      5, 94, // get_slot_direct(1)
      26, // bi_add(0)
      8, 372, // set_slot_direct(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 369, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 199, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 374, // get_slot_direct(1)
      13, 483, // jmp_unless(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 374, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 373, // get_slot_direct(1)
      20, // un_not(0)
      13, 501, // jmp_unless(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 300, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 291, // push_literal(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 182, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 198, // get_slot_direct(1)
      5, 199, // get_slot_direct(1)
      5, 94, // get_slot_direct(1)
      10, 1, // invoke(1)
      10, 2, // invoke(1)
      14, // pop(0)
      1, 0, // push_literal(1)
      11, // return(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 198, // get_slot_direct(1)
      5, 94, // get_slot_direct(1)
      1, 202, // push_literal(1)
      23, // bi_eq(0)
      13, 681, // jmp_unless(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 369, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 198, // get_slot_direct(1)
      5, 198, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 369, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 198, // get_slot_direct(1)
      5, 199, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 374, // get_slot_direct(1)
      13, 611, // jmp_unless(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 299, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 289, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 369, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 199, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 374, // get_slot_direct(1)
      13, 648, // jmp_unless(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 374, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 373, // get_slot_direct(1)
      20, // un_not(0)
      13, 666, // jmp_unless(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 301, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 292, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      1, 0, // push_literal(1)
      11, // return(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 18, // get_slot_direct(1)
      5, 318, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      1, 67, // push_literal(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 198, // get_slot_direct(1)
      10, 2, // invoke(1)
      14, // pop(0)
      1, 0, // push_literal(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function {
    id: 113,
    nargs: 1,
    max_stack: 4,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 274, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 375, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 376, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 377, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 359, // get_slot_direct_check(1)
      19, // swap(0)
      10, 0, // invoke(1)
      8, 377, // set_slot_direct(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 369, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 198, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 298, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 303, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 297, // push_literal(1)
      0, // push_frame(0)
      5, 377, // get_slot_direct(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      5, 339, // get_slot_direct(1)
      5, 334, // get_slot_direct(1)
      8, 375, // set_slot_direct(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 38, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 369, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 199, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 360, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 377, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      5, 339, // get_slot_direct(1)
      5, 334, // get_slot_direct(1)
      8, 376, // set_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 318, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 375, // get_slot_direct(1)
      0, // push_frame(0)
      5, 376, // get_slot_direct(1)
      23, // bi_eq(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      10, 2, // invoke(1)
      14, // pop(0)
      1, 0, // push_literal(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function {
    id: 114,
    nargs: 1,
    max_stack: 4,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 274, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 375, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 376, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 377, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 359, // get_slot_direct_check(1)
      19, // swap(0)
      10, 0, // invoke(1)
      8, 377, // set_slot_direct(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 369, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 198, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 298, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 297, // push_literal(1)
      0, // push_frame(0)
      5, 377, // get_slot_direct(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      5, 339, // get_slot_direct(1)
      5, 334, // get_slot_direct(1)
      8, 375, // set_slot_direct(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 38, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 369, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 199, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 360, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 377, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      5, 339, // get_slot_direct(1)
      5, 334, // get_slot_direct(1)
      8, 376, // set_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 318, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 375, // get_slot_direct(1)
      0, // push_frame(0)
      5, 376, // get_slot_direct(1)
      23, // bi_eq(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      10, 2, // invoke(1)
      14, // pop(0)
      1, 0, // push_literal(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function {
    id: 115,
    nargs: 1,
    max_stack: 7,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 274, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 369, // get_slot_direct_check(1)
      19, // swap(0)
      2, // new_object(0)
      15, // dup(0)
      1, 246, // push_literal(1)
      8, 94, // set_slot_direct(1)
      15, // dup(0)
      1, 206, // push_literal(1)
      8, 172, // set_slot_direct(1)
      15, // dup(0)
      2, // new_object(0)
      15, // dup(0)
      1, 232, // push_literal(1)
      8, 94, // set_slot_direct(1)
      15, // dup(0)
      1, 200, // push_literal(1)
      8, 172, // set_slot_direct(1)
      15, // dup(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 198, // get_slot_direct(1)
      8, 198, // set_slot_direct(1)
      15, // dup(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 199, // get_slot_direct(1)
      8, 199, // set_slot_direct(1)
      8, 198, // set_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      1, 0, // push_literal(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function {
    id: 116,
    nargs: 1,
    max_stack: 6,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 274, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 369, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 198, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 318, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 199, // get_slot_direct(1)
      5, 172, // get_slot_direct(1)
      1, 182, // push_literal(1)
      23, // bi_eq(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 199, // get_slot_direct(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 288, // push_literal(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 182, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 199, // get_slot_direct(1)
      5, 94, // get_slot_direct(1)
      10, 1, // invoke(1)
      10, 2, // invoke(1)
      14, // pop(0)
      1, 0, // push_literal(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function {
    id: 117,
    nargs: 1,
    max_stack: 3,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 274, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 369, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 198, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 369, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 199, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 289, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      1, 0, // push_literal(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function {
    id: 118,
    nargs: 1,
    max_stack: 5,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 274, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 369, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 198, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 369, // get_slot_direct_check(1)
      19, // swap(0)
      2, // new_object(0)
      15, // dup(0)
      1, 14, // push_literal(1)
      8, 94, // set_slot_direct(1)
      15, // dup(0)
      1, 14, // push_literal(1)
      8, 172, // set_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 199, // get_slot_direct(1)
      15, // dup(0)
      7, 49, // get_slot_direct_check(1)
      19, // swap(0)
      4, 119, // new_function(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 293, // push_literal(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 199, // get_slot_direct(1)
      5, 15, // get_slot_direct(1)
      10, 2, // invoke(1)
      14, // pop(0)
      1, 0, // push_literal(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function {
    id: 119,
    nargs: 2,
    max_stack: 3,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 40, // set_slot_direct(1)
      15, // dup(0)
      5, 5, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 12, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 369, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 40, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      1, 0, // push_literal(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // ".ternary"
    id: 120,
    nargs: 1,
    max_stack: 4,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 274, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 318, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 319, // get_slot_direct(1)
      5, 227, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 94, // get_slot_direct(1)
      6, // get_slot_indirect(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 319, // get_slot_direct(1)
      5, 227, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 94, // get_slot_direct(1)
      6, // get_slot_indirect(0)
      15, // dup(0)
      7, 48, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      10, 2, // invoke(1)
      14, // pop(0)
      1, 0, // push_literal(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // "ternary"
    id: 121,
    nargs: 2,
    max_stack: 3,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 337, // set_slot_direct(1)
      15, // dup(0)
      5, 5, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 11, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 319, // get_slot_direct(1)
      5, 227, // get_slot_direct(1)
      0, // push_frame(0)
      5, 337, // get_slot_direct(1)
      0, // push_frame(0)
      5, 11, // get_slot_direct(1)
      9, // set_slot_indirect(0)
      1, 0, // push_literal(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function {
    id: 122,
    nargs: 1,
    max_stack: 4,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 274, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 375, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 376, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 378, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 377, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 359, // get_slot_direct_check(1)
      19, // swap(0)
      10, 0, // invoke(1)
      8, 378, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 359, // get_slot_direct_check(1)
      19, // swap(0)
      10, 0, // invoke(1)
      8, 377, // set_slot_direct(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 369, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 198, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 297, // push_literal(1)
      0, // push_frame(0)
      5, 378, // get_slot_direct(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      5, 339, // get_slot_direct(1)
      5, 334, // get_slot_direct(1)
      8, 375, // set_slot_direct(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 369, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 199, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 296, // push_literal(1)
      0, // push_frame(0)
      5, 377, // get_slot_direct(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      5, 339, // get_slot_direct(1)
      5, 334, // get_slot_direct(1)
      8, 376, // set_slot_direct(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      5, 339, // get_slot_direct(1)
      0, // push_frame(0)
      5, 375, // get_slot_direct(1)
      8, 334, // set_slot_direct(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 360, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 378, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 369, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 226, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 360, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 377, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 318, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      5, 339, // get_slot_direct(1)
      5, 334, // get_slot_direct(1)
      0, // push_frame(0)
      5, 376, // get_slot_direct(1)
      23, // bi_eq(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      10, 2, // invoke(1)
      14, // pop(0)
      1, 0, // push_literal(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function {
    id: 123,
    nargs: 1,
    max_stack: 6,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 274, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 318, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 199, // get_slot_direct(1)
      5, 172, // get_slot_direct(1)
      1, 182, // push_literal(1)
      23, // bi_eq(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 199, // get_slot_direct(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 369, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 198, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 298, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 290, // push_literal(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 182, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 199, // get_slot_direct(1)
      5, 94, // get_slot_direct(1)
      10, 1, // invoke(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 302, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 226, // get_slot_direct(1)
      15, // dup(0)
      7, 49, // get_slot_direct_check(1)
      19, // swap(0)
      4, 124, // new_function(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 293, // push_literal(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 226, // get_slot_direct(1)
      5, 15, // get_slot_direct(1)
      10, 2, // invoke(1)
      14, // pop(0)
      1, 0, // push_literal(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function {
    id: 124,
    nargs: 2,
    max_stack: 3,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 40, // set_slot_direct(1)
      15, // dup(0)
      5, 5, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 12, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 369, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 40, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      1, 0, // push_literal(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // ".statement"
    id: 125,
    nargs: 1,
    max_stack: 4,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 274, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 318, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 319, // get_slot_direct(1)
      5, 151, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 94, // get_slot_direct(1)
      6, // get_slot_indirect(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 319, // get_slot_direct(1)
      5, 151, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 94, // get_slot_direct(1)
      6, // get_slot_indirect(0)
      15, // dup(0)
      7, 48, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      10, 2, // invoke(1)
      14, // pop(0)
      1, 0, // push_literal(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // "stmt"
    id: 126,
    nargs: 2,
    max_stack: 3,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 94, // set_slot_direct(1)
      15, // dup(0)
      5, 5, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 11, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 319, // get_slot_direct(1)
      5, 151, // get_slot_direct(1)
      0, // push_frame(0)
      5, 94, // get_slot_direct(1)
      0, // push_frame(0)
      5, 11, // get_slot_direct(1)
      9, // set_slot_indirect(0)
      1, 0, // push_literal(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function {
    id: 127,
    nargs: 1,
    max_stack: 3,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 274, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 198, // get_slot_direct(1)
      15, // dup(0)
      7, 49, // get_slot_direct_check(1)
      19, // swap(0)
      4, 128, // new_function(1)
      10, 1, // invoke(1)
      14, // pop(0)
      1, 0, // push_literal(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function {
    id: 128,
    nargs: 2,
    max_stack: 3,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 40, // set_slot_direct(1)
      15, // dup(0)
      5, 5, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 12, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 366, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 40, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      1, 0, // push_literal(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function {
    id: 129,
    nargs: 1,
    max_stack: 7,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 274, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 366, // get_slot_direct_check(1)
      19, // swap(0)
      2, // new_object(0)
      15, // dup(0)
      1, 200, // push_literal(1)
      8, 172, // set_slot_direct(1)
      15, // dup(0)
      1, 219, // push_literal(1)
      8, 94, // set_slot_direct(1)
      15, // dup(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 198, // get_slot_direct(1)
      8, 198, // set_slot_direct(1)
      15, // dup(0)
      2, // new_object(0)
      15, // dup(0)
      1, 182, // push_literal(1)
      8, 172, // set_slot_direct(1)
      15, // dup(0)
      1, 0, // push_literal(1)
      8, 94, // set_slot_direct(1)
      8, 199, // set_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      1, 0, // push_literal(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function {
    id: 130,
    nargs: 1,
    max_stack: 4,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 274, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 378, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 359, // get_slot_direct_check(1)
      19, // swap(0)
      10, 0, // invoke(1)
      8, 378, // set_slot_direct(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 369, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 198, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 297, // push_literal(1)
      0, // push_frame(0)
      5, 378, // get_slot_direct(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 366, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 199, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 226, // get_slot_direct(1)
      13, 155, // jmp_unless(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 377, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 359, // get_slot_direct_check(1)
      19, // swap(0)
      10, 0, // invoke(1)
      8, 377, // set_slot_direct(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 296, // push_literal(1)
      0, // push_frame(0)
      5, 377, // get_slot_direct(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 360, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 378, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 366, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 226, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 360, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 377, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      12, 168, // jmp(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 360, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 378, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      1, 0, // push_literal(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function {
    id: 131,
    nargs: 1,
    max_stack: 6,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 274, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 198, // get_slot_direct(1)
      13, 35, // jmp_unless(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 369, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 198, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      12, 58, // jmp(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 284, // push_literal(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 182, // get_slot_direct_check(1)
      19, // swap(0)
      1, 0, // push_literal(1)
      10, 1, // invoke(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 253, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      5, 339, // get_slot_direct(1)
      1, 67, // push_literal(1)
      8, 340, // set_slot_direct(1)
      1, 0, // push_literal(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function {
    id: 132,
    nargs: 1,
    max_stack: 5,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 274, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 296, // push_literal(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 362, // get_slot_direct_check(1)
      19, // swap(0)
      10, 0, // invoke(1)
      10, 2, // invoke(1)
      14, // pop(0)
      1, 0, // push_literal(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function {
    id: 133,
    nargs: 1,
    max_stack: 4,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 274, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 379, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 380, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 381, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 359, // get_slot_direct_check(1)
      19, // swap(0)
      10, 0, // invoke(1)
      8, 379, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 359, // get_slot_direct_check(1)
      19, // swap(0)
      10, 0, // invoke(1)
      8, 380, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 359, // get_slot_direct_check(1)
      19, // swap(0)
      10, 0, // invoke(1)
      8, 381, // set_slot_direct(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 364, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 381, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 296, // push_literal(1)
      0, // push_frame(0)
      5, 380, // get_slot_direct(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 360, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 379, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 366, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 199, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 360, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 380, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 369, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 198, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 303, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 297, // push_literal(1)
      0, // push_frame(0)
      5, 379, // get_slot_direct(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 360, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 381, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 363, // get_slot_direct_check(1)
      19, // swap(0)
      10, 0, // invoke(1)
      14, // pop(0)
      1, 0, // push_literal(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function {
    id: 134,
    nargs: 1,
    max_stack: 6,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 274, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 283, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 288, // push_literal(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 182, // get_slot_direct_check(1)
      19, // swap(0)
      1, 14, // push_literal(1)
      10, 1, // invoke(1)
      10, 2, // invoke(1)
      14, // pop(0)
      1, 0, // push_literal(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function {
    id: 135,
    nargs: 1,
    max_stack: 7,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 274, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 382, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 383, // set_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 4, // get_slot_direct(1)
      13, 115, // jmp_unless(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 369, // get_slot_direct_check(1)
      19, // swap(0)
      2, // new_object(0)
      15, // dup(0)
      1, 219, // push_literal(1)
      8, 94, // set_slot_direct(1)
      15, // dup(0)
      1, 200, // push_literal(1)
      8, 172, // set_slot_direct(1)
      15, // dup(0)
      2, // new_object(0)
      15, // dup(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 4, // get_slot_direct(1)
      8, 94, // set_slot_direct(1)
      15, // dup(0)
      1, 4, // push_literal(1)
      8, 172, // set_slot_direct(1)
      15, // dup(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 141, // get_slot_direct(1)
      8, 141, // set_slot_direct(1)
      8, 198, // set_slot_direct(1)
      15, // dup(0)
      2, // new_object(0)
      15, // dup(0)
      1, 187, // push_literal(1)
      8, 94, // set_slot_direct(1)
      15, // dup(0)
      1, 187, // push_literal(1)
      8, 172, // set_slot_direct(1)
      15, // dup(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 198, // get_slot_direct(1)
      8, 198, // set_slot_direct(1)
      15, // dup(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 199, // get_slot_direct(1)
      8, 199, // set_slot_direct(1)
      15, // dup(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 4, // get_slot_direct(1)
      8, 372, // set_slot_direct(1)
      8, 199, // set_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      1, 0, // push_literal(1)
      11, // return(0)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      5, 339, // get_slot_direct(1)
      8, 382, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 287, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 198, // get_slot_direct(1)
      5, 15, // get_slot_direct(1)
      10, 1, // invoke(1)
      8, 383, // set_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 372, // get_slot_direct(1)
      13, 159, // jmp_unless(1)
      0, // push_frame(0)
      5, 383, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 372, // get_slot_direct(1)
      8, 4, // set_slot_direct(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      0, // push_frame(0)
      5, 383, // get_slot_direct(1)
      8, 339, // set_slot_direct(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      5, 141, // get_slot_direct(1)
      1, 5, // push_literal(1)
      26, // bi_add(0)
      8, 141, // set_slot_direct(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 283, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 288, // push_literal(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 182, // get_slot_direct_check(1)
      19, // swap(0)
      1, 2, // push_literal(1)
      10, 1, // invoke(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 198, // get_slot_direct(1)
      15, // dup(0)
      7, 49, // get_slot_direct_check(1)
      19, // swap(0)
      4, 136, // new_function(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 38, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 367, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      5, 199, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      5, 339, // get_slot_direct(1)
      5, 340, // get_slot_direct(1)
      13, 284, // jmp_unless(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 366, // get_slot_direct_check(1)
      19, // swap(0)
      2, // new_object(0)
      15, // dup(0)
      1, 253, // push_literal(1)
      8, 94, // set_slot_direct(1)
      15, // dup(0)
      1, 151, // push_literal(1)
      8, 172, // set_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      0, // push_frame(0)
      5, 382, // get_slot_direct(1)
      8, 339, // set_slot_direct(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      5, 141, // get_slot_direct(1)
      1, 5, // push_literal(1)
      27, // bi_sub(0)
      8, 141, // set_slot_direct(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 287, // push_literal(1)
      0, // push_frame(0)
      5, 383, // get_slot_direct(1)
      5, 176, // get_slot_direct(1)
      10, 2, // invoke(1)
      14, // pop(0)
      1, 0, // push_literal(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function {
    id: 136,
    nargs: 2,
    max_stack: 6,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 40, // set_slot_direct(1)
      15, // dup(0)
      5, 5, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 12, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 298, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 288, // push_literal(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 182, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 12, // get_slot_direct(1)
      10, 1, // invoke(1)
      10, 2, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 283, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 302, // push_literal(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 341, // get_slot_direct_check(1)
      19, // swap(0)
      1, 291, // push_literal(1)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 182, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 40, // get_slot_direct(1)
      5, 94, // get_slot_direct(1)
      10, 1, // invoke(1)
      10, 2, // invoke(1)
      14, // pop(0)
      1, 0, // push_literal(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function { // "bcompile"
    id: 137,
    nargs: 1,
    max_stack: 5,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 384, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 274, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 320, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      10, 0, // invoke(1)
      8, 274, // set_slot_direct(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 287, // get_slot_direct_check(1)
      19, // swap(0)
      1, 3, // push_literal(1)
      10, 1, // invoke(1)
      8, 339, // set_slot_direct(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 367, // get_slot_direct_check(1)
      19, // swap(0)
      0, // push_frame(0)
      5, 384, // get_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      5, 339, // get_slot_direct(1)
      5, 340, // get_slot_direct(1)
      13, 88, // jmp_unless(1)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      15, // dup(0)
      7, 366, // get_slot_direct_check(1)
      19, // swap(0)
      2, // new_object(0)
      15, // dup(0)
      1, 253, // push_literal(1)
      8, 94, // set_slot_direct(1)
      15, // dup(0)
      1, 151, // push_literal(1)
      8, 172, // set_slot_direct(1)
      10, 1, // invoke(1)
      14, // pop(0)
      0, // push_frame(0)
      5, 274, // get_slot_direct(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function {
    id: 138,
    nargs: 2,
    max_stack: 3,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 140, // set_slot_direct(1)
      15, // dup(0)
      5, 5, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 316, // set_slot_direct(1)
      14, // pop(0)
      4, 139, // new_function(1)
      11 // return(0)
    ]
  });
  vec::push(functions, Function {
    id: 139,
    nargs: 1,
    max_stack: 6,
    bytecode: ~[
      0, // push_frame(0)
      5, 2, // get_slot_direct(1)
      15, // dup(0)
      5, 3, // get_slot_direct(1)
      0, // push_frame(0)
      19, // swap(0)
      8, 256, // set_slot_direct(1)
      14, // pop(0)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 39, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 368, // set_slot_direct(1)
      0, // push_frame(0)
      1, 0, // push_literal(1)
      8, 266, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 256, // get_slot_direct(1)
      15, // dup(0)
      20, // un_not(0)
      13, 37, // jmp_unless(1)
      14, // pop(0)
      1, 387, // push_literal(1)
      8, 256, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 140, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 256, // get_slot_direct(1)
      1, 388, // push_literal(1)
      1, 389, // push_literal(1)
      26, // bi_add(0)
      1, 390, // push_literal(1)
      26, // bi_add(0)
      10, 2, // invoke(1)
      8, 368, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 18, // get_slot_direct(1)
      5, 316, // get_slot_direct(1)
      0, // push_frame(0)
      5, 14, // get_slot_direct(1)
      0, // push_frame(0)
      5, 368, // get_slot_direct(1)
      10, 1, // invoke(1)
      8, 266, // set_slot_direct(1)
      0, // push_frame(0)
      0, // push_frame(0)
      5, 266, // get_slot_direct(1)
      8, 39, // set_slot_direct(1)
      0, // push_frame(0)
      5, 39, // get_slot_direct(1)
      11 // return(0)
    ]
  });

  // literals
  vec::push(literals, Undefined);
  vec::push(literals, String(~"__modules__"));
  vec::push(literals, String(~"arguments"));
  vec::push(literals, Number(0f64));
  vec::push(literals, String(~"name"));
  vec::push(literals, Number(1f64));
  vec::push(literals, String(~"deps"));
  vec::push(literals, Number(2f64));
  vec::push(literals, String(~"init_func"));
  vec::push(literals, String(~"d"));
  vec::push(literals, String(~"a"));
  vec::push(literals, String(~"f"));
  vec::push(literals, String(~"i"));
  vec::push(literals, String(~"r"));
  vec::push(literals, String(~"this"));
  vec::push(literals, String(~"length"));
  vec::push(literals, String(~"map"));
  vec::push(literals, String(~"m"));
  vec::push(literals, String(~"__proto__"));
  vec::push(literals, String(~"apply"));
  vec::push(literals, String(~"define"));
  vec::push(literals, String(~"stdlib"));
  vec::push(literals, String(~"String"));
  vec::push(literals, String(~"prototype"));
  vec::push(literals, String(~"searchValue"));
  vec::push(literals, String(~"from"));
  vec::push(literals, String(~"j"));
  vec::push(literals, String(~"charAt"));
  vec::push(literals, String(~"indexOf"));
  vec::push(literals, String(~"str"));
  vec::push(literals, String(~"whitespace"));
  vec::push(literals, String(~" \x0a\x0d\x09\x0c\x0b\xa0\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u200b\u2028\u2029\u3000"));
  vec::push(literals, String(~"substring"));
  vec::push(literals, String(~""));
  vec::push(literals, String(~"trim"));
  vec::push(literals, String(~"Array"));
  vec::push(literals, String(~"push"));
  vec::push(literals, String(~"last"));
  vec::push(literals, String(~"pop"));
  vec::push(literals, String(~"result"));
  vec::push(literals, String(~"e"));
  vec::push(literals, String(~"object"));
  vec::push(literals, Null);
  vec::push(literals, String(~"hasOwnProperty"));
  vec::push(literals, String(~"concat"));
  vec::push(literals, String(~"block"));
  vec::push(literals, String(~"thisObject"));
  vec::push(literals, String(~"len"));
  vec::push(literals, String(~"call"));
  vec::push(literals, String(~"forEach"));
  vec::push(literals, String(~"fun"));
  vec::push(literals, String(~"res"));
  vec::push(literals, String(~"thisp"));
  vec::push(literals, String(~"sep"));
  vec::push(literals, String(~","));
  vec::push(literals, String(~"join"));
  vec::push(literals, String(~"Function"));
  vec::push(literals, String(~"method"));
  vec::push(literals, String(~"addHasInstance"));
  vec::push(literals, String(~"nthis"));
  vec::push(literals, String(~"nargs"));
  vec::push(literals, String(~"v"));
  vec::push(literals, String(~"hasInstance"));
  vec::push(literals, String(~"bind0"));
  vec::push(literals, String(~"bindN"));
  vec::push(literals, String(~"bind"));
  vec::push(literals, String(~"o"));
  vec::push(literals, Boolean(false));
  vec::push(literals, String(~"Object"));
  vec::push(literals, String(~"Throw"));
  vec::push(literals, String(~"TypeError"));
  vec::push(literals, Boolean(true));
  vec::push(literals, String(~"New"));
  vec::push(literals, String(~"create"));
  vec::push(literals, String(~"function "));
  vec::push(literals, String(~"() { [native code] }"));
  vec::push(literals, String(~"toString"));
  vec::push(literals, String(~"while"));
  vec::push(literals, String(~"_this_"));
  vec::push(literals, String(~"cond"));
  vec::push(literals, String(~"body"));
  vec::push(literals, String(~"ifElse"));
  vec::push(literals, String(~"ifTrue"));
  vec::push(literals, String(~"ifFalse"));
  vec::push(literals, String(~"tokenize"));
  vec::push(literals, String(~"prefix"));
  vec::push(literals, String(~"suffix"));
  vec::push(literals, Number(3f64));
  vec::push(literals, String(~"DEBUG"));
  vec::push(literals, String(~"c"));
  vec::push(literals, String(~"n"));
  vec::push(literals, String(~"q"));
  vec::push(literals, String(~"make"));
  vec::push(literals, String(~"type"));
  vec::push(literals, String(~"value"));
  vec::push(literals, String(~"to"));
  vec::push(literals, String(~"string"));
  vec::push(literals, String(~"<>+-&"));
  vec::push(literals, String(~"=>&:"));
  vec::push(literals, String(~" "));
  vec::push(literals, String(~"z"));
  vec::push(literals, String(~"A"));
  vec::push(literals, String(~"Z"));
  vec::push(literals, String(~"$"));
  vec::push(literals, String(~"_"));
  vec::push(literals, String(~"0"));
  vec::push(literals, String(~"9"));
  vec::push(literals, String(~"."));
  vec::push(literals, String(~"E"));
  vec::push(literals, String(~"-"));
  vec::push(literals, String(~"+"));
  vec::push(literals, String(~"number"));
  vec::push(literals, String(~"error"));
  vec::push(literals, String(~"Bad exponent"));
  vec::push(literals, String(~"Bad number"));
  vec::push(literals, String(~"isFinite"));
  vec::push(literals, String(~"'"));
  vec::push(literals, String(~"\x22"));
  vec::push(literals, String(~"\x0a"));
  vec::push(literals, String(~"\x0d"));
  vec::push(literals, String(~"Unterminated string."));
  vec::push(literals, String(~"Control character in string."));
  vec::push(literals, String(~"\x5c"));
  vec::push(literals, String(~"Unterminated string"));
  vec::push(literals, String(~"b"));
  vec::push(literals, String(~"\x08"));
  vec::push(literals, String(~"\x0c"));
  vec::push(literals, String(~"t"));
  vec::push(literals, String(~"\x09"));
  vec::push(literals, String(~"u"));
  vec::push(literals, String(~"parseInt"));
  vec::push(literals, Number(4f64));
  vec::push(literals, Number(16f64));
  vec::push(literals, String(~"fromCharCode"));
  vec::push(literals, String(~"/"));
  vec::push(literals, String(~"*"));
  vec::push(literals, String(~"operator"));
  vec::push(literals, String(~"__module_name__"));
  vec::push(literals, String(~"make_tokenize"));
  vec::push(literals, String(~"__module_init__"));
  vec::push(literals, String(~"parse"));
  vec::push(literals, String(~"scope"));
  vec::push(literals, String(~"symbol_table"));
  vec::push(literals, String(~"token"));
  vec::push(literals, String(~"tokens"));
  vec::push(literals, String(~"token_nr"));
  vec::push(literals, String(~"itself"));
  vec::push(literals, String(~"original_scope"));
  vec::push(literals, String(~"new_scope"));
  vec::push(literals, String(~"advance"));
  vec::push(literals, String(~"expression"));
  vec::push(literals, String(~"statement"));
  vec::push(literals, String(~"hoist_var"));
  vec::push(literals, String(~"statements"));
  vec::push(literals, String(~"original_symbol"));
  vec::push(literals, String(~"symbol"));
  vec::push(literals, String(~"constant"));
  vec::push(literals, String(~"infix"));
  vec::push(literals, String(~"infixr"));
  vec::push(literals, String(~"assignment"));
  vec::push(literals, String(~"stmt"));
  vec::push(literals, String(~"def"));
  vec::push(literals, String(~"reserved"));
  vec::push(literals, String(~"Already reserved."));
  vec::push(literals, String(~"Already defined."));
  vec::push(literals, String(~"nud"));
  vec::push(literals, String(~"led"));
  vec::push(literals, String(~"std"));
  vec::push(literals, String(~"lbp"));
  vec::push(literals, String(~"parent"));
  vec::push(literals, String(~"(name)"));
  vec::push(literals, String(~"find"));
  vec::push(literals, String(~"arity"));
  vec::push(literals, String(~"reserve"));
  vec::push(literals, String(~"s"));
  vec::push(literals, String(~"level"));
  vec::push(literals, String(~"id"));
  vec::push(literals, String(~"Expected '"));
  vec::push(literals, String(~"'."));
  vec::push(literals, String(~"(end)"));
  vec::push(literals, String(~"Unknown operator."));
  vec::push(literals, String(~"(literal)"));
  vec::push(literals, String(~"literal"));
  vec::push(literals, String(~"Unexpected token."));
  vec::push(literals, String(~"rbp"));
  vec::push(literals, String(~"left"));
  vec::push(literals, String(~"("));
  vec::push(literals, String(~"function"));
  vec::push(literals, String(~"Bad expression statement."));
  vec::push(literals, String(~";"));
  vec::push(literals, String(~"stmt_list"));
  vec::push(literals, String(~"var"));
  vec::push(literals, String(~"}"));
  vec::push(literals, String(~"{"));
  vec::push(literals, String(~"Undefined."));
  vec::push(literals, String(~"Missing operator."));
  vec::push(literals, String(~"bp"));
  vec::push(literals, String(~"x"));
  vec::push(literals, String(~"first"));
  vec::push(literals, String(~"second"));
  vec::push(literals, String(~"binary"));
  vec::push(literals, Number(10f64));
  vec::push(literals, String(~"["));
  vec::push(literals, String(~"Bad lvalue."));
  vec::push(literals, Number(9f64));
  vec::push(literals, Number(70f64));
  vec::push(literals, String(~"unary"));
  vec::push(literals, String(~":"));
  vec::push(literals, String(~")"));
  vec::push(literals, String(~"]"));
  vec::push(literals, String(~"else"));
  vec::push(literals, String(~"true"));
  vec::push(literals, String(~"false"));
  vec::push(literals, String(~"null"));
  vec::push(literals, String(~"undefined"));
  vec::push(literals, String(~"NaN"));
  vec::push(literals, Number(f64::infinity));
  vec::push(literals, String(~"Infinity"));
  vec::push(literals, Number(f64::infinity));
  vec::push(literals, String(~"="));
  vec::push(literals, String(~"+="));
  vec::push(literals, String(~"-="));
  vec::push(literals, String(~"*="));
  vec::push(literals, String(~"/="));
  vec::push(literals, String(~"?"));
  vec::push(literals, Number(20f64));
  vec::push(literals, String(~"third"));
  vec::push(literals, String(~"ternary"));
  vec::push(literals, String(~"||"));
  vec::push(literals, Number(30f64));
  vec::push(literals, String(~"&&"));
  vec::push(literals, Number(35f64));
  vec::push(literals, String(~"==="));
  vec::push(literals, Number(40f64));
  vec::push(literals, String(~"!=="));
  vec::push(literals, String(~"<"));
  vec::push(literals, Number(45f64));
  vec::push(literals, String(~"<="));
  vec::push(literals, String(~">"));
  vec::push(literals, String(~">="));
  vec::push(literals, Number(50f64));
  vec::push(literals, Number(60f64));
  vec::push(literals, Number(80f64));
  vec::push(literals, String(~"Expected a property name."));
  vec::push(literals, Number(75f64));
  vec::push(literals, String(~"Expected a variable name."));
  vec::push(literals, String(~"!"));
  vec::push(literals, String(~"typeof"));
  vec::push(literals, String(~"Expected a parameter name."));
  vec::push(literals, String(~"Bad property name."));
  vec::push(literals, String(~"key"));
  vec::push(literals, String(~"Expected a new variable name."));
  vec::push(literals, String(~"if"));
  vec::push(literals, String(~"return"));
  vec::push(literals, String(~"Unreachable statement."));
  vec::push(literals, String(~"break"));
  vec::push(literals, String(~"source"));
  vec::push(literals, String(~"top_level"));
  vec::push(literals, String(~"debug"));
  vec::push(literals, String(~"=<>!+-*&|/%^"));
  vec::push(literals, String(~"=<>&|"));
  vec::push(literals, String(~"make_parse"));
  vec::push(literals, String(~"__module_deps__"));
  vec::push(literals, String(~"bytecode-table"));
  vec::push(literals, String(~"bytecodes_by_num"));
  vec::push(literals, String(~"bytecodes_by_name"));
  vec::push(literals, String(~"bc"));
  vec::push(literals, String(~"print_literal"));
  vec::push(literals, String(~"print_label"));
  vec::push(literals, String(~"args"));
  vec::push(literals, String(~"stackpop"));
  vec::push(literals, String(~"stackpush"));
  vec::push(literals, String(~"printargs"));
  vec::push(literals, String(~"nbc"));
  vec::push(literals, String(~"state"));
  vec::push(literals, String(~"bytecode"));
  vec::push(literals, String(~"pc"));
  vec::push(literals, String(~"idx"));
  vec::push(literals, String(~" /* "));
  vec::push(literals, String(~"literals"));
  vec::push(literals, String(~" */"));
  vec::push(literals, String(~"lbl"));
  vec::push(literals, String(~"label"));
  vec::push(literals, String(~"push_frame"));
  vec::push(literals, String(~"push_literal"));
  vec::push(literals, String(~"new_object"));
  vec::push(literals, String(~"new_array"));
  vec::push(literals, String(~"new_function"));
  vec::push(literals, String(~"get_slot_direct"));
  vec::push(literals, String(~"get_slot_indirect"));
  vec::push(literals, String(~"get_slot_direct_check"));
  vec::push(literals, String(~"set_slot_direct"));
  vec::push(literals, String(~"set_slot_indirect"));
  vec::push(literals, String(~"invoke"));
  vec::push(literals, String(~"opname"));
  vec::push(literals, String(~"arg0"));
  vec::push(literals, String(~"jmp"));
  vec::push(literals, String(~"jmp_unless"));
  vec::push(literals, String(~"dup"));
  vec::push(literals, String(~"2dup"));
  vec::push(literals, String(~"over"));
  vec::push(literals, String(~"over2"));
  vec::push(literals, String(~"swap"));
  vec::push(literals, String(~"un_not"));
  vec::push(literals, String(~"un_minus"));
  vec::push(literals, String(~"un_typeof"));
  vec::push(literals, String(~"bi_eq"));
  vec::push(literals, String(~"bi_gt"));
  vec::push(literals, String(~"bi_gte"));
  vec::push(literals, String(~"bi_add"));
  vec::push(literals, String(~"bi_sub"));
  vec::push(literals, String(~"bi_mul"));
  vec::push(literals, String(~"bi_div"));
  vec::push(literals, String(~"make_bytecode_table"));
  vec::push(literals, String(~"for_num"));
  vec::push(literals, String(~"for_name"));
  vec::push(literals, String(~"bcompile"));
  vec::push(literals, String(~"bytecode_table"));
  vec::push(literals, String(~"assert"));
  vec::push(literals, String(~"dispatch"));
  vec::push(literals, String(~"mkstate"));
  vec::push(literals, String(~"obj"));
  vec::push(literals, String(~"console"));
  vec::push(literals, String(~"log"));
  vec::push(literals, String(~"ASSERTION FAILURE"));
  vec::push(literals, String(~"Assertion failure"));
  vec::push(literals, String(~"encode_uint"));
  vec::push(literals, String(~"encode_str"));
  vec::push(literals, String(~"functions"));
  vec::push(literals, String(~"val"));
  vec::push(literals, String(~"nn"));
  vec::push(literals, String(~"l"));
  vec::push(literals, String(~"newf"));
  vec::push(literals, String(~"max_stack"));
  vec::push(literals, String(~"stack_depth"));
  vec::push(literals, String(~"loop_label_stack"));
  vec::push(literals, String(~"bytecode_op"));
  vec::push(literals, String(~"op"));
  vec::push(literals, String(~"cf"));
  vec::push(literals, String(~"current_func"));
  vec::push(literals, String(~"can_fall_off"));
  vec::push(literals, String(~"emit"));
  vec::push(literals, String(~"func_id"));
  vec::push(literals, String(~": "));
  vec::push(literals, String(~"decompile"));
  vec::push(literals, String(~"out"));
  vec::push(literals, String(~"msb"));
  vec::push(literals, String(~"lsb"));
  vec::push(literals, Number(128f64));
  vec::push(literals, String(~"Math"));
  vec::push(literals, String(~"floor"));
  vec::push(literals, String(~"charCodeAt"));
  vec::push(literals, String(~"lv"));
  vec::push(literals, String(~"boolean"));
  vec::push(literals, Number(5f64));
  vec::push(literals, String(~"UNKNOWN LITERAL TYPE"));
  vec::push(literals, Number(6f64));
  vec::push(literals, String(~"encode"));
  vec::push(literals, String(~"<undefined>"));
  vec::push(literals, String(~"new_label"));
  vec::push(literals, String(~"set_label"));
  vec::push(literals, String(~"lls"));
  vec::push(literals, String(~"peek_loop_label"));
  vec::push(literals, String(~"pop_loop_label"));
  vec::push(literals, String(~"push_loop_label"));
  vec::push(literals, String(~"tree_lst"));
  vec::push(literals, String(~"bcompile_stmt"));
  vec::push(literals, String(~"bcompile_stmts"));
  vec::push(literals, String(~"tree"));
  vec::push(literals, String(~"bcompile_expr"));
  vec::push(literals, String(~"depth"));
  vec::push(literals, String(~"which"));
  vec::push(literals, String(~"extra_name"));
  vec::push(literals, String(~"is_stmt"));
  vec::push(literals, String(~"mode"));
  vec::push(literals, String(~"sd_before"));
  vec::push(literals, String(~"sd_after"));
  vec::push(literals, String(~"mergeLabel"));
  vec::push(literals, String(~"falseLabel"));
  vec::push(literals, String(~"startLabel"));
  vec::push(literals, String(~"testLabel"));
  vec::push(literals, String(~"endLabel"));
  vec::push(literals, String(~"this_func"));
  vec::push(literals, String(~"new_func"));
  vec::push(literals, String(~"parse_tree"));
  vec::push(literals, String(~"make_bcompile"));
  vec::push(literals, String(~"compile_from_source"));
  vec::push(literals, String(~"{ return 1+2; }"));
  vec::push(literals, String(~"isFinite parseInt isNaN "));
  vec::push(literals, String(~"Boolean String Function Math "));
  vec::push(literals, String(~"console arguments now define document"));
}
